"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[14412],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(a),p=r,b=m["".concat(o,".").concat(p)]||m[p]||d[p]||l;return a?n.createElement(b,s(s({ref:t},u),{},{components:a})):n.createElement(b,s({ref:t},u))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[m]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<l;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},88978:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var n=a(87462),r=(a(67294),a(3905)),l=a(65488),s=a(85162);const i={id:"or",title:"or()",slug:"/or",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml"},o=void 0,c={unversionedId:"generated/or",id:"generated/or",title:"or()",description:"Parameters",source:"@site/_supabase_js/generated/or.mdx",sourceDirName:"generated",slug:"/or",permalink:"/docs/reference/javascript/or",draft:!1,editUrl:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml",tags:[],version:"current",frontMatter:{id:"or",title:"or()",slug:"/or",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml"}},u={},m=[{value:"Parameters",id:"parameters",level:2},{value:"Notes",id:"notes",level:2},{value:"Examples",id:"examples",level:2},{value:"With <code>select()</code>",id:"with-select",level:3},{value:"Use <code>or</code> with <code>and</code>",id:"use-or-with-and",level:3},{value:"Use <code>or</code> on foreign tables",id:"use-or-on-foreign-tables",level:3}],d={toc:m};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase\n  .from('countries')\n  .select('name')\n  .or('id.eq.2,name.eq.Algeria')\n")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("ul",{className:"method-list-group"},(0,r.kt)("li",{className:"method-list-item"},(0,r.kt)("h4",{className:"method-list-item-label"},(0,r.kt)("span",{className:"method-list-item-label-name"},"filters"),(0,r.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,r.kt)("span",{className:"method-list-item-validation"},(0,r.kt)("code",null,"string"))),(0,r.kt)("div",{class:"method-list-item-description"},(0,r.kt)("p",null,"No description provided. "))),(0,r.kt)("li",{className:"method-list-item"},(0,r.kt)("h4",{className:"method-list-item-label"},(0,r.kt)("span",{className:"method-list-item-label-name"},"foreignTable"),(0,r.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,r.kt)("span",{className:"method-list-item-validation"},(0,r.kt)("code",null,"object"))),(0,r.kt)("div",{class:"method-list-item-description"},(0,r.kt)("p",null,"No description provided. ")),(0,r.kt)("ul",{className:"method-list-group"},(0,r.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,r.kt)("li",{className:"method-list-item"},(0,r.kt)("h4",{className:"method-list-item-label"},(0,r.kt)("span",{className:"method-list-item-label-name"},"foreignTable"),(0,r.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,r.kt)("span",{className:"method-list-item-validation"},(0,r.kt)("code",null,"string"))),(0,r.kt)("div",{class:"method-list-item-description"},(0,r.kt)("p",null,"No description provided. ")))))),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("p",null,"or() expects you to use the raw PostgREST syntax for the filter names and values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'.or(\'id.in.(5,6,7), arraycol.cs.{"a","b"}\')  // Use `()` for `in` filter, `{}` for array values and `cs` for `contains()`.\n.or(\'id.in.(5,6,7), arraycol.cd.{"a","b"}\')  // Use `cd` for `containedBy()`\n')),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"with-select"},"With ",(0,r.kt)("inlineCode",{parentName:"h3"},"select()")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"create table\n  countries (id int8 primary key, name text);\n\ninsert into\n  countries (id, name)\nvalues\n  (1, 'Afghanistan'),\n  (2, 'Albania'),\n  (3, 'Algeria');\n"))),(0,r.kt)(s.Z,{default:!0,value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase\n  .from('countries')\n  .select('name')\n  .or('id.eq.2,name.eq.Algeria')\n"))),(0,r.kt)(s.Z,{value:"result",label:"Result",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "name": "Albania"\n    },\n    {\n      "name": "Algeria"\n    }\n  ],\n  "status": 200,\n  "statusText": "OK"\n}\n')))),(0,r.kt)("h3",{id:"use-or-with-and"},"Use ",(0,r.kt)("inlineCode",{parentName:"h3"},"or")," with ",(0,r.kt)("inlineCode",{parentName:"h3"},"and")),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"create table\n  countries (id int8 primary key, name text);\n\ninsert into\n  countries (id, name)\nvalues\n  (1, 'Afghanistan'),\n  (2, 'Albania'),\n  (3, 'Algeria');\n"))),(0,r.kt)(s.Z,{default:!0,value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase\n  .from('countries')\n  .select('name')\n  .or('id.gt.3,and(id.eq.1,name.eq.Afghanistan)')\n"))),(0,r.kt)(s.Z,{value:"result",label:"Result",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "name": "Afghanistan"\n    }\n  ],\n  "status": 200,\n  "statusText": "OK"\n}\n')))),(0,r.kt)("h3",{id:"use-or-on-foreign-tables"},"Use ",(0,r.kt)("inlineCode",{parentName:"h3"},"or")," on foreign tables"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"create table\n  countries (id int8 primary key, name text);\ncreate table\n  cities (\n    id int8 primary key,\n    country_id int8 not null references countries,\n    name text\n  );\n\ninsert into\n  countries (id, name)\nvalues\n  (1, 'Germany'),\n  (2, 'Indonesia');\ninsert into\n  cities (id, country_id, name)\nvalues\n  (1, 2, 'Bali'),\n  (2, 1, 'Munich');\n"))),(0,r.kt)(s.Z,{default:!0,value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase\n  .from('countries')\n  .select(`\n    name,\n    cities!inner (\n      name\n    )\n  `)\n  .or('country_id.eq.1,name.eq.Beijing', { foreignTable: 'cities' })\n"))),(0,r.kt)(s.Z,{value:"result",label:"Result",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "name": "Germany",\n      "cities": [\n        {\n          "name": "Munich"\n        }\n      ]\n    }\n  ],\n  "status": 200,\n  "statusText": "OK"\n}\n')))))}p.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,s),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>p});var n=a(87462),r=a(67294),l=a(86010),s=a(72389),i=a(67392),o=a(7094),c=a(12466);const u="tabList__CuJ",m="tabItem_LNqP";function d(e){const{lazy:t,block:a,defaultValue:s,values:d,groupId:p,className:b}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=d??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),v=(0,i.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===s?s:s??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==k&&!f.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:y}=(0,o.U)(),[N,T]=(0,r.useState)(k),x=[],{blockElementScrollPositionUntilNextRender:w}=(0,c.o5)();if(null!=p){const e=g[p];null!=e&&e!==N&&f.some((t=>t.value===e))&&T(e)}const O=e=>{const t=e.currentTarget,a=x.indexOf(t),n=f[a].value;n!==N&&(w(t),T(n),null!=p&&y(p,String(n)))},j=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const a=x.indexOf(e.currentTarget)+1;t=x[a]??x[0];break}case"ArrowLeft":{const a=x.indexOf(e.currentTarget)-1;t=x[a]??x[x.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},b)},f.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>x.push(e),onKeyDown:j,onClick:O},s,{className:(0,l.Z)("tabs__item",m,s?.className,{"tabs__item--active":N===t})}),a??t)}))),t?(0,r.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function p(e){const t=(0,s.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}}}]);