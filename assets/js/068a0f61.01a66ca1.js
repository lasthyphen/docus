"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[13985],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var l=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,l,s=function(e,t){if(null==e)return{};var a,l,s={},i=Object.keys(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)a=i[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var o=l.createContext({}),d=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},m=function(e){var t=d(e.components);return l.createElement(o.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var a=e.components,s=e.mdxType,i=e.originalType,o=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),c=d(a),p=s,h=c["".concat(o,".").concat(p)]||c[p]||u[p]||i;return a?l.createElement(h,n(n({ref:t},m),{},{components:a})):l.createElement(h,n({ref:t},m))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=a.length,n=new Array(i);n[0]=p;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r[c]="string"==typeof e?e:s,n[1]=r;for(var d=2;d<i;d++)n[d]=a[d];return l.createElement.apply(null,n)}return l.createElement.apply(null,a)}p.displayName="MDXCreateElement"},47863:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>n,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var l=a(87462),s=(a(67294),a(3905));a(65488),a(85162);const i={id:"update",title:"Modify data: update()",slug:"/update",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml"},n=void 0,r={unversionedId:"generated/update",id:"version-v1/generated/update",title:"Modify data: update()",description:"Performs an UPDATE on the table.",source:"@site/_supabase_js_versioned_docs/version-v1/generated/update.mdx",sourceDirName:"generated",slug:"/update",permalink:"/docs/reference/javascript/v1/update",draft:!1,editUrl:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml",tags:[],version:"v1",frontMatter:{id:"update",title:"Modify data: update()",slug:"/update",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml"}},o={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Notes",id:"notes",level:2},{value:"Examples",id:"examples",level:2},{value:"Updating your data",id:"updating-your-data",level:3},{value:"Updating JSON data",id:"updating-json-data",level:3}],m={toc:d};function c(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,l.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Performs an UPDATE on the table."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase\n  .from('cities')\n  .update({ name: 'Middle Earth' })\n  .match({ name: 'Auckland' })\n")),(0,s.kt)("h2",{id:"parameters"},"Parameters"),(0,s.kt)("ul",{className:"method-list-group"},(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"values"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"Partial"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"The values to update."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"__namedParameters"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. ")),(0,s.kt)("ul",{className:"method-list-group"},(0,s.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"returning"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"minimal")," | ",(0,s.kt)("code",null,"representation"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"By default the updated record is returned. Set this to 'minimal' if you don't need this value.")),(0,s.kt)("ul",{className:"method-list-group"},(0,s.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},(0,s.kt)("code",null,"object")),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. "))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},(0,s.kt)("code",null,"object")),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. "))))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"count"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"null")," | ",(0,s.kt)("code",null,"exact")," | ",(0,s.kt)("code",null,"planned")," | ",(0,s.kt)("code",null,"estimated"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"Count algorithm to use to count rows in a table.")),(0,s.kt)("ul",{className:"method-list-group"},(0,s.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},(0,s.kt)("code",null,"object")),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. "))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},(0,s.kt)("code",null,"object")),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. "))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},(0,s.kt)("code",null,"object")),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. "))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"null"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. ")))))))),(0,s.kt)("h2",{id:"notes"},"Notes"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"update()")," should always be combined with ",(0,s.kt)("a",{parentName:"li",href:"/docs/reference/javascript/using-filters"},"Filters")," to target the item(s) you wish to update.")),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"updating-your-data"},"Updating your data"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase\n  .from('cities')\n  .update({ name: 'Middle Earth' })\n  .match({ name: 'Auckland' })\n")),(0,s.kt)("h3",{id:"updating-json-data"},"Updating JSON data"),(0,s.kt)("p",null,"Postgres offers a\n",(0,s.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-json.html"},"number of operators"),"\nfor working with JSON data. Right now it is only possible to update an entire JSON document,\nbut we are ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/PostgREST/postgrest/issues/465"},"working on ideas")," for updating individual keys."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase\n  .from('users')\n  .update(`\n    address: {\n      street: 'Melrose Place',\n      postcode: 90210\n    }\n  `)\n  .eq('address->postcode', 90210)\n")))}c.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>n});var l=a(67294),s=a(86010);const i="tabItem_Ymn6";function n(e){let{children:t,hidden:a,className:n}=e;return l.createElement("div",{role:"tabpanel",className:(0,s.Z)(i,n),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>p});var l=a(87462),s=a(67294),i=a(86010),n=a(72389),r=a(67392),o=a(7094),d=a(12466);const m="tabList__CuJ",c="tabItem_LNqP";function u(e){const{lazy:t,block:a,defaultValue:n,values:u,groupId:p,className:h}=e,b=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=u??b.map((e=>{let{props:{value:t,label:a,attributes:l}}=e;return{value:t,label:a,attributes:l}})),v=(0,r.l)(k,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===n?n:n??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==f&&!k.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:g}=(0,o.U)(),[y,j]=(0,s.useState)(f),w=[],{blockElementScrollPositionUntilNextRender:O}=(0,d.o5)();if(null!=p){const e=N[p];null!=e&&e!==y&&k.some((t=>t.value===e))&&j(e)}const E=e=>{const t=e.currentTarget,a=w.indexOf(t),l=k[a].value;l!==y&&(O(t),j(l),null!=p&&g(p,String(l)))},P=e=>{let t=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]??w[w.length-1];break}}t?.focus()};return s.createElement("div",{className:(0,i.Z)("tabs-container",m)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},h)},k.map((e=>{let{value:t,label:a,attributes:n}=e;return s.createElement("li",(0,l.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>w.push(e),onKeyDown:P,onClick:E},n,{className:(0,i.Z)("tabs__item",c,n?.className,{"tabs__item--active":y===t})}),a??t)}))),t?(0,s.cloneElement)(b.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function p(e){const t=(0,n.Z)();return s.createElement(u,(0,l.Z)({key:String(t)},e))}}}]);