"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[44384],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var l=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,s=function(e,t){if(null==e)return{};var a,l,s={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var i=l.createContext({}),c=function(e){var t=l.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=c(e.components);return l.createElement(i.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var a=e.components,s=e.mdxType,n=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(a),d=s,b=m["".concat(i,".").concat(d)]||m[d]||p[d]||n;return a?l.createElement(b,r(r({ref:t},u),{},{components:a})):l.createElement(b,r({ref:t},u))}));function b(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=a.length,r=new Array(n);r[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[m]="string"==typeof e?e:s,r[1]=o;for(var c=2;c<n;c++)r[c]=a[c];return l.createElement.apply(null,r)}return l.createElement.apply(null,a)}d.displayName="MDXCreateElement"},24421:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>m});var l=a(87462),s=(a(67294),a(3905)),n=a(65488),r=a(85162);const o={id:"rpc",title:"Postgres functions: rpc()",slug:"/rpc",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml"},i=void 0,c={unversionedId:"generated/rpc",id:"generated/rpc",title:"Postgres functions: rpc()",description:"You can call Postgres functions as Remote Procedure Calls, logic in your database that you can execute from anywhere.",source:"@site/_supabase_js/generated/rpc.mdx",sourceDirName:"generated",slug:"/rpc",permalink:"/docs/reference/javascript/rpc",draft:!1,editUrl:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml",tags:[],version:"current",frontMatter:{id:"rpc",title:"Postgres functions: rpc()",slug:"/rpc",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml"}},u={},m=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Call a Postgres function without arguments",id:"call-a-postgres-function-without-arguments",level:3},{value:"Call a Postgres function with arguments",id:"call-a-postgres-function-with-arguments",level:3},{value:"Bulk processing",id:"bulk-processing",level:3},{value:"Call a Postgres function with filters",id:"call-a-postgres-function-with-filters",level:3}],p={toc:m};function d(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"You can call Postgres functions as ",(0,s.kt)("em",{parentName:"p"},"Remote Procedure Calls"),", logic in your database that you can execute from anywhere.\nFunctions are useful when the logic rarely changes\u2014like for password resets and updates."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"create or replace function hello_world() returns text as $$\n  select 'Hello world';\n$$ language sql;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase.rpc('hello_world')\n")),(0,s.kt)("h2",{id:"parameters"},"Parameters"),(0,s.kt)("ul",{className:"method-list-group"},(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"fn"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"FunctionName"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. "))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"args"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. "))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"options"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. ")),(0,s.kt)("ul",{className:"method-list-group"},(0,s.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"count"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"exact")," | ",(0,s.kt)("code",null,"planned")," | ",(0,s.kt)("code",null,"estimated"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. "))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"head"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"boolean"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. ")))))),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"call-a-postgres-function-without-arguments"},"Call a Postgres function without arguments"),(0,s.kt)(n.Z,{mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"create function hello_world() returns text as $$\n  select 'Hello world';\n$$ language sql;\n"))),(0,s.kt)(r.Z,{default:!0,value:"js",label:"JavaScript",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase.rpc('hello_world')\n"))),(0,s.kt)(r.Z,{value:"result",label:"Result",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": "Hello world",\n  "status": 200,\n  "statusText": "OK"\n}\n')))),(0,s.kt)("h3",{id:"call-a-postgres-function-with-arguments"},"Call a Postgres function with arguments"),(0,s.kt)(n.Z,{mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"create function echo(say text) returns text as $$\n  select say;\n$$ language sql;\n"))),(0,s.kt)(r.Z,{default:!0,value:"js",label:"JavaScript",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase.rpc('echo', { say: '\ud83d\udc4b' })\n"))),(0,s.kt)(r.Z,{value:"result",label:"Result",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": "\ud83d\udc4b",\n  "status": 200,\n  "statusText": "OK"\n}\n')))),(0,s.kt)("h3",{id:"bulk-processing"},"Bulk processing"),(0,s.kt)("p",null,"You can process large payloads by passing in an array as an argument:"),(0,s.kt)(n.Z,{mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"create function add_one_each(arr int[]) returns int[] as $$\n  select array_agg(n + 1) from unnest(arr) as n;\n$$ language sql;\n"))),(0,s.kt)(r.Z,{default:!0,value:"js",label:"JavaScript",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase.rpc('add_one_each', { arr: [1, 2, 3] })\n"))),(0,s.kt)(r.Z,{value:"result",label:"Result",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    2,\n    3,\n    4\n  ],\n  "status": 200,\n  "statusText": "OK"\n}\n')))),(0,s.kt)("h3",{id:"call-a-postgres-function-with-filters"},"Call a Postgres function with filters"),(0,s.kt)("p",null,"Postgres functions that return tables can also be combined with\n",(0,s.kt)("a",{parentName:"p",href:"/docs/reference/javascript/using-filters"},"Filters")," and\n",(0,s.kt)("a",{parentName:"p",href:"/docs/reference/javascript/using-modifiers"},"Modifiers"),"."),(0,s.kt)(n.Z,{mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"create table\n  countries (id int8 primary key, name text);\n\ninsert into\n  countries (id, name)\nvalues\n  (1, 'France'),\n  (2, 'United Kingdom');\n\ncreate function list_stored_countries() returns setof countries as $$\n  select * from countries;\n$$ language sql;\n"))),(0,s.kt)(r.Z,{default:!0,value:"js",label:"JavaScript",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const { data, error } = await supabase\n  .rpc('list_stored_countries')\n  .eq('id', 1)\n  .single()\n"))),(0,s.kt)(r.Z,{value:"result",label:"Result",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "id": 1,\n    "name": "France"\n  },\n  "status": 200,\n  "statusText": "OK"\n}\n')))))}d.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>r});var l=a(67294),s=a(86010);const n="tabItem_Ymn6";function r(e){let{children:t,hidden:a,className:r}=e;return l.createElement("div",{role:"tabpanel",className:(0,s.Z)(n,r),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>d});var l=a(87462),s=a(67294),n=a(86010),r=a(72389),o=a(67392),i=a(7094),c=a(12466);const u="tabList__CuJ",m="tabItem_LNqP";function p(e){const{lazy:t,block:a,defaultValue:r,values:p,groupId:d,className:b}=e,h=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=p??h.map((e=>{let{props:{value:t,label:a,attributes:l}}=e;return{value:t,label:a,attributes:l}})),k=(0,o.l)(g,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===r?r:r??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==f&&!g.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:y}=(0,i.U)(),[N,w]=(0,s.useState)(f),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,c.o5)();if(null!=d){const e=v[d];null!=e&&e!==N&&g.some((t=>t.value===e))&&w(e)}const j=e=>{const t=e.currentTarget,a=T.indexOf(t),l=g[a].value;l!==N&&(x(t),w(l),null!=d&&y(d,String(l)))},_=e=>{let t=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{const a=T.indexOf(e.currentTarget)+1;t=T[a]??T[0];break}case"ArrowLeft":{const a=T.indexOf(e.currentTarget)-1;t=T[a]??T[T.length-1];break}}t?.focus()};return s.createElement("div",{className:(0,n.Z)("tabs-container",u)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":a},b)},g.map((e=>{let{value:t,label:a,attributes:r}=e;return s.createElement("li",(0,l.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:_,onClick:j},r,{className:(0,n.Z)("tabs__item",m,r?.className,{"tabs__item--active":N===t})}),a??t)}))),t?(0,s.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,r.Z)();return s.createElement(p,(0,l.Z)({key:String(t)},e))}}}]);