"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[9270],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var l=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,l,s=function(e,t){if(null==e)return{};var a,l,s={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var o=l.createContext({}),m=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=m(e.components);return l.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},p=l.forwardRef((function(e,t){var a=e.components,s=e.mdxType,n=e.originalType,o=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=m(a),p=s,h=u["".concat(o,".").concat(p)]||u[p]||d[p]||n;return a?l.createElement(h,i(i({ref:t},c),{},{components:a})):l.createElement(h,i({ref:t},c))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=a.length,i=new Array(n);i[0]=p;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r[u]="string"==typeof e?e:s,i[1]=r;for(var m=2;m<n;m++)i[m]=a[m];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}p.displayName="MDXCreateElement"},50082:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>r,toc:()=>m});var l=a(87462),s=(a(67294),a(3905));a(65488),a(85162);const n={id:"auth-api-createuser",title:"createUser()",slug:"/auth-api-createuser",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml"},i=void 0,r={unversionedId:"generated/auth-api-createuser",id:"version-v1/generated/auth-api-createuser",title:"createUser()",description:"Creates a new user.",source:"@site/_supabase_js_versioned_docs/version-v1/generated/auth-api-createuser.mdx",sourceDirName:"generated",slug:"/auth-api-createuser",permalink:"/docs/reference/javascript/v1/auth-api-createuser",draft:!1,editUrl:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml",tags:[],version:"v1",frontMatter:{id:"auth-api-createuser",title:"createUser()",slug:"/auth-api-createuser",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml"}},o={},m=[{value:"Parameters",id:"parameters",level:2},{value:"Notes",id:"notes",level:2},{value:"Examples",id:"examples",level:2},{value:"Create a new user.",id:"create-a-new-user",level:3},{value:"Auto-confirm email.",id:"auto-confirm-email",level:3},{value:"Auto-confirm phone.",id:"auto-confirm-phone",level:3}],c={toc:m};function u(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,l.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Creates a new user."),(0,s.kt)("p",null,"This function should only be called on a server. Never expose your ",(0,s.kt)("inlineCode",{parentName:"p"},"service_role")," key in the browser."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.api.createUser({\n  email: 'user@email.com',\n  password: 'password',\n  user_metadata: { name: 'Yoda' }\n})\n")),(0,s.kt)("h2",{id:"parameters"},"Parameters"),(0,s.kt)("ul",{className:"method-list-group"},(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"AdminUserAttributes"),(0,s.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"No description provided. ")),(0,s.kt)("ul",{className:"method-list-group"},(0,s.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"app_metadata"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"A custom data object for app_metadata that."),(0,s.kt)("p",null,"Only a service role can modify."),(0,s.kt)("p",null,"Can be any JSON that includes app-specific info, such as identity providers, roles, and other\naccess control information."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"data"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"A custom data object for user_metadata that a user can modify. Can be any JSON."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"email"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"string"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"The user's email."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"email_change_token"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"string"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"An email change token."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"email_confirm"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"boolean"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"Sets if a user has confirmed their email address."),(0,s.kt)("p",null,"Only a service role can modify."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"password"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"string"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"The user's password."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"phone"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"string"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"The user's phone."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"phone_confirm"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"boolean"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"Sets if a user has confirmed their phone number."),(0,s.kt)("p",null,"Only a service role can modify."))),(0,s.kt)("li",{className:"method-list-item"},(0,s.kt)("h4",{className:"method-list-item-label"},(0,s.kt)("span",{className:"method-list-item-label-name"},"user_metadata"),(0,s.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,s.kt)("span",{className:"method-list-item-validation"},(0,s.kt)("code",null,"object"))),(0,s.kt)("div",{class:"method-list-item-description"},(0,s.kt)("p",null,"A custom data object for user_metadata."),(0,s.kt)("p",null,"Can be any JSON."),(0,s.kt)("p",null,"Only a service role can modify."),(0,s.kt)("p",null,"Note: When using the GoTrueAdminApi and wanting to modify a user's user_metadata,\nthis attribute is used instead of UserAttributes data.")))))),(0,s.kt)("h2",{id:"notes"},"Notes"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Requires a ",(0,s.kt)("inlineCode",{parentName:"li"},"service_role")," key."),(0,s.kt)("li",{parentName:"ul"},"This function should be called on a server. Never expose your ",(0,s.kt)("inlineCode",{parentName:"li"},"service_role")," key in the browser."),(0,s.kt)("li",{parentName:"ul"},"If you do not provide the ",(0,s.kt)("inlineCode",{parentName:"li"},"email_confirm")," and ",(0,s.kt)("inlineCode",{parentName:"li"},"phone_confirm")," options to this function, both will default to false.")),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"create-a-new-user"},"Create a new user."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.api.createUser({\n  email: 'user@email.com',\n  password: 'password',\n  user_metadata: { name: 'Yoda' }\n})\n")),(0,s.kt)("h3",{id:"auto-confirm-email"},"Auto-confirm email."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.api.createUser({\n  email: 'user@email.com',\n  email_confirm: true\n})\n")),(0,s.kt)("h3",{id:"auto-confirm-phone"},"Auto-confirm phone."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.api.createUser({\n  phone: '1234567890',\n  phone_confirm: true\n})\n")))}u.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var l=a(67294),s=a(86010);const n="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return l.createElement("div",{role:"tabpanel",className:(0,s.Z)(n,i),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>p});var l=a(87462),s=a(67294),n=a(86010),i=a(72389),r=a(67392),o=a(7094),m=a(12466);const c="tabList__CuJ",u="tabItem_LNqP";function d(e){const{lazy:t,block:a,defaultValue:i,values:d,groupId:p,className:h}=e,b=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=d??b.map((e=>{let{props:{value:t,label:a,attributes:l}}=e;return{value:t,label:a,attributes:l}})),f=(0,r.l)(k,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==v&&!k.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:y}=(0,o.U)(),[g,w]=(0,s.useState)(v),_=[],{blockElementScrollPositionUntilNextRender:O}=(0,m.o5)();if(null!=p){const e=N[p];null!=e&&e!==g&&k.some((t=>t.value===e))&&w(e)}const j=e=>{const t=e.currentTarget,a=_.indexOf(t),l=k[a].value;l!==g&&(O(t),w(l),null!=p&&y(p,String(l)))},E=e=>{let t=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{const a=_.indexOf(e.currentTarget)+1;t=_[a]??_[0];break}case"ArrowLeft":{const a=_.indexOf(e.currentTarget)-1;t=_[a]??_[_.length-1];break}}t?.focus()};return s.createElement("div",{className:(0,n.Z)("tabs-container",c)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":a},h)},k.map((e=>{let{value:t,label:a,attributes:i}=e;return s.createElement("li",(0,l.Z)({role:"tab",tabIndex:g===t?0:-1,"aria-selected":g===t,key:t,ref:e=>_.push(e),onKeyDown:E,onClick:j},i,{className:(0,n.Z)("tabs__item",u,i?.className,{"tabs__item--active":g===t})}),a??t)}))),t?(0,s.cloneElement)(b.filter((e=>e.props.value===g))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}function p(e){const t=(0,i.Z)();return s.createElement(d,(0,l.Z)({key:String(t)},e))}}}]);