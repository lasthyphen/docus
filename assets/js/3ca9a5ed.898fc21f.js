"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[46659],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(h,s(s({ref:t},p),{},{components:n})):a.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var u=2;u<r;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),o=n(86010);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,s),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),o=n(67294),r=n(86010),s=n(72389),i=n(67392),l=n(7094),u=n(12466);const p="tabList__CuJ",c="tabItem_LNqP";function d(e){const{lazy:t,block:n,defaultValue:s,values:d,groupId:m,className:h}=e,g=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),f=(0,i.l)(b,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===s?s:s??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:w}=(0,l.U)(),[I,y]=(0,o.useState)(v),N=[],{blockElementScrollPositionUntilNextRender:A}=(0,u.o5)();if(null!=m){const e=k[m];null!=e&&e!==I&&b.some((t=>t.value===e))&&y(e)}const P=e=>{const t=e.currentTarget,n=N.indexOf(t),a=b[n].value;a!==I&&(A(t),y(a),null!=m&&w(m,String(a)))},S=e=>{let t=null;switch(e.key){case"Enter":P(e);break;case"ArrowRight":{const n=N.indexOf(e.currentTarget)+1;t=N[n]??N[0];break}case"ArrowLeft":{const n=N.indexOf(e.currentTarget)-1;t=N[n]??N[N.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",p)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},h)},b.map((e=>{let{value:t,label:n,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:I===t?0:-1,"aria-selected":I===t,key:t,ref:e=>N.push(e),onKeyDown:S,onClick:P},s,{className:(0,r.Z)("tabs__item",c,s?.className,{"tabs__item--active":I===t})}),n??t)}))),t?(0,o.cloneElement)(g.filter((e=>e.props.value===I))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==I})))))}function m(e){const t=(0,s.Z)();return o.createElement(d,(0,a.Z)({key:String(t)},e))}},66788:(e,t,n)=>{n.d(t,{ZP:()=>p});var a=n(87462),o=(n(67294),n(3905)),r=n(65488),s=n(85162);const i={toc:[]};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"-- Create a table for public profiles\ncreate table profiles (\n  id uuid references auth.users not null primary key,\n  updated_at timestamp with time zone,\n  username text unique,\n  full_name text,\n  avatar_url text,\n  website text,\n\n  constraint username_length check (char_length(username) >= 3)\n);\n-- Set up Row Level Security (RLS)\n-- See https://supabase.com/docs/guides/auth/row-level-security for more details.\nalter table profiles\n  enable row level security;\n\ncreate policy \"Public profiles are viewable by everyone.\" on profiles\n  for select using (true);\n\ncreate policy \"Users can insert their own profile.\" on profiles\n  for insert with check (auth.uid() = id);\n\ncreate policy \"Users can update own profile.\" on profiles\n  for update using (auth.uid() = id);\n\n-- This trigger automatically creates a profile entry when a new user signs up via Supabase Auth.\n-- See https://supabase.com/docs/guides/auth/managing-user-data#using-triggers for more details.\ncreate function public.handle_new_user()\nreturns trigger as $$\nbegin\n  insert into public.profiles (id, full_name, avatar_url)\n  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');\n  return new;\nend;\n$$ language plpgsql security definer;\ncreate trigger on_auth_user_created\n  after insert on auth.users\n  for each row execute procedure public.handle_new_user();\n\n-- Set up Storage!\ninsert into storage.buckets (id, name)\n  values ('avatars', 'avatars');\n\n-- Set up access controls for storage.\n-- See https://supabase.com/docs/guides/storage#policy-examples for more details.\ncreate policy \"Avatar images are publicly accessible.\" on storage.objects\n  for select using (bucket_id = 'avatars');\n\ncreate policy \"Anyone can upload an avatar.\" on storage.objects\n  for insert with check (bucket_id = 'avatars');\n\ncreate policy \"Anyone can update their own avatar.\" on storage.objects\n  for update using (auth.uid() = owner) with check (bucket_id = 'avatars');\n")))}l.isMDXComponent=!0;const u={toc:[{value:"Project set up",id:"project-set-up",level:2},{value:"Create a project",id:"create-a-project",level:3},{value:"Set up the database schema",id:"set-up-the-database-schema",level:3},{value:"Get the API Keys",id:"get-the-api-keys",level:3}]};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"project-set-up"},"Project set up"),(0,o.kt)("p",null,'Before we start building we\'re going to set up our Database and API. This is as simple as starting a new Project in Supabase\nand then creating a "schema" inside the database.'),(0,o.kt)("h3",{id:"create-a-project"},"Create a project"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to ",(0,o.kt)("a",{parentName:"li",href:"https://app.supabase.com"},"app.supabase.com"),"."),(0,o.kt)("li",{parentName:"ol"},'Click on "New Project".'),(0,o.kt)("li",{parentName:"ol"},"Enter your project details."),(0,o.kt)("li",{parentName:"ol"},"Wait for the new database to launch.")),(0,o.kt)("h3",{id:"set-up-the-database-schema"},"Set up the database schema"),(0,o.kt)("p",null,'Now we are going to set up the database schema. We can use the "User Management Starter" quickstart in the SQL Editor,\nor you can just copy/paste the SQL from below and run it yourself.'),(0,o.kt)(r.Z,{groupId:"language",defaultValue:"dashboard",values:[{label:"Dashboard",value:"dashboard"},{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"dashboard",mdxType:"TabItem"},(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to the ",(0,o.kt)("a",{parentName:"li",href:"https://app.supabase.com/project/_/sql"},"SQL Editor")," page in the Dashboard."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"User Management Starter"),"."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"Run"),".")),(0,o.kt)("video",{width:"99%",muted:!0,playsInline:!0,controls:"true"},(0,o.kt)("source",{src:"/docs/videos/sql-user-management-starter.mp4",type:"video/mp4",muted:!0,playsInline:!0}))),(0,o.kt)(s.Z,{value:"sql",mdxType:"TabItem"},(0,o.kt)(l,{mdxType:"UserManagementSQLTemplate"}))),(0,o.kt)("h3",{id:"get-the-api-keys"},"Get the API Keys"),(0,o.kt)("p",null,"Now that you've created some database tables, you are ready to insert data using the auto-generated API.\nWe just need to get the URL and ",(0,o.kt)("inlineCode",{parentName:"p"},"anon")," key from the API settings."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Go to the ",(0,o.kt)("a",{parentName:"li",href:"https://app.supabase.com/project/_/settings"},"Settings")," page in the Dashboard."),(0,o.kt)("li",{parentName:"ol"},"Click ",(0,o.kt)("strong",{parentName:"li"},"API")," in the sidebar."),(0,o.kt)("li",{parentName:"ol"},"Find your API ",(0,o.kt)("inlineCode",{parentName:"li"},"URL"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"anon"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"service_role")," keys on this page.")),(0,o.kt)("video",{width:"99%",muted:!0,playsInline:!0,controls:"true"},(0,o.kt)("source",{src:"/docs/videos/api/api-url-and-key.mp4",type:"video/mp4",muted:!0,playsInline:!0})))}p.isMDXComponent=!0},27021:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),o=(n(67294),n(3905));const r={toc:[{value:"Intro",id:"intro",level:2}]};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"intro"},"Intro"),(0,o.kt)("p",null,"This example provides the steps to build a basic user management app. It includes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Supabase ",(0,o.kt)("a",{parentName:"li",href:"/docs/guides/database"},"Database"),": a Postgres database for storing your user data."),(0,o.kt)("li",{parentName:"ul"},"Supabase ",(0,o.kt)("a",{parentName:"li",href:"/docs/guides/auth"},"Auth"),": users can sign in with magic links (no passwords, only email)."),(0,o.kt)("li",{parentName:"ul"},"Supabase ",(0,o.kt)("a",{parentName:"li",href:"/docs/guides/storage"},"Storage"),": users can upload a photo."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/guides/auth#row-level-security"},"Row Level Security"),": data is protected so that individuals can only access their own data."),(0,o.kt)("li",{parentName:"ul"},"Instant ",(0,o.kt)("a",{parentName:"li",href:"/docs/guides/api"},"APIs"),": APIs will be automatically generated when you create your database tables.")),(0,o.kt)("p",null,"By the end of this guide you'll have an app which allows users to login and update some basic profile details:"))}s.isMDXComponent=!0},67067:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var a=n(87462),o=(n(67294),n(3905)),r=(n(65488),n(85162),n(27021)),s=n(66788);const i={id:"with-ionic-react",title:"Quickstart: Ionic React",description:"Learn how to use Supabase in your Ionic React App.",sidebar_label:"Ionic React"},l=void 0,u={unversionedId:"guides/with-ionic-react",id:"guides/with-ionic-react",title:"Quickstart: Ionic React",description:"Learn how to use Supabase in your Ionic React App.",source:"@site/docs/guides/with-ionic-react.mdx",sourceDirName:"guides",slug:"/guides/with-ionic-react",permalink:"/docs/guides/with-ionic-react",draft:!1,editUrl:"https://github.com/docs/guides/with-ionic-react.mdx",tags:[],version:"current",frontMatter:{id:"with-ionic-react",title:"Quickstart: Ionic React",description:"Learn how to use Supabase in your Ionic React App.",sidebar_label:"Ionic React"}},p={},c=[{value:"GitHub",id:"github",level:3},{value:"Building the App",id:"building-the-app",level:2},{value:"Initialize an Ionic React app",id:"initialize-an-ionic-react-app",level:3},{value:"Set up a Login route",id:"set-up-a-login-route",level:3},{value:"Account page",id:"account-page",level:3},{value:"Launch!",id:"launch",level:3},{value:"Bonus: Profile photos",id:"bonus-profile-photos",level:2},{value:"Create an upload widget",id:"create-an-upload-widget",level:3},{value:"Add the new widget",id:"add-the-new-widget",level:3},{value:"Next steps",id:"next-steps",level:2}],d={toc:c};function m(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(r.ZP,{mdxType:"QuickstartIntro"}),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Supabase User Management example",src:n(51918).Z,width:"2414",height:"1790"})),(0,o.kt)("h3",{id:"github"},"GitHub"),(0,o.kt)("p",null,"Should you get stuck while working through the guide, refer to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mhartington/supabase-ionic-react"},"this repo"),"."),(0,o.kt)(s.ZP,{mdxType:"ProjectSetup"}),(0,o.kt)("h2",{id:"building-the-app"},"Building the App"),(0,o.kt)("p",null,"Let's start building the React app from scratch."),(0,o.kt)("h3",{id:"initialize-an-ionic-react-app"},"Initialize an Ionic React app"),(0,o.kt)("p",null,"We can use the ",(0,o.kt)("a",{parentName:"p",href:"https://ionicframework.com/docs/cli"},"Ionic CLI")," to initialize\nan app called ",(0,o.kt)("inlineCode",{parentName:"p"},"supabase-ionic-react"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @ionic/cli\nionic start supabase-ionic-react blank --type react\ncd supabase-ionic-react\n")),(0,o.kt)("p",null,"Then let's install the only additional dependency: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/supabase/supabase-js"},"supabase-js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @supabase/supabase-js\n")),(0,o.kt)("p",null,"And finally we want to save the environment variables in a ",(0,o.kt)("inlineCode",{parentName:"p"},".env"),".\nAll we need are the API URL and the ",(0,o.kt)("inlineCode",{parentName:"p"},"anon")," key that you copied ",(0,o.kt)("a",{parentName:"p",href:"#get-the-api-keys"},"earlier"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".env"',title:'".env"'},"REACT_APP_SUPABASE_URL=YOUR_SUPABASE_URL\nREACT_APP_SUPABASE_ANON_KEY=YOUR_SUPABASE_ANON_KEY\n")),(0,o.kt)("p",null,"Now that we have the API credentials in place, let's create a helper file to initialize the Supabase client. These variables will be exposed\non the browser, and that's completely fine since we have ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/auth#row-level-security"},"Row Level Security")," enabled on our Database."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/supabaseClient.js"',title:'"src/supabaseClient.js"'},"import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n")),(0,o.kt)("h3",{id:"set-up-a-login-route"},"Set up a Login route"),(0,o.kt)("p",null,"Let's set up a React component to manage logins and sign ups. We'll use Magic Links, so users can sign in with their email without using passwords."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/pages/Login.tsx"',title:'"/src/pages/Login.tsx"'},'import { useState } from \'react\';\nimport {\n  IonButton,\n  IonContent,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonToast,\n  useIonLoading,\n} from \'@ionic/react\';\nimport { supabase } from \'../supabaseClient\';\n\nexport function LoginPage() {\n  const [email, setEmail] = useState(\'\');\n\n  const [showLoading, hideLoading] = useIonLoading();\n  const [showToast ] = useIonToast();\n  const handleLogin = async (e: React.FormEvent<HTMLFormElement>) => {\n    console.log()\n    e.preventDefault();\n    await showLoading();\n    try {\n      await supabase.auth.signIn({ email });\n      await showToast({ message: \'Check your email for the login link!\' });\n    } catch (e: any) {\n      await showToast({ message: e.error_description || e.message , duration: 5000});\n    } finally {\n      await hideLoading();\n    }\n  };\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Login</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <div className="ion-padding">\n          <h1>Supabase + Ionic React</h1>\n          <p>Sign in via magic link with your email below</p>\n        </div>\n        <IonList inset={true}>\n          <form onSubmit={handleLogin}>\n            <IonItem>\n              <IonLabel position="stacked">Email</IonLabel>\n              <IonInput\n                value={email}\n                name="email"\n                onIonChange={(e) => setEmail(e.detail.value ?? \'\')}\n                type="email"\n              ></IonInput>\n            </IonItem>\n            <div className="ion-text-center">\n              <IonButton type="submit" fill="clear">\n                Login\n              </IonButton>\n            </div>\n          </form>\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n}\n')),(0,o.kt)("h3",{id:"account-page"},"Account page"),(0,o.kt)("p",null,"After a user is signed in we can allow them to edit their profile details and manage their account."),(0,o.kt)("p",null,"Let's create a new component for that called ",(0,o.kt)("inlineCode",{parentName:"p"},"Account.tsx"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/pages/Account.tsx"',title:'"src/pages/Account.tsx"'},"import {\n  IonButton,\n  IonContent,\n  IonHeader,\n  IonInput,\n  IonItem,\n  IonLabel,\n  IonPage,\n  IonTitle,\n  IonToolbar,\n  useIonLoading,\n  useIonToast,\n  useIonRouter\n} from '@ionic/react';\nimport { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\n\nexport function AccountPage() {\n  const [showLoading, hideLoading] = useIonLoading();\n  const [showToast] = useIonToast();\n  const [session] = useState(() => supabase.auth.session());\n  const router = useIonRouter();\n  const [profile, setProfile] = useState({\n    username: '',\n    website: '',\n    avatar_url: '',\n  });\n  useEffect(() => {\n    getProfile();\n  }, [session]);\n  const getProfile = async () => {\n    console.log('get');\n    await showLoading();\n    try {\n      const user = supabase.auth.user();\n      let { data, error, status } = await supabase\n        .from('profiles')\n        .select(`username, website, avatar_url`)\n        .eq('id', user!.id)\n        .single();\n\n      if (error && status !== 406) {\n        throw error;\n      }\n\n      if (data) {\n        setProfile({\n          username: data.username,\n          website: data.website,\n          avatar_url: data.avatar_url,\n        });\n      }\n    } catch (error: any) {\n      showToast({ message: error.message, duration: 5000 });\n    } finally {\n      await hideLoading();\n    }\n  };\n  const signOut = async () => {\n    await supabase.auth.signOut();\n    router.push('/', 'forward', 'replace');\n  }\n  const updateProfile = async (e?: any, avatar_url: string = '') => {\n    e?.preventDefault();\n\n    console.log('update ');\n    await showLoading();\n\n    try {\n      const user = supabase.auth.user();\n\n      const updates = {\n        id: user!.id,\n        ...profile,\n        avatar_url: avatar_url,\n        updated_at: new Date(),\n      };\n\n      let { error } = await supabase.from('profiles').upsert(updates, {\n        returning: 'minimal', // Don't return the value after inserting\n      });\n\n      if (error) {\n        throw error;\n      }\n    } catch (error: any) {\n      showToast({ message: error.message, duration: 5000 });\n    } finally {\n      await hideLoading();\n    }\n  };\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Account</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent>\n        <form onSubmit={updateProfile}>\n          <IonItem>\n            <IonLabel>\n              <p>Email</p>\n              <p>{session?.user?.email}</p>\n            </IonLabel>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"stacked\">Name</IonLabel>\n            <IonInput\n              type=\"text\"\n              name=\"username\"\n              value={profile.username}\n              onIonChange={(e) =>\n                setProfile({ ...profile, username: e.detail.value ?? '' })\n              }\n            ></IonInput>\n          </IonItem>\n\n          <IonItem>\n            <IonLabel position=\"stacked\">Website</IonLabel>\n            <IonInput\n              type=\"url\"\n              name=\"website\"\n              value={profile.website}\n              onIonChange={(e) =>\n                setProfile({ ...profile, website: e.detail.value ?? '' })\n              }\n            ></IonInput>\n          </IonItem>\n          <div className=\"ion-text-center\">\n            <IonButton fill=\"clear\" type=\"submit\">\n              Update Profile\n            </IonButton>\n          </div>\n        </form>\n\n        <div className=\"ion-text-center\">\n          <IonButton fill=\"clear\" onClick={signOut}>\n            Log Out\n          </IonButton>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n}\n")),(0,o.kt)("h3",{id:"launch"},"Launch!"),(0,o.kt)("p",null,"Now that we have all the components in place, let's update ",(0,o.kt)("inlineCode",{parentName:"p"},"App.tsx"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},"import { Redirect, Route } from 'react-router-dom'\nimport { IonApp, IonRouterOutlet, setupIonicReact } from '@ionic/react'\nimport { IonReactRouter } from '@ionic/react-router'\nimport { supabase } from './supabaseClient'\n\nimport '@ionic/react/css/ionic.bundle.css'\n\n/* Theme variables */\nimport './theme/variables.css'\nimport { LoginPage } from './pages/Login'\nimport { AccountPage } from './pages/Account'\nimport { useEffect, useState } from 'react'\nimport { Session } from '@supabase/supabase-js'\n\nsetupIonicReact()\n\nconst App: React.FC = () => {\n  const [session, setSession] = (useState < Session) | (null > null)\n  useEffect(() => {\n    setSession(supabase.auth.session())\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session)\n    })\n  }, [session])\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <IonRouterOutlet>\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return session ? <Redirect to=\"/account\" /> : <LoginPage />\n            }}\n          />\n          <Route exact path=\"/account\">\n            <AccountPage />\n          </Route>\n        </IonRouterOutlet>\n      </IonReactRouter>\n    </IonApp>\n  )\n}\n\nexport default App\n")),(0,o.kt)("p",null,"Once that's done, run this in a terminal window:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ionic serve\n")),(0,o.kt)("p",null,"And then open the browser to ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000"},"localhost:3000")," and you should see the completed app."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Supabase Ionic React",src:n(77337).Z,width:"2414",height:"1790"})),(0,o.kt)("h2",{id:"bonus-profile-photos"},"Bonus: Profile photos"),(0,o.kt)("p",null,"Every Supabase project is configured with ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/storage"},"Storage")," for managing large files like photos and videos."),(0,o.kt)("h3",{id:"create-an-upload-widget"},"Create an upload widget"),(0,o.kt)("p",null,"First install two packages in order to interact with the user's camera."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @ionic/pwa-elements @capacitor/camera\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://capacitorjs.com"},"CapacitorJS")," is a cross platform native runtime from Ionic that enables web apps to be deployed through the app store and provides access to native deavice API."),(0,o.kt)("p",null,"Ionic PWA elements is a companion package that will polyfill certain browser APIs that provide no user interface with custom Ionic UI."),(0,o.kt)("p",null,"With those packages installed we can update our ",(0,o.kt)("inlineCode",{parentName:"p"},"index.tsx")," to include an additional bootstapping call for the Ionic PWA Elements."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/index.tsx"',title:'"src/index.tsx"'},"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nimport { defineCustomElements } from '@ionic/pwa-elements/loader'\ndefineCustomElements(window)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorkerRegistration.unregister()\nreportWebVitals()\n")),(0,o.kt)("p",null,"Then create an ",(0,o.kt)("strong",{parentName:"p"},"AvatarComponent"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/components/Avatar.tsx"',title:'"src/components/Avatar.tsx"'},"import { IonIcon } from '@ionic/react';\nimport { person } from 'ionicons/icons';\nimport { Camera, CameraResultType } from '@capacitor/camera';\nimport { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport './Avatar.css'\nexport function Avatar({\n  url,\n  onUpload,\n}: {\n  url: string;\n  onUpload: (e: any, file: string) => Promise<void>;\n}) {\n  const [avatarUrl, setAvatarUrl] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (url) {\n      downloadImage(url);\n    }\n  }, [url]);\n  const uploadAvatar = async () => {\n    try {\n      const photo = await Camera.getPhoto({\n        resultType: CameraResultType.DataUrl,\n      });\n\n      const file = await fetch(photo.dataUrl!)\n        .then((res) => res.blob())\n        .then(\n          (blob) =>\n            new File([blob], 'my-file', { type: `image/${photo.format}` })\n        );\n\n      const fileName = `${Math.random()}-${new Date().getTime()}.${\n        photo.format\n      }`;\n      let { error: uploadError } = await supabase.storage\n        .from('avatars')\n        .upload(fileName, file);\n      if (uploadError) {\n        throw uploadError;\n      }\n      onUpload(null, fileName);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const downloadImage = async (path: string) => {\n    try {\n      const { data, error } = await supabase.storage\n        .from('avatars')\n        .download(path);\n      if (error) {\n        throw error;\n      }\n      const url = URL.createObjectURL(data!);\n      setAvatarUrl(url);\n    } catch (error: any) {\n      console.log('Error downloading image: ', error.message);\n    }\n  };\n\n  return (\n    <div className=\"avatar\">\n    <div className=\"avatar_wrapper\" onClick={uploadAvatar}>\n      {avatarUrl ? (\n        <img src={avatarUrl} />\n      ) : (\n        <IonIcon icon={person} className=\"no-avatar\" />\n      )}\n    </div>\n\n    </div>\n  );\n}\n")),(0,o.kt)("h3",{id:"add-the-new-widget"},"Add the new widget"),(0,o.kt)("p",null,"And then we can add the widget to the Account page:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/pages/Account.tsx"',title:'"src/pages/Account.tsx"'},"// Import the new component\n\nimport { Avatar } from '../components/Avatar';\n\n// ...\nreturn (\n  <IonPage>\n    <IonHeader>\n      <IonToolbar>\n        <IonTitle>Account</IonTitle>\n      </IonToolbar>\n    </IonHeader>\n\n    <IonContent>\n      <Avatar url={profile.avatar_url} onUpload={updateProfile}></Avatar>\n")),(0,o.kt)("h2",{id:"next-steps"},"Next steps"),(0,o.kt)("p",null,"At this stage you have a fully functional application!"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Got a question? ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/supabase/supabase/discussions"},"Ask here"),"."),(0,o.kt)("li",{parentName:"ul"},"Sign in: ",(0,o.kt)("a",{parentName:"li",href:"https://app.supabase.com"},"app.supabase.com"))))}m.isMDXComponent=!0},51918:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ionic-angular-account-33770dcbf7c6a89b356a58c8e7b9f318.png"},77337:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ionic-react-cf9d813efd0ea8ff1becc95443b8fd3a.png"}}]);