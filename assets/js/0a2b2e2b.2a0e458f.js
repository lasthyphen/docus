"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[25613],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=l,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),l=n(86010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),l=n(67294),r=n(86010),i=n(72389),o=n(67392),s=n(7094),p=n(12466);const u="tabList__CuJ",c="tabItem_LNqP";function d(e){const{lazy:t,block:n,defaultValue:i,values:d,groupId:m,className:h}=e,b=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=d??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,o.l)(f,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:y}=(0,s.U)(),[N,x]=(0,l.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=m){const e=g[m];null!=e&&e!==N&&f.some((t=>t.value===e))&&x(e)}const E=e=>{const t=e.currentTarget,n=w.indexOf(t),a=f[n].value;a!==N&&(T(t),x(a),null!=m&&y(m,String(a)))},C=e=>{let t=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]??w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]??w[w.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},h)},f.map((e=>{let{value:t,label:n,attributes:i}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>w.push(e),onKeyDown:C,onClick:E},i,{className:(0,r.Z)("tabs__item",c,i?.className,{"tabs__item--active":N===t})}),n??t)}))),t?(0,l.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,i.Z)();return l.createElement(d,(0,a.Z)({key:String(t)},e))}},44423:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=n(87462),l=(n(67294),n(3905)),r=n(65488),i=n(85162);const o={id:"http",title:"http: RESTful Client",description:"An HTTP Client for PostgreSQL Functions."},s=void 0,p={unversionedId:"guides/database/extensions/http",id:"guides/database/extensions/http",title:"http: RESTful Client",description:"An HTTP Client for PostgreSQL Functions.",source:"@site/docs/guides/database/extensions/http.mdx",sourceDirName:"guides/database/extensions",slug:"/guides/database/extensions/http",permalink:"/docs/guides/database/extensions/http",draft:!1,editUrl:"https://github.com/docs/guides/database/extensions/http.mdx",tags:[],version:"current",frontMatter:{id:"http",title:"http: RESTful Client",description:"An HTTP Client for PostgreSQL Functions."}},u={},c=[{value:"Quick demo",id:"quick-demo",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Enable the extension",id:"enable-the-extension",level:3},{value:"Available functions",id:"available-functions",level:3},{value:"Returned values",id:"returned-values",level:3},{value:"Examples",id:"examples",level:2},{value:"Simple <code>GET</code> example",id:"simple-get-example",level:3},{value:"Simple <code>POST</code> example",id:"simple-post-example",level:3},{value:"Resources",id:"resources",level:2}],d={toc:c};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"http")," extension allows you to call RESTful endpoints within Postgres."),(0,l.kt)("h2",{id:"quick-demo"},"Quick demo"),(0,l.kt)("div",{class:"video-container"},(0,l.kt)("iframe",{src:"https://www.youtube-nocookie.com/embed/rARgrELRCwY",frameBorder:"1",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"Let's cover some basic concepts:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"REST: stands for REpresentational State Transfer. It's simply a way to request data from external services."),(0,l.kt)("li",{parentName:"ul"},'RESTful APIs are servers which accept HTTP "calls". The calls are typically:',(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GET")," \u2212 Read only access to a resource."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"POST")," \u2212 Creates a new resource."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DELETE")," \u2212 Removes a resource."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PUT")," \u2212 Updates an existing resource or creates a new resource.")))),(0,l.kt)("p",null,"You can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"http")," extension to make these network requests from Postgres."),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("h3",{id:"enable-the-extension"},"Enable the extension"),(0,l.kt)(r.Z,{defaultValue:"dashboard",values:[{label:"Dashboard",value:"dashboard"},{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"dashboard",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Go to the ",(0,l.kt)("a",{parentName:"li",href:"https://app.supabase.com/project/_/database/tables"},"Database")," page in the Dashboard."),(0,l.kt)("li",{parentName:"ol"},"Click on ",(0,l.kt)("strong",{parentName:"li"},"Extensions")," in the sidebar."),(0,l.kt)("li",{parentName:"ol"},'Search for "http" and enable the extension.'))),(0,l.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'-- Example: enable the "http" extension\ncreate extension http with schema extensions;\n\n-- Example: disable the "http" extension\ndrop extension if exists http;\n')),(0,l.kt)("p",null,"Even though the SQL code is ",(0,l.kt)("inlineCode",{parentName:"p"},"create extension"),', this is the equivalent of "enabling the extension".\nTo disable an extension, call ',(0,l.kt)("inlineCode",{parentName:"p"},"drop extension"),"."),(0,l.kt)("p",null,"It's good practice to create the extension within a separate schema (like ",(0,l.kt)("inlineCode",{parentName:"p"},"extensions"),") to keep your database clean."))),(0,l.kt)("h3",{id:"available-functions"},"Available functions"),(0,l.kt)("p",null,"While the main usage is simply ",(0,l.kt)("inlineCode",{parentName:"p"},"http('http_request')"),", there are 5 wrapper functions for specific functionality:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"http_get()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"http_post()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"http_put()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"http_delete()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"http_head()"))),(0,l.kt)("h3",{id:"returned-values"},"Returned values"),(0,l.kt)("p",null,"A successful call to a web URL from the ",(0,l.kt)("inlineCode",{parentName:"p"},"http")," extension returns a record with the following fields:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"status"),": integer"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"content_type"),": character varying"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"headers"),": http_header[]"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"content"),": character varying. Typically you would want to cast this to ",(0,l.kt)("inlineCode",{parentName:"li"},"jsonb")," using the format ",(0,l.kt)("inlineCode",{parentName:"li"},"content::jsonb"))),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"simple-get-example"},"Simple ",(0,l.kt)("inlineCode",{parentName:"h3"},"GET")," example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'select\n  "status", "content"::jsonb\nfrom\n  http_get(\'https://jsonplaceholder.typicode.com/todos/1\');\n')),(0,l.kt)("h3",{id:"simple-post-example"},"Simple ",(0,l.kt)("inlineCode",{parentName:"h3"},"POST")," example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'select\n  "status", "content"::jsonb\nfrom\n  http_post(\n    \'https://jsonplaceholder.typicode.com/posts\',\n    \'{ "title": "foo", "body": "bar", "userId": 1 }\',\n    \'application/json\'\n  );\n')),(0,l.kt)("h2",{id:"resources"},"Resources"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Official ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/pramsey/pgsql-http"},(0,l.kt)("inlineCode",{parentName:"a"},"http")," GitHub Repository"))))}m.isMDXComponent=!0}}]);