"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[26622],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var s=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(e,t){if(null==e)return{};var a,s,l=function(e,t){if(null==e)return{};var a,s,l={},i=Object.keys(e);for(s=0;s<i.length;s++)a=i[s],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)a=i[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=s.createContext({}),m=function(e){var t=s.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=m(e.components);return s.createElement(o.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},p=s.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,d=n(e,["components","mdxType","originalType","parentName"]),c=m(a),p=l,h=c["".concat(o,".").concat(p)]||c[p]||u[p]||i;return a?s.createElement(h,r(r({ref:t},d),{},{components:a})):s.createElement(h,r({ref:t},d))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=p;var n={};for(var o in t)hasOwnProperty.call(t,o)&&(n[o]=t[o]);n.originalType=e,n[c]="string"==typeof e?e:l,r[1]=n;for(var m=2;m<i;m++)r[m]=a[m];return s.createElement.apply(null,r)}return s.createElement.apply(null,a)}p.displayName="MDXCreateElement"},11041:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>m});var s=a(87462),l=(a(67294),a(3905));a(65488),a(85162);const i={id:"upsert",title:"Upsert data: upsert()",slug:"/upsert",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml"},r=void 0,n={unversionedId:"generated/upsert",id:"version-v1/generated/upsert",title:"Upsert data: upsert()",description:"Performs an UPSERT into the table.",source:"@site/_supabase_js_versioned_docs/version-v1/generated/upsert.mdx",sourceDirName:"generated",slug:"/upsert",permalink:"/docs/reference/javascript/v1/upsert",draft:!1,editUrl:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml",tags:[],version:"v1",frontMatter:{id:"upsert",title:"Upsert data: upsert()",slug:"/upsert",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v1.yml"}},o={},m=[{value:"Parameters",id:"parameters",level:2},{value:"Notes",id:"notes",level:2},{value:"Examples",id:"examples",level:2},{value:"Upsert your data",id:"upsert-your-data",level:3},{value:"Bulk Upsert your data",id:"bulk-upsert-your-data",level:3},{value:"Upserting into tables with constraints",id:"upserting-into-tables-with-constraints",level:3},{value:"Return the exact number of rows",id:"return-the-exact-number-of-rows",level:3}],d={toc:m};function c(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,s.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Performs an UPSERT into the table."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase\n  .from('messages')\n  .upsert({ id: 3, message: 'foo', username: 'supabot' })\n")),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("ul",{className:"method-list-group"},(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"values"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"Partial")," | ",(0,l.kt)("code",null,"array"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"The values to insert.")),(0,l.kt)("ul",{className:"method-list-group"},(0,l.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},(0,l.kt)("code",null,"object")),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"Partial"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"__namedParameters"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. ")),(0,l.kt)("ul",{className:"method-list-group"},(0,l.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"returning"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"minimal")," | ",(0,l.kt)("code",null,"representation"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"By default the new record is returned. Set this to 'minimal' if you don't need this value.")),(0,l.kt)("ul",{className:"method-list-group"},(0,l.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},(0,l.kt)("code",null,"object")),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},(0,l.kt)("code",null,"object")),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"onConflict"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"undefined")," | ",(0,l.kt)("code",null,"string"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"By specifying the ",(0,l.kt)("inlineCode",{parentName:"p"},"on_conflict")," query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.")),(0,l.kt)("ul",{className:"method-list-group"},(0,l.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"undefined"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"string"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"ignoreDuplicates"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"boolean"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"Specifies if duplicate rows should be ignored and not inserted."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"count"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"null")," | ",(0,l.kt)("code",null,"exact")," | ",(0,l.kt)("code",null,"planned")," | ",(0,l.kt)("code",null,"estimated"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"Count algorithm to use to count rows in a table.")),(0,l.kt)("ul",{className:"method-list-group"},(0,l.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},(0,l.kt)("code",null,"object")),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},(0,l.kt)("code",null,"object")),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},(0,l.kt)("code",null,"object")),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"null"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. ")))))))),(0,l.kt)("h2",{id:"notes"},"Notes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Primary keys should be included in the data payload in order for an update to work correctly."),(0,l.kt)("li",{parentName:"ul"},"Primary keys  must be natural, not surrogate. There are however, ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/PostgREST/postgrest/issues/1118"},"workarounds")," for surrogate primary keys."),(0,l.kt)("li",{parentName:"ul"},"If you need to insert new data and update existing data at the same time, use ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/supabase/postgrest-js/issues/173#issuecomment-825124550"},"Postgres triggers"),".")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"upsert-your-data"},"Upsert your data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase\n  .from('messages')\n  .upsert({ id: 3, message: 'foo', username: 'supabot' })\n")),(0,l.kt)("h3",{id:"bulk-upsert-your-data"},"Bulk Upsert your data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase\n  .from('messages')\n  .upsert([\n  { id: 3, message: 'foo', username: 'supabot' },\n  { id: 4, message: 'bar', username: 'supabot' }\n  ])\n")),(0,l.kt)("h3",{id:"upserting-into-tables-with-constraints"},"Upserting into tables with constraints"),(0,l.kt)("p",null,"Running the following will cause supabase to upsert data into the ",(0,l.kt)("inlineCode",{parentName:"p"},"users")," table.\nIf the username 'supabot' already exists, the ",(0,l.kt)("inlineCode",{parentName:"p"},"onConflict")," argument tells supabase to overwrite that row\nbased on the column passed into ",(0,l.kt)("inlineCode",{parentName:"p"},"onConflict"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase\n  .from('users')\n  .upsert({ username: 'supabot' }, { onConflict: 'username' })\n")),(0,l.kt)("h3",{id:"return-the-exact-number-of-rows"},"Return the exact number of rows"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error, count } = await supabase\n  .from('users')\n  .upsert({\n      id: 3, message: 'foo',\n      username: 'supabot'\n  }, {\n    count: 'exact'\n  })\n")))}c.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>r});var s=a(67294),l=a(86010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:a,className:r}=e;return s.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>p});var s=a(87462),l=a(67294),i=a(86010),r=a(72389),n=a(67392),o=a(7094),m=a(12466);const d="tabList__CuJ",c="tabItem_LNqP";function u(e){const{lazy:t,block:a,defaultValue:r,values:u,groupId:p,className:h}=e,k=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=u??k.map((e=>{let{props:{value:t,label:a,attributes:s}}=e;return{value:t,label:a,attributes:s}})),N=(0,n.l)(b,((e,t)=>e.value===t.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===r?r:r??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:g}=(0,o.U)(),[y,w]=(0,l.useState)(v),j=[],{blockElementScrollPositionUntilNextRender:q}=(0,m.o5)();if(null!=p){const e=f[p];null!=e&&e!==y&&b.some((t=>t.value===e))&&w(e)}const P=e=>{const t=e.currentTarget,a=j.indexOf(t),s=b[a].value;s!==y&&(q(t),w(s),null!=p&&g(p,String(s)))},x=e=>{let t=null;switch(e.key){case"Enter":P(e);break;case"ArrowRight":{const a=j.indexOf(e.currentTarget)+1;t=j[a]??j[0];break}case"ArrowLeft":{const a=j.indexOf(e.currentTarget)-1;t=j[a]??j[j.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",d)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},h)},b.map((e=>{let{value:t,label:a,attributes:r}=e;return l.createElement("li",(0,s.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>j.push(e),onKeyDown:x,onClick:P},r,{className:(0,i.Z)("tabs__item",c,r?.className,{"tabs__item--active":y===t})}),a??t)}))),t?(0,l.cloneElement)(k.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function p(e){const t=(0,r.Z)();return l.createElement(u,(0,s.Z)({key:String(t)},e))}}}]);