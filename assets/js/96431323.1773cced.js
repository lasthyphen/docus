"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[82927],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),i=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=i(e.components);return r.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=i(a),m=n,f=c["".concat(u,".").concat(m)]||c[m]||p[m]||s;return a?r.createElement(f,o(o({ref:t},d),{},{components:a})):r.createElement(f,o({ref:t},d))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var i=2;i<s;i++)o[i]=a[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},62596:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>i});var r=a(87462),n=(a(67294),a(3905));a(65488),a(85162);const s={id:"update",title:"Modify data: update()",slug:"/update",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_dart_v0.yml"},o=void 0,l={unversionedId:"generated/update",id:"version-v0/generated/update",title:"Modify data: update()",description:"Performs an UPDATE on the table.",source:"@site/_supabase_dart_versioned_docs/version-v0/generated/update.mdx",sourceDirName:"generated",slug:"/update",permalink:"/docs/reference/dart/v0/update",draft:!1,editUrl:"https://github.com/supabase/supabase/edit/master/spec/supabase_dart_v0.yml",tags:[],version:"v0",frontMatter:{id:"update",title:"Modify data: update()",slug:"/update",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_dart_v0.yml"},sidebar:"sidebar",previous:{title:"Create data: insert()",permalink:"/docs/reference/dart/v0/insert"},next:{title:"Upsert data: upsert()",permalink:"/docs/reference/dart/v0/upsert"}},u={},i=[{value:"Notes",id:"notes",level:2},{value:"Examples",id:"examples",level:2},{value:"Updating your data",id:"updating-your-data",level:3},{value:"Updating JSON data",id:"updating-json-data",level:3}],d={toc:i};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Performs an UPDATE on the table."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"final res = await supabase\n  .from('cities')\n  .update({ 'name': 'Middle Earth' })\n  .match({ 'name': 'Auckland' })\n  .execute();\n")),(0,n.kt)("h2",{id:"notes"},"Notes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"update()")," should always be combined with ",(0,n.kt)("a",{parentName:"li",href:"/docs/reference/dart/using-filters"},"Filters")," to target the item(s) you wish to update.")),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("h3",{id:"updating-your-data"},"Updating your data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"final res = await supabase\n  .from('cities')\n  .update({ 'name': 'Middle Earth' })\n  .match({ 'name': 'Auckland' })\n  .execute();\n")),(0,n.kt)("h3",{id:"updating-json-data"},"Updating JSON data"),(0,n.kt)("p",null,"Postgres offers a\n",(0,n.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-json.html"},"number of operators"),"\nfor working with JSON data. Right now it is only possible to update an entire JSON document,\nbut we are ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/PostgREST/postgrest/issues/465"},"working on ideas")," for updating individual keys."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-dart"},"final res = await supabase\n  .from('users')\n  .update({\n    'address': { \n      'street': 'Melrose Place',\n      'postcode': 90210\n    }\n  })\n  .eq('address->postcode', 90210)\n  .execute();\n")))}c.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(67294),n=a(86010);const s="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(s,o),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>m});var r=a(87462),n=a(67294),s=a(86010),o=a(72389),l=a(67392),u=a(7094),i=a(12466);const d="tabList__CuJ",c="tabItem_LNqP";function p(e){const{lazy:t,block:a,defaultValue:o,values:p,groupId:m,className:f}=e,b=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=p??b.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),h=(0,l.l)(v,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===o?o:o??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==g&&!v.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:k}=(0,u.U)(),[w,O]=(0,n.useState)(g),E=[],{blockElementScrollPositionUntilNextRender:N}=(0,i.o5)();if(null!=m){const e=y[m];null!=e&&e!==w&&v.some((t=>t.value===e))&&O(e)}const _=e=>{const t=e.currentTarget,a=E.indexOf(t),r=v[a].value;r!==w&&(N(t),O(r),null!=m&&k(m,String(r)))},x=e=>{let t=null;switch(e.key){case"Enter":_(e);break;case"ArrowRight":{const a=E.indexOf(e.currentTarget)+1;t=E[a]??E[0];break}case"ArrowLeft":{const a=E.indexOf(e.currentTarget)-1;t=E[a]??E[E.length-1];break}}t?.focus()};return n.createElement("div",{className:(0,s.Z)("tabs-container",d)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},f)},v.map((e=>{let{value:t,label:a,attributes:o}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>E.push(e),onKeyDown:x,onClick:_},o,{className:(0,s.Z)("tabs__item",c,o?.className,{"tabs__item--active":w===t})}),a??t)}))),t?(0,n.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,o.Z)();return n.createElement(p,(0,r.Z)({key:String(t)},e))}}}]);