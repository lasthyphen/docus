"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[73088],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var r=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=n(e,["components","mdxType","originalType","parentName"]),c=u(a),g=i,d=c["".concat(l,".").concat(g)]||c[g]||h[g]||o;return a?r.createElement(d,s(s({ref:t},p),{},{components:a})):r.createElement(d,s({ref:t},p))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,s=new Array(o);s[0]=g;var n={};for(var l in t)hasOwnProperty.call(t,l)&&(n[l]=t[l]);n.originalType=e,n[c]="string"==typeof e?e:i,s[1]=n;for(var u=2;u<o;u++)s[u]=a[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},93113:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>u});var r=a(87462),i=(a(67294),a(3905));const o={id:"architecture",title:"Architecture",description:"Supabase design and architecture"},s=void 0,n={unversionedId:"architecture",id:"architecture",title:"Architecture",description:"Supabase design and architecture",source:"@site/docs/architecture.mdx",sourceDirName:".",slug:"/architecture",permalink:"/docs/architecture",draft:!1,editUrl:"https://github.com/docs/architecture.mdx",tags:[],version:"current",frontMatter:{id:"architecture",title:"Architecture",description:"Supabase design and architecture"}},l={},u=[{value:"Architecture",id:"architecture",level:2},{value:"PostgreSQL (Database)",id:"postgresql-database",level:3},{value:"Studio (Dashboard)",id:"studio-dashboard",level:3},{value:"GoTrue (Auth)",id:"gotrue-auth",level:3},{value:"PostgREST (API)",id:"postgrest-api",level:3},{value:"Realtime (API &amp; multiplayer)",id:"realtime-api--multiplayer",level:3},{value:"Storage API (large file storage)",id:"storage-api-large-file-storage",level:3},{value:"Deno (Edge Functions)",id:"deno-edge-functions",level:3},{value:"postgres-meta (Database management)",id:"postgres-meta-database-management",level:3},{value:"PgBouncer",id:"pgbouncer",level:3},{value:"Kong (API Gateway)",id:"kong-api-gateway",level:3},{value:"Product Principles",id:"product-principles",level:2},{value:"Everything works in isolation",id:"everything-works-in-isolation",level:3},{value:"Everything is integrated",id:"everything-is-integrated",level:3},{value:"Everything is extensible",id:"everything-is-extensible",level:3},{value:"Everything is portable",id:"everything-is-portable",level:3},{value:"Play the long game",id:"play-the-long-game",level:3},{value:"Build for developers",id:"build-for-developers",level:3},{value:"Support existing tools",id:"support-existing-tools",level:3}],p={toc:u};function c(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Supabase is open source. We choose open source tools which are scalable and make them simple to use."),(0,i.kt)("p",null,"Supabase is not a 1-to-1 mapping of Firebase. While we are building many of the features that Firebase offers, we are not going about it the same way:\nour technological choices are quite different; everything we use is open source; and wherever possible, we use and support existing tools rather than developing from scratch."),(0,i.kt)("p",null,"Most notably, we use Postgres rather than a NoSQL store. This choice was deliberate. We believe that no other database offers the functionality required to compete with Firebase,\nwhile maintaining the scalability required to go beyond it."),(0,i.kt)("h2",{id:"architecture"},"Architecture"),(0,i.kt)("p",null,"Each Supabase project consists of several tools:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Supabase Architecture",src:a(16245).Z,width:"1858",height:"829"})),(0,i.kt)("h3",{id:"postgresql-database"},"PostgreSQL (Database)"),(0,i.kt)("p",null,"PostgreSQL is the core of Supabase. We do not abstract the PostgreSQL database \u2014 you can access it and use it with full privileges. We simply provide tools which makes PostgreSQL as easy to use as Firebase."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/index.html"},"postgresql.org/docs")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/postgres/postgres"},"github.com/postgres/postgres")," (mirror)"),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://www.postgresql.org/about/licence/"},"PostgreSQL Licence")),(0,i.kt)("li",{parentName:"ul"},"Language: C")),(0,i.kt)("h3",{id:"studio-dashboard"},"Studio (Dashboard)"),(0,i.kt)("p",null,"An open source Dashboard for managing your database and services."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"/docs"},"Supabase docs")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/supabase/tree/master/studio"},"github.com/supabase/supabase")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/supabase/blob/master/LICENSE"},"Apache 2")),(0,i.kt)("li",{parentName:"ul"},"Language: TypeScript")),(0,i.kt)("h3",{id:"gotrue-auth"},"GoTrue (Auth)"),(0,i.kt)("p",null,"A JWT-based API for managing users and issuing access tokens. This integrates with PostgreSQL's Row Level Security and the API servers."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/auth"},"Supabase Auth reference docs")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/gotrue"},"github.com/supabase/gotrue")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/gotrue/blob/master/LICENSE"},"MIT")),(0,i.kt)("li",{parentName:"ul"},"Language: Go")),(0,i.kt)("h3",{id:"postgrest-api"},"PostgREST (API)"),(0,i.kt)("p",null,"A standalone web server that turns your PostgreSQL database directly into a RESTful API.\nWe use this with our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/supabase/pg_graphql"},"pg_graphql")," extension to provide a GraphQL API."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"https://postgrest.org/"},"postgrest.org")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/PostgREST/postgrest"},"github.com/PostgREST/postgrest")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/PostgREST/postgrest/blob/main/LICENSE"},"MIT")),(0,i.kt)("li",{parentName:"ul"},"Language: Haskel")),(0,i.kt)("h3",{id:"realtime-api--multiplayer"},"Realtime (API & multiplayer)"),(0,i.kt)("p",null,"A scalable websocket engine for managing user Presence, broadcasting messages, and streaming database changes."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"/docs/guides/realtime"},"Supabase Realtime docs")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/realtime"},"github.com/supabase/realtime")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/realtime/blob/master/LICENSE"},"Apache 2")),(0,i.kt)("li",{parentName:"ul"},"Language: Elixir")),(0,i.kt)("h3",{id:"storage-api-large-file-storage"},"Storage API (large file storage)"),(0,i.kt)("p",null,"An S3-compatible object storage service that stores metadata in Postgres."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"/docs/reference/storage"},"Supabase Storage reference docs")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/storage-api"},"github.com/supabase/storage-api")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/storage-api/blob/master/LICENSE"},"Apache 2.0")),(0,i.kt)("li",{parentName:"ul"},"Language: NodeJS / TypeScript")),(0,i.kt)("h3",{id:"deno-edge-functions"},"Deno (Edge Functions)"),(0,i.kt)("p",null,"A modern runtime for JavaScript and TypeScript."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"https://deno.land/"},"deno.land")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/denoland/deno"},"github.com/denoland/deno")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/denoland/deno/blob/main/LICENSE.md"},"MIT")),(0,i.kt)("li",{parentName:"ul"},"Language: TypeScript / Rust")),(0,i.kt)("h3",{id:"postgres-meta-database-management"},"postgres-meta (Database management)"),(0,i.kt)("p",null,"A RESTful API for managing your Postgres. Fetch tables, add roles, and run queries."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"https://supabase.github.io/postgres-meta/"},"supabase.github.io/postgres-meta")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/postgres-meta"},"github.com/supabase/postgres-meta")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/supabase/postgres-meta/blob/master/LICENSE"},"Apache 2.0")),(0,i.kt)("li",{parentName:"ul"},"Language: NodeJS / TypeScript")),(0,i.kt)("h3",{id:"pgbouncer"},"PgBouncer"),(0,i.kt)("p",null,"A lightweight connection pooler for PostgreSQL. This is useful for connecting to Postgres when using Serverless functions."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"http://www.pgbouncer.org/"},"pgbouncer.org")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/pgbouncer/pgbouncer"},"pgbouncer/pgbouncer")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/pgbouncer/pgbouncer/blob/master/COPYRIGHT"},"ISC")),(0,i.kt)("li",{parentName:"ul"},"Language: C")),(0,i.kt)("h3",{id:"kong-api-gateway"},"Kong (API Gateway)"),(0,i.kt)("p",null,"A cloud-native API gateway, built on top of Nginx."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Official Docs: ",(0,i.kt)("a",{parentName:"li",href:"https://docs.konghq.com/"},"docs.konghq.com")),(0,i.kt)("li",{parentName:"ul"},"Source code: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/kong/kong"},"github.com/kong/kong")),(0,i.kt)("li",{parentName:"ul"},"License: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Kong/kong/blob/master/LICENSE"},"Apache 2.0")),(0,i.kt)("li",{parentName:"ul"},"Language: Lua")),(0,i.kt)("h2",{id:"product-principles"},"Product Principles"),(0,i.kt)("p",null,"It is our goal to provide an architecture that any large-scale company would design for themselves,\nand then provide tooling around that architecture that is easy-to-use for indie-developers and small teams."),(0,i.kt)("p",null,"We use a series of principles to ensure that scalability and usability are never mutually exclusive:"),(0,i.kt)("h3",{id:"everything-works-in-isolation"},"Everything works in isolation"),(0,i.kt)("p",null,'Each system must work as a standalone tool with as few moving parts as possible.\nThe litmus test for this is: "Can a user run this product with nothing but a Postgres database?"'),(0,i.kt)("h3",{id:"everything-is-integrated"},"Everything is integrated"),(0,i.kt)("p",null,"Supabase is composable. Even though every product works in isolation, each product on the platform needs to 10x the other products.\nFor integration, each tool should expose an API and Webhooks."),(0,i.kt)("h3",{id:"everything-is-extensible"},"Everything is extensible"),(0,i.kt)("p",null,"We're deliberate about adding a new tool, and prefer instead to extend an existing one.\nThis is the opposite of many cloud providers whose product offering expands into niche use-cases. We provide ",(0,i.kt)("em",{parentName:"p"},"primitives")," for developers, which allow them to achieve any goal.\nLess, but better."),(0,i.kt)("h3",{id:"everything-is-portable"},"Everything is portable"),(0,i.kt)("p",null,'To avoid lock-in, we make it easy to migrate in and out. Our cloud offering is compatible with our self-hosted product.\nWe use existing standards to increase portability (like pg_dump an CSV files). If a new standard emerges which competes with a "Supabase" approach, we will deprecate the approach in favor of the standard.\nThis forces us compete on experience. We aim to be the best Postgres hosting service.'),(0,i.kt)("h3",{id:"play-the-long-game"},"Play the long game"),(0,i.kt)("p",null,"We sacrifice short-term wins for long-term gains. For example, it is tempting to run a fork of Postgres with additional functionality which only our customers need.\nInstead, we prefer to support efforts to upstream missing functionality so that the entire community benefits. This has the additional benefit of ensuring portability and longevity."),(0,i.kt)("h3",{id:"build-for-developers"},"Build for developers"),(0,i.kt)("p",null,'"Developers" are a specific profile of user: they are ',(0,i.kt)("em",{parentName:"p"},"builders"),".\nWhen assessing impact as a function of effort, developers have a large efficiency due to the type of products and systems they can build.\nAs the profile of a developer changes over time, Supabase will continue to evolve the product to fit this evolving profile."),(0,i.kt)("h3",{id:"support-existing-tools"},"Support existing tools"),(0,i.kt)("p",null,'Supabase supports existing tools and communities wherever possible. Supabase is more like a "community of communities" - each tool typically has its own community\nwhich we work with.\nOpen source is something we approach ',(0,i.kt)("a",{parentName:"p",href:"https://supabase.com/blog/supabase-series-b#giving-back"},"collaboratively"),": we employ maintainers, sponsor projects, invest in businesses, and develop our own open source tools."))}c.isMDXComponent=!0},16245:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/supabase-architecture-0add114e10ee4902eac89403cf5488c8.png"}}]);