"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[78798],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var u=a.createContext({}),l=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=l(n),h=s,d=m["".concat(u,".").concat(h)]||m[h]||c[h]||r;return n?a.createElement(d,i(i({ref:t},p),{},{components:n})):a.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=h;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:s,i[1]=o;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},47993:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var a=n(87462),s=(n(67294),n(3905));const r={id:"auth-ui",title:"Auth UI",description:"A prebuilt, customizable React component for authenticating users."},i=void 0,o={unversionedId:"guides/auth/auth-helpers/auth-ui",id:"guides/auth/auth-helpers/auth-ui",title:"Auth UI",description:"A prebuilt, customizable React component for authenticating users.",source:"@site/docs/guides/auth/auth-helpers/auth-ui.mdx",sourceDirName:"guides/auth/auth-helpers",slug:"/guides/auth/auth-helpers/auth-ui",permalink:"/docs/guides/auth/auth-helpers/auth-ui",draft:!1,editUrl:"https://github.com/docs/guides/auth/auth-helpers/auth-ui.mdx",tags:[],version:"current",frontMatter:{id:"auth-ui",title:"Auth UI",description:"A prebuilt, customizable React component for authenticating users."}},u={},l=[{value:"Set up Auth UI",id:"set-up-auth-ui",level:2},{value:"Import the Auth component",id:"import-the-auth-component",level:3},{value:"Customization",id:"customization",level:2},{value:"Predefined themes",id:"predefined-themes",level:3},{value:"Switch theme variations",id:"switch-theme-variations",level:3},{value:"Override themes",id:"override-themes",level:3},{value:"Create your own theme",id:"create-theme",level:3},{value:"Custom CSS classes",id:"custom-css-classes",level:3},{value:"Custom inline CSS",id:"custom-inline-styles",level:3},{value:"Custom labels",id:"custom-labels",level:3}],p={toc:l};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Auth UI is a pre-built React component for authenticating users.\nIt supports custom themes and extensible styles to match your brand and aesthetic."),(0,s.kt)("video",{width:"99%",muted:!0,playsInline:!0,controls:"true"},(0,s.kt)("source",{src:"https://supabase.com/images/blog/lw5-one-more/auth-ui-demo.mp4",type:"video/mp4",muted:!0,playsInline:!0})),(0,s.kt)("h2",{id:"set-up-auth-ui"},"Set up Auth UI"),(0,s.kt)("p",null,"Install the latest version of ",(0,s.kt)("a",{parentName:"p",href:"/docs/reference/javascript"},"supabase-js")," and the Auth UI package:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @supabase/supabase-js @supabase/auth-ui-react\n")),(0,s.kt)("h3",{id:"import-the-auth-component"},"Import the Auth component"),(0,s.kt)("p",null,"Pass ",(0,s.kt)("inlineCode",{parentName:"p"},"supabaseClient")," from ",(0,s.kt)("inlineCode",{parentName:"p"},"@supabase/supabase-js")," as a prop to the component."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createClient } from '@supabase/supabase-js'\nimport { Auth } from '@supabase/auth-ui-react'\n\nconst supabase = createClient(\n  '<INSERT PROJECT URL>',\n  '<INSERT PROJECT ANON API KEY>'\n)\n\nconst App = () => <Auth supabaseClient={supabase} />\n")),(0,s.kt)("p",null,"This renders the Auth component without any styling.\nWe recommend using one of the predefined themes to style the UI.\nImport the theme you want to use and pass it to the ",(0,s.kt)("inlineCode",{parentName:"p"},"appearence.theme")," prop."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-diff",metastring:'js title="/src/index.js"',js:!0,title:'"/src/index.js"'},"import {\n    Auth,\n    // highlight-next-line\n    ThemeSupa\n} from '@supabase/auth-ui-react'\n\nconst App = () => (\n    <Auth\n        supabaseClient={supabase}\n        // highlight-next-line\n        appearance={{ theme: ThemeSupa }}\n    />\n)\n")),(0,s.kt)("h2",{id:"customization"},"Customization"),(0,s.kt)("p",null,"There are several ways to customize Auth UI:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Use one of the ",(0,s.kt)("a",{parentName:"li",href:"#predefined-themes"},"predefined themes")," that comes with Auth UI"),(0,s.kt)("li",{parentName:"ul"},"Extend a theme by ",(0,s.kt)("a",{parentName:"li",href:"#override-themes"},"overriding the variable tokens")," in a theme"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#create-theme"},"Create your own theme")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#custom-css-classes"},"Use your own CSS classes")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#custom-inline-styles"},"Use inline styles")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#custom-labels"},"Use your own labels"))),(0,s.kt)("h3",{id:"predefined-themes"},"Predefined themes"),(0,s.kt)("p",null,"Auth UI comes with several themes to customize the appearance. Each predefined theme comes with at least two variations, a ",(0,s.kt)("inlineCode",{parentName:"p"},"default")," variation, and a ",(0,s.kt)("inlineCode",{parentName:"p"},"dark")," variation. You can switch between these themes using the ",(0,s.kt)("inlineCode",{parentName:"p"},"theme")," prop. Import the theme you want to use and pass it to the ",(0,s.kt)("inlineCode",{parentName:"p"},"appearence.theme")," prop."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createClient } from '@supabase/supabase-js'\n//highlight-next-line\nimport { Auth, ThemeSupa } from '@supabase/auth-ui-react'\n\nconst supabase = createClient(\n  '<INSERT PROJECT URL>',\n  '<INSERT PROJECT ANON API KEY>'\n)\n\nconst App = () => (\n  <Auth\n    supabaseClient={supabase}\n    // highlight-next-line\n    appearance={{ theme: ThemeSupa }}\n  />\n)\n")),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Currently there is only one predefined theme available, but we plan to add more.")),(0,s.kt)("h3",{id:"switch-theme-variations"},"Switch theme variations"),(0,s.kt)("p",null,"Auth UI comes with two theme variations: ",(0,s.kt)("inlineCode",{parentName:"p"},"default")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"dark"),". You can switch between these themes with the ",(0,s.kt)("inlineCode",{parentName:"p"},"theme")," prop."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createClient } from '@supabase/supabase-js'\nimport { Auth, ThemeSupa } from '@supabase/auth-ui-react'\n\nconst supabase = createClient(\n  '<INSERT PROJECT URL>',\n  '<INSERT PROJECT ANON API KEY>'\n)\n\nconst App = () => (\n  <Auth\n    supabaseClient={supabase}\n    appearance={{ theme: ThemeSupa }}\n    // highlight-next-line\n    theme=\"dark\"\n  />\n)\n")),(0,s.kt)("p",null,"If you don't pass a value to ",(0,s.kt)("inlineCode",{parentName:"p"},"theme")," it uses the ",(0,s.kt)("inlineCode",{parentName:"p"},'"default"')," theme. You can pass ",(0,s.kt)("inlineCode",{parentName:"p"},'"dark"')," to the theme prop to switch to the ",(0,s.kt)("inlineCode",{parentName:"p"},"dark")," theme. If your theme has other variations, use the name of the variation in this prop."),(0,s.kt)("h3",{id:"override-themes"},"Override themes"),(0,s.kt)("p",null,"Auth UI themes can be overridden using variable tokens. See the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/supabase-community/auth-ui/blob/main/packages/react/common/theming/Themes.tsx"},"list of variable tokens"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createClient } from '@supabase/supabase-js'\nimport { Auth, ThemeSupa } from '@supabase/auth-ui-react'\n\nconst supabase = createClient(\n  '<INSERT PROJECT URL>',\n  '<INSERT PROJECT ANON API KEY>'\n)\n\nconst App = () => (\n  <Auth\n    supabaseClient={supabase}\n    appearance={{\n      theme: ThemeSupa,\n      // highlight-start\n      variables: {\n        default: {\n          colors: {\n            brand: 'red',\n            brandAccent: 'darkred',\n          },\n        },\n      },\n      // highlight-end\n    }}\n  />\n)\n")),(0,s.kt)("p",null,"If you created your own theme, you may not need to override any of the them."),(0,s.kt)("h3",{id:"create-theme"},"Create your own theme"),(0,s.kt)("p",null,"You can create your own theme by following the same structure within a ",(0,s.kt)("inlineCode",{parentName:"p"},"appearance.theme")," property.\nSee the list of ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/supabase-community/auth-ui/blob/main/packages/react/common/theming/Themes.tsx"},"tokens within a theme"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createClient } from '@supabase/supabase-js'\nimport { Auth } from '@supabase/auth-ui-react'\n\nconst supabase = createClient(\n  '<INSERT PROJECT URL>',\n  '<INSERT PROJECT ANON API KEY>'\n)\n\nconst customTheme = {\n  default: {\n    colors: {\n      brand: 'hsl(153 60.0% 53.0%)',\n      brandAccent: 'hsl(154 54.8% 45.1%)',\n      brandButtonText: 'white',\n      // ..\n  },\n  dark: {\n    colors: {\n      brandButtonText: 'white',\n      defaultButtonBackground: '#2e2e2e',\n      defaultButtonBackgroundHover: '#3e3e3e',\n      //..\n    },\n  },\n  // You can also add more theme variations with different names.\n  evenDarker: {\n    colors: {\n      brandButtonText: 'white',\n      defaultButtonBackground: '#1e1e1e',\n      defaultButtonBackgroundHover: '#2e2e2e',\n      //..\n    },\n  },\n}\n\nconst App = () => (\n  <Auth\n    supabaseClient={supabase}\n    theme=\"default\" // can also be \"dark\" or \"evenDarker\"\n    appearance={{ theme: customTheme}}\n  />\n)\n")),(0,s.kt)("p",null,"You can swich between different variations of your theme with the ",(0,s.kt)("a",{parentName:"p",href:"#switch-theme-variations"},'"theme" prop'),"."),(0,s.kt)("h3",{id:"custom-css-classes"},"Custom CSS classes"),(0,s.kt)("p",null,"You can use custom CSS classes for the following elements:\n",(0,s.kt)("inlineCode",{parentName:"p"},'"button"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"container"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"anchor"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"divider"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"label"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"input"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"loader"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"message"'),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createClient } from '@supabase/supabase-js'\nimport { Auth } from '@supabase/auth-ui-react'\n\nconst supabase = createClient(\n  '<INSERT PROJECT URL>',\n  '<INSERT PROJECT ANON API KEY>'\n)\n\nconst App = () => (\n  <Auth\n    supabaseClient={supabase}\n    appearance={{\n      className: {\n        anchor: 'my-awesome-anchor',\n        button: 'my-awesome-button',\n        //..\n      },\n    }}\n  />\n)\n")),(0,s.kt)("h3",{id:"custom-inline-styles"},"Custom inline CSS"),(0,s.kt)("p",null,"You can use custom CSS inline styles for the following elements:\n",(0,s.kt)("inlineCode",{parentName:"p"},'"button"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"container"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"anchor"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"divider"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"label"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"input"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"loader"'),", ",(0,s.kt)("inlineCode",{parentName:"p"},'"message"'),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createClient } from '@supabase/supabase-js'\nimport { Auth } from '@supabase/auth-ui-react'\n\nconst supabase = createClient(\n  '<INSERT PROJECT URL>',\n  '<INSERT PROJECT ANON API KEY>'\n)\n\nconst App = () => (\n  <Auth\n    supabaseClient={supabase}\n    appearance={{\n      style: {\n        button: { background: 'red', color: 'white' },\n        anchor: { color: 'blue' },\n        //..\n      },\n    }}\n  />\n)\n")),(0,s.kt)("h3",{id:"custom-labels"},"Custom labels"),(0,s.kt)("p",null,"You can use custom labels with ",(0,s.kt)("inlineCode",{parentName:"p"},"localization.variables"),". See the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/supabase-community/auth-ui/blob/main/packages/react/common/lib/Localization/en.json"},"list of labels")," that can be overwritten."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/index.js"',title:'"/src/index.js"'},"import { createClient } from '@supabase/supabase-js'\nimport { Auth } from '@supabase/auth-ui-react'\n\nconst supabase = createClient(\n  '<INSERT PROJECT URL>',\n  '<INSERT PROJECT ANON API KEY>'\n)\n\nconst App = () => (\n  <Auth\n    supabaseClient={supabase}\n    //highlight-start\n    localization={{\n      variables: {\n        sign_in: {\n          email_label: 'Your email address',\n          password_label: 'Your strong password',\n        },\n      },\n    }}\n    //highlight-end\n  />\n)\n")))}m.isMDXComponent=!0}}]);