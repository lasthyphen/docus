"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[89737],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(a),p=r,h=d["".concat(o,".").concat(p)]||d[p]||m[p]||i;return a?n.createElement(h,s(s({ref:t},c),{},{components:a})):n.createElement(h,s({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=p;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[d]="string"==typeof e?e:r,s[1]=l;for(var u=2;u<i;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},61756:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=a(87462),r=(a(67294),a(3905));a(65488),a(85162);const i={id:"stream",title:"stream()",slug:"/stream",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_dart_v1.yml"},s=void 0,l={unversionedId:"generated/stream",id:"generated/stream",title:"stream()",description:"Notifies of data at the queried table.",source:"@site/_supabase_dart/generated/stream.mdx",sourceDirName:"generated",slug:"/stream",permalink:"/docs/reference/dart/stream",draft:!1,editUrl:"https://github.com/supabase/supabase/edit/master/spec/supabase_dart_v1.yml",tags:[],version:"current",frontMatter:{id:"stream",title:"stream()",slug:"/stream",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_dart_v1.yml"},sidebar:"sidebar",previous:{title:".filter()",permalink:"/docs/reference/dart/filter"},next:{title:"on().subscribe()",permalink:"/docs/reference/dart/subscribe"}},o={},u=[{value:"Notes",id:"notes",level:2},{value:"Examples",id:"examples",level:2},{value:"Listening to a specific table",id:"listening-to-a-specific-table",level:3},{value:"Listening to a specific rows within a table",id:"listening-to-a-specific-rows-within-a-table",level:3},{value:"With <code>order()</code>",id:"with-order",level:3},{value:"With <code>limit()</code>",id:"with-limit",level:3},{value:"Using <code>stream()</code> with <code>StreamBuilder</code>",id:"using-stream-with-streambuilder",level:3}],c={toc:u};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Notifies of data at the queried table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"supabase.from('countries')\n  .stream(primaryKey: ['id'])\n  .listen((List<Map<String, dynamic>> data) {\n  // Do something awesome with the data\n});\n")),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stream()")," will emit the initial data as well as any further change on the database as ",(0,r.kt)("inlineCode",{parentName:"li"},"Stream")," of ",(0,r.kt)("inlineCode",{parentName:"li"},"List<Map<String, dynamic>>")," by combining Postgrest and Realtime."),(0,r.kt)("li",{parentName:"ul"},"Takes a list of primary key columns as its argument.")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"listening-to-a-specific-table"},"Listening to a specific table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"supabase.from('countries')\n  .stream(primaryKey: ['id'])\n  .listen((List<Map<String, dynamic>> data) {\n  // Do something awesome with the data\n});\n")),(0,r.kt)("h3",{id:"listening-to-a-specific-rows-within-a-table"},"Listening to a specific rows within a table"),(0,r.kt)("p",null,"You can listen to individual rows using the format ",(0,r.kt)("inlineCode",{parentName:"p"},"{table}:{col}=eq.{val}")," - where ",(0,r.kt)("inlineCode",{parentName:"p"},"{col}")," is the column name, and ",(0,r.kt)("inlineCode",{parentName:"p"},"{val}")," is the value which you want to match.\nThis syntax is the as how you can filter data in Realtime"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"supabase.from('countries')\n  .stream(primaryKey: ['id'])\n  .eq('id', '120')\n  .listen((List<Map<String, dynamic>> data) {\n  // Do something awesome with the data\n});\n")),(0,r.kt)("h3",{id:"with-order"},"With ",(0,r.kt)("inlineCode",{parentName:"h3"},"order()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"supabase.from('countries')\n  .stream(primaryKey: ['id'])\n  .order('name', ascending: true)\n  .listen((List<Map<String, dynamic>> data) {\n  // Do something awesome with the data\n});\n")),(0,r.kt)("h3",{id:"with-limit"},"With ",(0,r.kt)("inlineCode",{parentName:"h3"},"limit()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"supabase.from('countries')\n  .stream(primaryKey: ['id'])\n  .order('name', ascending: true)\n  .limit(10)\n  .listen((List<Map<String, dynamic>> data) {\n  // Do something awesome with the data\n});\n")),(0,r.kt)("h3",{id:"using-stream-with-streambuilder"},"Using ",(0,r.kt)("inlineCode",{parentName:"h3"},"stream()")," with ",(0,r.kt)("inlineCode",{parentName:"h3"},"StreamBuilder")),(0,r.kt)("p",null,"When using ",(0,r.kt)("inlineCode",{parentName:"p"},"stream()")," with a ",(0,r.kt)("inlineCode",{parentName:"p"},"StreamBuilder")," within your Flutter application, make sure to store your stream in a variable to prevent refetching upon rebuilding."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final supabase = Supabase.instance.client;\n\nclass MyWidget extends StatefulWidget {\n  const MyWidget({Key? key}) : super(key: key);\n\n  @override\n  State<MyWidget> createState() => _MyWidgetState();\n}\n\nclass _MyWidgetState extends State<MyWidget> {\n  // Persist the stream in a local variable to prevent refetching upon rebuilds\n  final _stream = supabase.from('countries').stream(primaryKey: ['id']);\n\n  @override\n  Widget build(BuildContext context) {\n    return StreamBuilder(\n      stream: _stream,\n      builder: (context, snapshot) {\n        // Return your widget with the data from the snapshot\n      },\n    );\n  }\n}\n")))}d.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(67294),r=a(86010);const i="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,s),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>p});var n=a(87462),r=a(67294),i=a(86010),s=a(72389),l=a(67392),o=a(7094),u=a(12466);const c="tabList__CuJ",d="tabItem_LNqP";function m(e){const{lazy:t,block:a,defaultValue:s,values:m,groupId:p,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),g=(0,l.l)(f,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===s?s:s??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:k}=(0,o.U)(),[w,N]=(0,r.useState)(y),O=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=p){const e=v[p];null!=e&&e!==w&&f.some((t=>t.value===e))&&N(e)}const x=e=>{const t=e.currentTarget,a=O.indexOf(t),n=f[a].value;n!==w&&(E(t),N(n),null!=p&&k(p,String(n)))},S=e=>{let t=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":{const a=O.indexOf(e.currentTarget)+1;t=O[a]??O[0];break}case"ArrowLeft":{const a=O.indexOf(e.currentTarget)-1;t=O[a]??O[O.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},h)},f.map((e=>{let{value:t,label:a,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>O.push(e),onKeyDown:S,onClick:x},s,{className:(0,i.Z)("tabs__item",d,s?.className,{"tabs__item--active":w===t})}),a??t)}))),t?(0,r.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function p(e){const t=(0,s.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}}}]);