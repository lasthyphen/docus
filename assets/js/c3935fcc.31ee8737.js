"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[88323],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var r=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(a),h=i,f=c["".concat(l,".").concat(h)]||c[h]||d[h]||n;return a?r.createElement(f,o(o({ref:t},p),{},{components:a})):r.createElement(f,o({ref:t},p))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=a.length,o=new Array(n);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<n;u++)o[u]=a[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(67294),i=a(86010);const n="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(n,o),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>h});var r=a(87462),i=a(67294),n=a(86010),o=a(72389),s=a(67392),l=a(7094),u=a(12466);const p="tabList__CuJ",c="tabItem_LNqP";function d(e){const{lazy:t,block:a,defaultValue:o,values:d,groupId:h,className:f}=e,m=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=d??m.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),b=(0,s.l)(g,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===o?o:o??m.find((e=>e.props.default))?.props.value??m[0].props.value;if(null!==v&&!g.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:y}=(0,l.U)(),[w,S]=(0,i.useState)(v),N=[],{blockElementScrollPositionUntilNextRender:O}=(0,u.o5)();if(null!=h){const e=k[h];null!=e&&e!==w&&g.some((t=>t.value===e))&&S(e)}const T=e=>{const t=e.currentTarget,a=N.indexOf(t),r=g[a].value;r!==w&&(O(t),S(r),null!=h&&y(h,String(r)))},P=e=>{let t=null;switch(e.key){case"Enter":T(e);break;case"ArrowRight":{const a=N.indexOf(e.currentTarget)+1;t=N[a]??N[0];break}case"ArrowLeft":{const a=N.indexOf(e.currentTarget)-1;t=N[a]??N[N.length-1];break}}t?.focus()};return i.createElement("div",{className:(0,n.Z)("tabs-container",p)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":a},f)},g.map((e=>{let{value:t,label:a,attributes:o}=e;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>N.push(e),onKeyDown:P,onClick:T},o,{className:(0,n.Z)("tabs__item",c,o?.className,{"tabs__item--active":w===t})}),a??t)}))),t?(0,i.cloneElement)(m.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},m.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function h(e){const t=(0,o.Z)();return i.createElement(d,(0,r.Z)({key:String(t)},e))}},26966:(e,t,a)=>{a.d(t,{Z:()=>n});var r=a(67294),i=a(39960);function n(e){let{children:t,icon:a,title:n,description:o,to:s,layout:l="vertical"}=e;return r.createElement(i.Z,{to:s,className:["button-card",`button-card--${l}`].join(" ")},t||r.createElement("div",{className:"button-card__inner"},a&&"string"==typeof a?r.createElement("img",{src:a,width:56}):a,r.createElement("h3",null,n),r.createElement("p",null,o)))}},47821:(e,t,a)=>{a.d(t,{Z:()=>r});const r=[{name:"Apple",href:"/guides/auth/auth-apple",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Azure",href:"/guides/auth/auth-azure",official:!1,supporter:"TBD",platform:!0,selfHosted:!0},{name:"Bitbucket",href:"/guides/auth/auth-bitbucket",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Discord",href:"/guides/auth/auth-discord",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Facebook",href:"/guides/auth/auth-facebook",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"GitHub",href:"/guides/auth/auth-github",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"GitLab",href:"/guides/auth/auth-gitlab",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Google",href:"/guides/auth/auth-google",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Keycloak",href:"/guides/auth/auth-keycloak",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"LinkedIn",href:"/guides/auth/auth-linkedin",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"MessageBird",href:"/guides/auth/auth-messagebird",official:!1,supporter:"MessageBird",platform:!0,selfHosted:!0},{name:"Notion",href:"/guides/auth/auth-notion",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Slack",href:"/guides/auth/auth-slack",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Spotify",href:"/guides/auth/auth-spotify",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Twitter",href:"/guides/auth/auth-twitter",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Twitch",href:"/guides/auth/auth-twitch",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Zoom",href:"/guides/auth/auth-zoom",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Twilio",href:"/guides/auth/auth-twilio",official:!0,supporter:"Supabase",platform:!0,selfHosted:!0},{name:"Vonage",href:"/guides/auth/auth-vonage",official:!1,supporter:"Supabase",platform:!0,selfHosted:!0}]},56470:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=a(87462),i=(a(67294),a(3905)),n=(a(39960),a(65488),a(85162),a(47821)),o=a(26966),s=a(44996);const l={id:"auth",title:"Auth",description:"Use Supabase to Authenticate and Authorize your users.",sidebar_label:"Overview"},u=void 0,p={unversionedId:"guides/auth",id:"guides/auth",title:"Auth",description:"Use Supabase to Authenticate and Authorize your users.",source:"@site/docs/guides/auth.mdx",sourceDirName:"guides",slug:"/guides/auth",permalink:"/docs/guides/auth",draft:!1,editUrl:"https://github.com/docs/guides/auth.mdx",tags:[],version:"current",frontMatter:{id:"auth",title:"Auth",description:"Use Supabase to Authenticate and Authorize your users.",sidebar_label:"Overview"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Providers",id:"providers",level:3},{value:"Configure third-party providers",id:"configure-third-party-providers",level:3},{value:"Authorization",id:"authorization",level:2},{value:"Row Level Security",id:"row-level-security",level:3},{value:"Policies",id:"policies",level:3},{value:"How It Works",id:"how-it-works",level:3},{value:"User Management",id:"user-management",level:2}],h={toc:d};function f(e){let{components:t,...l}=e;return(0,i.kt)("wrapper",(0,r.Z)({},h,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"There are two parts to every Auth system:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Authentication:")," should this person be allowed in? If yes, who are they?"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Authorization:")," once they are in, what are they allowed to do?")),(0,i.kt)("p",null,"Supabase Auth is designed to work either as a standalone product, or deeply integrated with the other Supabase products.\nPostgres is at the heart of everything we do, and the Auth system follows this principle. We leverage Postgres' built-in Auth functionality wherever possible."),(0,i.kt)("p",null,"Here's a quick, 2 minute tour of the Auth features built-in to Supabase:"),(0,i.kt)("div",{class:"video-container"},(0,i.kt)("iframe",{src:"https://www.youtube-nocookie.com/embed/6ow_jW4epf8",frameBorder:"1",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})),(0,i.kt)("h2",{id:"authentication"},"Authentication"),(0,i.kt)("p",null,"You can authenticate your users in several ways:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Email & password."),(0,i.kt)("li",{parentName:"ul"},"Magic links (one-click logins)."),(0,i.kt)("li",{parentName:"ul"},"Social providers."),(0,i.kt)("li",{parentName:"ul"},"Phone logins.")),(0,i.kt)("h3",{id:"providers"},"Providers"),(0,i.kt)("p",null,"We provide a suite of Providers and login methods, as well as ",(0,i.kt)("a",{parentName:"p",href:"/docs/guides/auth/auth-helpers/"},"Auth helpers"),"."),(0,i.kt)("div",{class:"container",style:{padding:0}},(0,i.kt)("div",{class:"row is-multiline"},n.Z.map((e=>(0,i.kt)("div",{key:e.name,class:"col col--6"},(0,i.kt)(o.Z,{class:"card",to:(0,s.Z)(e.href),title:e.name,style:{height:"100%"},mdxType:"ButtonCard"},(0,i.kt)("div",{class:"button-card__inner"},(0,i.kt)("div",{class:"",style:{display:"flex",justifyContent:"space-between",gap:10}},e.logo&&(0,i.kt)("img",{src:e.logo,alt:e.name,width:"20"}),(0,i.kt)("p",null,e.name),(0,i.kt)("p",null,e.official?(0,i.kt)("span",{class:"badge badge--official"},"Official"):(0,i.kt)("span",{class:"badge badge--unofficial"},"Unofficial"))),(0,i.kt)("div",{style:{display:"flex",flexDirection:"column",gap:5}},(0,i.kt)("div",{class:"code-block",style:{width:"100%",display:"flex",justifyContent:"space-between",fontSize:"0.7rem"}},(0,i.kt)("span",null,"Platform:"),(0,i.kt)("span",null,e.platform.toString())),(0,i.kt)("div",{class:"code-block",style:{width:"100%",display:"flex",justifyContent:"space-between",fontSize:"0.7rem"}},(0,i.kt)("span",null,"Self-Hosted:"),(0,i.kt)("span",null,e.selfHosted.toString())))))))))),(0,i.kt)("h3",{id:"configure-third-party-providers"},"Configure third-party providers"),(0,i.kt)("p",null,"You can enable third-party providers with the click of a button by navigating to Authentication > Settings > Auth Providers and inputting your ",(0,i.kt)("inlineCode",{parentName:"p"},"Client ID")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Secret")," for each."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"OAuth Logins.",src:a(40684).Z,width:"1816",height:"1238"})),(0,i.kt)("h2",{id:"authorization"},"Authorization"),(0,i.kt)("p",null,"When you need granular authorization rules, nothing beats PostgreSQL's Row Level Security (RLS)."),(0,i.kt)("p",null,"Policies are PostgreSQL's rule engine. They are incredibly powerful and flexible, allowing you to write complex SQL rules which fit your unique business needs."),(0,i.kt)("p",null,"Get started with our ",(0,i.kt)("a",{parentName:"p",href:"/docs/guides/auth/row-level-security"},"Row Level Security Guides"),"."),(0,i.kt)("h3",{id:"row-level-security"},"Row Level Security"),(0,i.kt)("p",null,"Authentication only gets you so far. When you need granular authorization rules, nothing beats PostgreSQL's ",(0,i.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/ddl-rowsecurity.html"},"Row Level Security (RLS)"),". Supabase makes it simple to turn RLS on and off."),(0,i.kt)("video",{width:"99%",muted:!0,playsInline:!0,controls:"true"},(0,i.kt)("source",{src:"/docs/videos/rls-zoom2.mp4",type:"video/mp4",muted:!0,playsInline:!0})),(0,i.kt)("h3",{id:"policies"},"Policies"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/sql-createpolicy.html"},"Policies")," are PostgreSQL's rule engine. They are incredibly powerful and flexible, allowing you to write complex SQL rules which fit your unique business needs."),(0,i.kt)("video",{width:"99%",muted:!0,playsInline:!0,controls:"true"},(0,i.kt)("source",{src:"/docs/videos/policies-zoom2.mp4",type:"video/mp4",muted:!0,playsInline:!0})),(0,i.kt)("p",null,"With policies, your database becomes the rules engine. Instead of repetitively filtering your queries, like this ..."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const loggedInUserId = 'd0714948'\nlet { data, error } = await supabase\n  .from('users')\n  .select('user_id, name')\n  .eq('user_id', loggedInUserId)\n\n// console.log(data)\n// => { id: 'd0714948', name: 'Jane' }\n")),(0,i.kt)("p",null,"... you can simply define a rule on your database table, ",(0,i.kt)("inlineCode",{parentName:"p"},"auth.uid() = user_id"),", and your request will return the rows which pass the rule, even when you remove the filter from your middleware:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"let { data, error } = await supabase.from('users').select('user_id, name')\n\n// console.log(data)\n// Still => { id: 'd0714948', name: 'Jane' }\n")),(0,i.kt)("h3",{id:"how-it-works"},"How It Works"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"A user signs up. Supabase creates a new user in the ",(0,i.kt)("inlineCode",{parentName:"li"},"auth.users")," table."),(0,i.kt)("li",{parentName:"ol"},"Supabase returns a new JWT, which contains the user's ",(0,i.kt)("inlineCode",{parentName:"li"},"UUID"),"."),(0,i.kt)("li",{parentName:"ol"},"Every request to your database also sends the JWT."),(0,i.kt)("li",{parentName:"ol"},"Postgres inspects the JWT to determine the user making the request."),(0,i.kt)("li",{parentName:"ol"},"The user's UID can be used in policies to restrict access to rows.")),(0,i.kt)("p",null,"Supabase provides a special function in Postgres, ",(0,i.kt)("inlineCode",{parentName:"p"},"auth.uid()"),", which extracts the user's UID from the JWT. This is especially useful when creating policies."),(0,i.kt)("h2",{id:"user-management"},"User Management"),(0,i.kt)("p",null,"Supabase provides multiple endpoints to authenticate and manage your users:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/javascript/auth-signup"},"Sign up")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/javascript/auth-signinwithpassword"},"Sign in with password")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/javascript/auth-signinwithotp"},"Sign in with passwordless / one-time password (OTP)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/javascript/auth-signinwithoauth"},"Sign in with OAuth")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/reference/javascript/auth-signout"},"Sign out"))),(0,i.kt)("p",null,"When users sign up, Supabase assigns them a unique ID. You can reference this ID anywhere in your database. For example, you might create a ",(0,i.kt)("inlineCode",{parentName:"p"},"profiles")," table referencing ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"auth.users")," table using a ",(0,i.kt)("inlineCode",{parentName:"p"},"user_id")," field."),(0,i.kt)("video",{width:"99%",muted:!0,playsInline:!0,controls:"true"},(0,i.kt)("source",{src:"/docs/videos/auth-zoom2.mp4",type:"video/mp4",muted:!0,playsInline:!0})))}f.isMDXComponent=!0},40684:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/supabase-oauth-logins-4a43501cd6a92514d91934e252e260dc.png"}}]);