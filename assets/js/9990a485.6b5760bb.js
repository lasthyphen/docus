"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[98085],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(a),c=r,g=u["".concat(s,".").concat(c)]||u[c]||m[c]||l;return a?n.createElement(g,i(i({ref:t},d),{},{components:a})):n.createElement(g,i({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(87462),r=a(67294),l=a(86010),i=a(72389),o=a(67392),s=a(7094),p=a(12466);const d="tabList__CuJ",u="tabItem_LNqP";function m(e){const{lazy:t,block:a,defaultValue:i,values:m,groupId:c,className:g}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),N=(0,o.l)(b,((e,t)=>e.value===t.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===i?i:i??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==h&&!b.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:f}=(0,s.U)(),[v,T]=(0,r.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:S}=(0,p.o5)();if(null!=c){const e=y[c];null!=e&&e!==v&&b.some((t=>t.value===e))&&T(e)}const O=e=>{const t=e.currentTarget,a=w.indexOf(t),n=b[a].value;n!==v&&(S(t),T(n),null!=c&&f(c,String(n)))},j=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;t=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;t=w[a]??w[w.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},g)},b.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,key:t,ref:e=>w.push(e),onKeyDown:j,onClick:O},i,{className:(0,l.Z)("tabs__item",u,i?.className,{"tabs__item--active":v===t})}),a??t)}))),t?(0,r.cloneElement)(k.filter((e=>e.props.value===v))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==v})))))}function c(e){const t=(0,i.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},80117:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var n=a(87462),r=(a(67294),a(3905)),l=a(65488),i=a(85162);const o={id:"json",title:"JSON",description:"Using the JSON data type in PostgreSQL."},s=void 0,p={unversionedId:"guides/database/json",id:"guides/database/json",title:"JSON",description:"Using the JSON data type in PostgreSQL.",source:"@site/docs/guides/database/json.mdx",sourceDirName:"guides/database",slug:"/guides/database/json",permalink:"/docs/guides/database/json",draft:!1,editUrl:"https://github.com/docs/guides/database/json.mdx",tags:[],version:"current",frontMatter:{id:"json",title:"JSON",description:"Using the JSON data type in PostgreSQL."}},d={},u=[{value:"Create a table with a JSON column",id:"create-a-table-with-a-json-column",level:2},{value:"Insert data into the table",id:"insert-data-into-the-table",level:2},{value:"View the data",id:"view-the-data",level:2},{value:"Query the <code>JSONB</code> data",id:"query-the-jsonb-data",level:2},{value:"Resources",id:"resources",level:2}],m={toc:u};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"PostgreSQL supports ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/functions-json.html"},"JSON functions and operators")," which gives flexibility when storing data inside a database column."),(0,r.kt)("p",null,"PostgreSQL supports two types of JSON columns: ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"JSONB"),".\nThe recommended type is ",(0,r.kt)("inlineCode",{parentName:"p"},"JSONB")," for almost all cases.\nWhen you use the ",(0,r.kt)("inlineCode",{parentName:"p"},"JSONB")," format, the data is parsed when it's put into the database so it's faster when querying and also it can be indexed."),(0,r.kt)("h2",{id:"create-a-table-with-a-json-column"},"Create a table with a JSON column"),(0,r.kt)(l.Z,{groupId:"json",defaultValue:"dashboard",values:[{label:"Dashboard",value:"dashboard"},{label:"SQL",value:"sql"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"dashboard",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to the ",(0,r.kt)("a",{parentName:"li",href:"https://app.supabase.com/project/_/editor"},"Table Editor")," page in the Dashboard."),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("strong",{parentName:"li"},"New Table")," and create a table called ",(0,r.kt)("inlineCode",{parentName:"li"},"books"),"."),(0,r.kt)("li",{parentName:"ol"},"Include a primary key with the following properties:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name: ",(0,r.kt)("inlineCode",{parentName:"li"},"id")),(0,r.kt)("li",{parentName:"ul"},"Type: ",(0,r.kt)("inlineCode",{parentName:"li"},"int8")),(0,r.kt)("li",{parentName:"ul"},"Default value: ",(0,r.kt)("inlineCode",{parentName:"li"},"Automatically generate as indentity")))),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("strong",{parentName:"li"},"Save"),"."),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("strong",{parentName:"li"},"New Column")," and add 3 columns with the following properties:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"title")," column",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name: ",(0,r.kt)("inlineCode",{parentName:"li"},"title")),(0,r.kt)("li",{parentName:"ul"},"Type: ",(0,r.kt)("inlineCode",{parentName:"li"},"text")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"author")," column",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name: ",(0,r.kt)("inlineCode",{parentName:"li"},"author")),(0,r.kt)("li",{parentName:"ul"},"Type: ",(0,r.kt)("inlineCode",{parentName:"li"},"text")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"metadata")," column",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name: ",(0,r.kt)("inlineCode",{parentName:"li"},"metadata")),(0,r.kt)("li",{parentName:"ul"},"Type: ",(0,r.kt)("inlineCode",{parentName:"li"},"jsonb")))))))),(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"create table books (\n  id serial primary key,\n  title text,\n  author text,\n  metadata jsonb\n);\n")))),(0,r.kt)("h2",{id:"insert-data-into-the-table"},"Insert data into the table"),(0,r.kt)(l.Z,{groupId:"json",defaultValue:"dashboard",values:[{label:"Dashboard",value:"dashboard"},{label:"SQL",value:"sql"},{label:"JavaScript",value:"javascript"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"dashboard",mdxType:"TabItem"},(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to the ",(0,r.kt)("a",{parentName:"li",href:"https://app.supabase.com/project/_/editor"},"Table Editor")," page in the Dashboard."),(0,r.kt)("li",{parentName:"ol"},"Select the ",(0,r.kt)("inlineCode",{parentName:"li"},"books")," table in the sidebar."),(0,r.kt)("li",{parentName:"ol"},"Click ",(0,r.kt)("strong",{parentName:"li"},"+ Insert row")," and add 5 rows with the following properties:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"id"),(0,r.kt)("th",{parentName:"tr",align:null},"title"),(0,r.kt)("th",{parentName:"tr",align:null},"author"),(0,r.kt)("th",{parentName:"tr",align:null},"metadata"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"The Poky Little Puppy"),(0,r.kt)("td",{parentName:"tr",align:null},"Janette Sebring Lowrey"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[3,6]",',"price":5.95,"description":"Puppy is slower than other, bigger animals."}')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"The Tale of Peter Rabbit"),(0,r.kt)("td",{parentName:"tr",align:null},"Beatrix Potter"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[2,5]",',"price":4.49,"description":"Rabbit eats some vegetables."}')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"Tootle"),(0,r.kt)("td",{parentName:"tr",align:null},"Gertrude Crampton"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[2,5]",',"price":3.99,"description":"Little toy train has big dreams."}')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"Green Eggs and Ham"),(0,r.kt)("td",{parentName:"tr",align:null},"Dr. Seuss"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[4,8]",',"price":7.49,"description":"Sam has changing food preferences and eats unusually colored food."}')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"Harry Potter and the Goblet of Fire"),(0,r.kt)("td",{parentName:"tr",align:null},"J.K. Rowling"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[10,99]",',"price":24.95,"description":"Fourth year of school starts, big drama ensues."}'))))),(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'insert into books\n  (title, author, metadata)\nvalues\n  (\n    \'The Poky Little Puppy\',\n    \'Janette Sebring Lowrey\',\n    \'{"description":"Puppy is slower than other, bigger animals.","price":5.95,"ages":[3,6]}\'\n  ),\n  (\n    \'The Tale of Peter Rabbit\',\n    \'Beatrix Potter\',\n    \'{"description":"Rabbit eats some vegetables.","price":4.49,"ages":[2,5]}\'\n  ),\n  (\n    \'Tootle\',\n    \'Gertrude Crampton\',\n    \'{"description":"Little toy train has big dreams.","price":3.99,"ages":[2,5]}\'\n  ),\n  (\n    \'Green Eggs and Ham\',\n    \'Dr. Seuss\',\n    \'{"description":"Sam has changing food preferences and eats unusually colored food.","price":7.49,"ages":[4,8]}\'\n  ),\n  (\n    \'Harry Potter and the Goblet of Fire\',\n    \'J.K. Rowling\',\n    \'{"description":"Fourth year of school starts, big drama ensues.","price":24.95,"ages":[10,99]}\'\n  );\n'))),(0,r.kt)(i.Z,{value:"javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase.from('books').insert([\n  {\n    title: 'The Poky Little Puppy',\n    author: 'Janette Sebring Lowrey',\n    metadata: {\n      description: 'Puppy is slower than other, bigger animals.',\n      price: 5.95,\n      ages: [3, 6],\n    },\n  },\n  {\n    title: 'The Tale of Peter Rabbit',\n    author: 'Beatrix Potter',\n    metadata: {\n      description: 'Rabbit eats some vegetables.',\n      price: 4.49,\n      ages: [2, 5],\n    },\n  },\n  {\n    title: 'Tootle',\n    author: 'Gertrude Crampton',\n    metadata: {\n      description: 'Little toy train has big dreams.',\n      price: 3.99,\n      ages: [2, 5],\n    },\n  },\n  {\n    title: 'Green Eggs and Ham',\n    author: 'Dr. Seuss',\n    metadata: {\n      description:\n        'Sam has changing food preferences and eats unusually colored food.',\n      price: 7.49,\n      ages: [4, 8],\n    },\n  },\n  {\n    title: 'Harry Potter and the Goblet of Fire',\n    author: 'J.K. Rowling',\n    metadata: {\n      description: 'Fourth year of school starts, big drama ensues.',\n      price: 24.95,\n      ages: [10, 99],\n    },\n  },\n])\n")))),(0,r.kt)("h2",{id:"view-the-data"},"View the data"),(0,r.kt)(l.Z,{groupId:"json",defaultValue:"sql",values:[{label:"SQL",value:"sql"},{label:"JavaScript",value:"javascript"},{label:"Result",value:"result"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select *\nfrom books;\n"))),(0,r.kt)(i.Z,{value:"javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase.from('books').select('*')\nconsole.log(JSON.stringify(data, null, 2))\n"))),(0,r.kt)(i.Z,{value:"result",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"id"),(0,r.kt)("th",{parentName:"tr",align:null},"title"),(0,r.kt)("th",{parentName:"tr",align:null},"author"),(0,r.kt)("th",{parentName:"tr",align:null},"metadata"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"The Poky Little Puppy"),(0,r.kt)("td",{parentName:"tr",align:null},"Janette Sebring Lowrey"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[3,6]",',"price":5.95,"description":"Puppy is slower than other, bigger animals."}')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"The Tale of Peter Rabbit"),(0,r.kt)("td",{parentName:"tr",align:null},"Beatrix Potter"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[2,5]",',"price":4.49,"description":"Rabbit eats some vegetables."}')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"Tootle"),(0,r.kt)("td",{parentName:"tr",align:null},"Gertrude Crampton"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[2,5]",',"price":3.99,"description":"Little toy train has big dreams."}')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"Green Eggs and Ham"),(0,r.kt)("td",{parentName:"tr",align:null},"Dr. Seuss"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[4,8]",',"price":7.49,"description":"Sam has changing food preferences and eats unusually colored food."}')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"Harry Potter and the Goblet of Fire"),(0,r.kt)("td",{parentName:"tr",align:null},"J.K. Rowling"),(0,r.kt)("td",{parentName:"tr",align:null},'{"ages":',"[10,99]",',"price":24.95,"description":"Fourth year of school starts, big drama ensues."}')))),(0,r.kt)("p",null,"The data as it appears here has the ",(0,r.kt)("inlineCode",{parentName:"p"},"JSONB")," fields in a different order than when inserted. As mentioned earlier, data is parsed as its inserted when using the JSONB format."))),(0,r.kt)("h2",{id:"query-the-jsonb-data"},"Query the ",(0,r.kt)("inlineCode",{parentName:"h2"},"JSONB")," data"),(0,r.kt)("p",null,"Select the title, description, price, and age range for each book."),(0,r.kt)(l.Z,{groupId:"json",defaultValue:"sql",values:[{label:"SQL",value:"sql"},{label:"JavaScript",value:"javascript"},{label:"Result",value:"result"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"sql",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select\n  title,\n  metadata -> 'description' AS description,\n  metadata -> 'price' as price,\n  metadata -> 'ages' -> 0 as low_age,\n  metadata -> 'ages' -> 1 as high_age\nfrom\n  books;\n"))),(0,r.kt)(i.Z,{value:"javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { data, error } = await supabase\n  .from('books')\n  .select(\n    'title,description:metadata->description,price:metadata->price,low_age:metadata->ages->0,high_age:metadata->ages->1'\n  )\nconsole.log(JSON.stringify(data, null, 2))\n"))),(0,r.kt)(i.Z,{value:"result",mdxType:"TabItem"},(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"title"),(0,r.kt)("th",{parentName:"tr",align:null},"description"),(0,r.kt)("th",{parentName:"tr",align:null},"price"),(0,r.kt)("th",{parentName:"tr",align:null},"low_age"),(0,r.kt)("th",{parentName:"tr",align:null},"high_age"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"The Poky Little Puppy"),(0,r.kt)("td",{parentName:"tr",align:null},"Puppy is slower than other, bigger animals."),(0,r.kt)("td",{parentName:"tr",align:null},"5.95"),(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"The Tale of Peter Rabbit"),(0,r.kt)("td",{parentName:"tr",align:null},"Rabbit eats some vegetables."),(0,r.kt)("td",{parentName:"tr",align:null},"4.49"),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Tootle"),(0,r.kt)("td",{parentName:"tr",align:null},"Little toy train has big dreams."),(0,r.kt)("td",{parentName:"tr",align:null},"3.99"),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Green Eggs and Ham"),(0,r.kt)("td",{parentName:"tr",align:null},"Sam has changing food preferences and eats unusually colored food."),(0,r.kt)("td",{parentName:"tr",align:null},"7.49"),(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Harry Potter and the Goblet of Fire"),(0,r.kt)("td",{parentName:"tr",align:null},"Fourth year of school starts, big drama ensues."),(0,r.kt)("td",{parentName:"tr",align:null},"24.95"),(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:null},"99")))))),(0,r.kt)("p",null,"Note that the ",(0,r.kt)("inlineCode",{parentName:"p"},"->")," operator returns JSONB data. If you want TEXT/STRING data returned, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"->>")," operator."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"metadata -> 'description' (returns a JSON object)"),(0,r.kt)("li",{parentName:"ul"},"metadata ->> 'description' (returns STRING/TEXT data)")),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/supabase/supabase-js"},"Supabase JS Client")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/12/functions-json.html"},"PostgreSQL: JSON Functions and Operators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/12/datatype-json.html"},"PostgreSQL JSON types"))))}c.isMDXComponent=!0}}]);