"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[1552],{3905:(e,a,t)=>{t.d(a,{Zo:()=>i,kt:()=>h});var l=t(67294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,l,s=function(e,a){if(null==e)return{};var t,l,s={},n=Object.keys(e);for(l=0;l<n.length;l++)t=n[l],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)t=n[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=l.createContext({}),u=function(e){var a=l.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},i=function(e){var a=u(e.components);return l.createElement(o.Provider,{value:a},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},b=l.forwardRef((function(e,a){var t=e.components,s=e.mdxType,n=e.originalType,o=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),c=u(t),b=s,h=c["".concat(o,".").concat(b)]||c[b]||k[b]||n;return t?l.createElement(h,r(r({ref:a},i),{},{components:t})):l.createElement(h,r({ref:a},i))}));function h(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var n=t.length,r=new Array(n);r[0]=b;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=e,p[c]="string"==typeof e?e:s,r[1]=p;for(var u=2;u<n;u++)r[u]=t[u];return l.createElement.apply(null,r)}return l.createElement.apply(null,t)}b.displayName="MDXCreateElement"},98953:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>n,metadata:()=>p,toc:()=>u});var l=t(87462),s=(t(67294),t(3905));const n={id:"usage",slug:"/usage",title:"Usage",toc_max_heading_level:3},r=void 0,p={unversionedId:"generated/usage",id:"generated/usage",title:"Usage",description:"Supabase CLI provides you with tools to develop your application locally, and deploy your application to the Supabase platform.",source:"@site/_cli/generated/usage.mdx",sourceDirName:"generated",slug:"/usage",permalink:"/docs/reference/cli/usage",draft:!1,editUrl:"https://github.com/_cli/generated/usage.mdx",tags:[],version:"current",frontMatter:{id:"usage",slug:"/usage",title:"Usage",toc_max_heading_level:3},sidebar:"sidebar",previous:{title:"Supabase CLI",permalink:"/docs/reference/cli/"},next:{title:"Configuration",permalink:"/docs/reference/cli/config"}},o={},u=[{value:"Stop all local Supabase containers",id:"supabase-stop",level:3},{value:"Show status of local Supabase containers",id:"supabase-status",level:3},{value:"Start containers for Supabase local development",id:"supabase-start",level:3},{value:"Manage Supabase secrets",id:"supabase-secrets",level:2},{value:"Unset a secret(s) on Supabase",id:"supabase-secrets-unset",level:3},{value:"Set a secret(s) on Supabase",id:"supabase-secrets-set",level:3},{value:"List all secrets on Supabase",id:"supabase-secrets-list",level:3},{value:"Manage Supabase projects",id:"supabase-projects",level:2},{value:"List all Supabase projects",id:"supabase-projects-list",level:3},{value:"Create a project on Supabase",id:"supabase-projects-create",level:3},{value:"Manage Supabase organizations",id:"supabase-orgs",level:2},{value:"List all organizations",id:"supabase-orgs-list",level:3},{value:"Manage database migration scripts",id:"supabase-migration",level:2},{value:"Create an empty migration script",id:"supabase-migration-new",level:3},{value:"List local and remote migrations",id:"supabase-migration-list",level:3},{value:"Authenticate using an access token",id:"supabase-login",level:3},{value:"Link to a Supabase project",id:"supabase-link",level:3},{value:"Initialize a local project",id:"supabase-init",level:3},{value:"Run code generation tools",id:"supabase-gen",level:2},{value:"Generate types from Postgres schema",id:"supabase-gen-types",level:2},{value:"Generate types for TypeScript",id:"supabase-gen-types-typescript",level:3},{value:"Manage Supabase Edge functions",id:"supabase-functions",level:2},{value:"Serve a Function locally",id:"supabase-functions-serve",level:3},{value:"Create a new Function locally",id:"supabase-functions-new",level:3},{value:"Deploy a Function to Supabase",id:"supabase-functions-deploy",level:3},{value:"Delete a Function from Supabase",id:"supabase-functions-delete",level:3},{value:"Manage local Postgres databases",id:"supabase-db",level:2},{value:"Resets the local database to current migrations",id:"supabase-db-reset",level:3},{value:"Manage remote databases",id:"supabase-db-remote",level:2},{value:"Commit remote changes as a new migration",id:"supabase-db-remote-commit",level:3},{value:"Show changes on the remote database",id:"supabase-db-remote-changes",level:3},{value:"Push new migrations to the remote database",id:"supabase-db-push",level:3},{value:"Checks local database for typing error",id:"supabase-db-lint",level:3},{value:"Diffs the local database for schema changes",id:"supabase-db-diff",level:3},{value:"Manage local database branches",id:"supabase-db-branch",level:2},{value:"Switch the active branch",id:"supabase-db-branch-switch",level:3},{value:"List branches",id:"supabase-db-branch-list",level:3},{value:"Delete a branch",id:"supabase-db-branch-delete",level:3},{value:"Create a branch",id:"supabase-db-branch-create",level:3},{value:"Generate the autocompletion script for the specified shell",id:"supabase-completion",level:2},{value:"Generate the autocompletion script for zsh",id:"supabase-completion-zsh",level:3},{value:"Linux:",id:"linux",level:4},{value:"macOS:",id:"macos",level:4},{value:"Generate the autocompletion script for powershell",id:"supabase-completion-powershell",level:3},{value:"Generate the autocompletion script for fish",id:"supabase-completion-fish",level:3},{value:"Generate the autocompletion script for bash",id:"supabase-completion-bash",level:3},{value:"Linux:",id:"linux-1",level:4},{value:"macOS:",id:"macos-1",level:4}],i={toc:u};function c(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,l.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Supabase CLI provides you with tools to develop your application locally, and deploy your application to the Supabase platform."),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-stop"},"Stop all local Supabase containers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase stop [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"      --backup   Backs up the current database before stopping.\n  -h, --help     help for stop\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-status"},"Show status of local Supabase containers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase status [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for status\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-start"},"Start containers for Supabase local development"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase start [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for start\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-secrets"},"Manage Supabase secrets"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-secrets-list"},(0,s.kt)("code",null,"supabase secrets list"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-secrets-set"},(0,s.kt)("code",null,"supabase secrets set"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-secrets-unset"},(0,s.kt)("code",null,"supabase secrets unset")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for secrets\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-secrets-unset"},"Unset a secret(s) on Supabase"),(0,s.kt)("p",null,"Unset a secret(s) from the linked Supabase project."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase secrets unset <NAME> ... [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for unset\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-secrets-set"},"Set a secret(s) on Supabase"),(0,s.kt)("p",null,"Set a secret(s) to the linked Supabase project."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase secrets set [flags] <NAME=VALUE> ...\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"      --env-file string   Read secrets from a .env file.\n  -h, --help              help for set\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-secrets-list"},"List all secrets on Supabase"),(0,s.kt)("p",null,"List all secrets in the linked project."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase secrets list [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for list\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-projects"},"Manage Supabase projects"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-projects-create"},(0,s.kt)("code",null,"supabase projects create"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-projects-list"},(0,s.kt)("code",null,"supabase projects list")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for projects\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-projects-list"},"List all Supabase projects"),(0,s.kt)("p",null,"List all Supabase projects the logged-in user can access."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase projects list [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for list\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-projects-create"},"Create a project on Supabase"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase projects create <project name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},'      --db-password string   Database password of the project.\n  -h, --help                 help for create\n  -i, --interactive          Enables interactive mode.\n      --org-id string        Organization ID to create the project in.\n      --plan string          Select a plan that suits your needs. (default "free")\n      --region string        Select a region close to you for the best performance.\n')),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-orgs"},"Manage Supabase organizations"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-orgs-list"},(0,s.kt)("code",null,"supabase orgs list")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for orgs\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-orgs-list"},"List all organizations"),(0,s.kt)("p",null,"List all organizations the logged-in user belongs."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase orgs list [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for list\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-migration"},"Manage database migration scripts"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-migration-list"},(0,s.kt)("code",null,"supabase migration list"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-migration-new"},(0,s.kt)("code",null,"supabase migration new")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for migration\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-migration-new"},"Create an empty migration script"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase migration new <migration name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for new\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-migration-list"},"List local and remote migrations"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase migration list [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help              help for list\n  -p, --password string   Password to your remote Postgres database.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-login"},"Authenticate using an access token"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase login [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for login\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-link"},"Link to a Supabase project"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase link [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help                 help for link\n  -p, --password string      Password to your remote Postgres database.\n      --project-ref string   Project ref of the Supabase project.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-init"},"Initialize a local project"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase init [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for init\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-gen"},"Run code generation tools"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-gen-types"},(0,s.kt)("code",null,"supabase gen types")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for gen\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-gen-types"},"Generate types from Postgres schema"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-gen-types-typescript"},(0,s.kt)("code",null,"supabase gen types typescript")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for types\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-gen-types-typescript"},"Generate types for TypeScript"),(0,s.kt)("p",null,"Generate types for TypeScript. Must specify one of --local, --linked, --project-id, or --db-url"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase gen types typescript [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"      --db-url string        Generate types from a database url.\n  -h, --help                 help for typescript\n      --linked               Generate types from the linked project.\n      --local                Generate types from the local dev database.\n      --project-id string    Generate types from a project ID.\n      --schema stringArray   Schemas to generate types for.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-functions"},"Manage Supabase Edge functions"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-functions-delete"},(0,s.kt)("code",null,"supabase functions delete"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-functions-deploy"},(0,s.kt)("code",null,"supabase functions deploy"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-functions-new"},(0,s.kt)("code",null,"supabase functions new"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-functions-serve"},(0,s.kt)("code",null,"supabase functions serve")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for functions\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-functions-serve"},"Serve a Function locally"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase functions serve <Function name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"      --env-file string   Path to an env file to be populated to the Function environment.\n  -h, --help              help for serve\n      --no-verify-jwt     Disable JWT verification for the Function.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-functions-new"},"Create a new Function locally"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase functions new <Function name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for new\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-functions-deploy"},"Deploy a Function to Supabase"),(0,s.kt)("p",null,"Deploy a Function to the linked Supabase project."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase functions deploy <Function name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help                 help for deploy\n      --no-verify-jwt        Disable JWT verification for the Function.\n      --project-ref string   Project ref of the Supabase project.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-functions-delete"},"Delete a Function from Supabase"),(0,s.kt)("p",null,"Delete a Function from the linked Supabase project. This does NOT remove the Function locally."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase functions delete <Function name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help                 help for delete\n      --project-ref string   Project ref of the Supabase project.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-db"},"Manage local Postgres databases"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-branch"},(0,s.kt)("code",null,"supabase db branch"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-diff"},(0,s.kt)("code",null,"supabase db diff"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-lint"},(0,s.kt)("code",null,"supabase db lint"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-push"},(0,s.kt)("code",null,"supabase db push"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-remote"},(0,s.kt)("code",null,"supabase db remote"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-reset"},(0,s.kt)("code",null,"supabase db reset")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for db\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-reset"},"Resets the local database to current migrations"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db reset [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for reset\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-db-remote"},"Manage remote databases"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-remote-changes"},(0,s.kt)("code",null,"supabase db remote changes"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-remote-commit"},(0,s.kt)("code",null,"supabase db remote commit")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help              help for remote\n  -p, --password string   Password to your remote Postgres database.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-remote-commit"},"Commit remote changes as a new migration"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db remote commit [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for commit\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-remote-changes"},"Show changes on the remote database"),(0,s.kt)("p",null,"Show changes on the remote database since last migration."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db remote changes [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for changes\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-push"},"Push new migrations to the remote database"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db push [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"      --dry-run           Print the migrations that would be applied, but don't actually apply them.\n  -h, --help              help for push\n  -p, --password string   Password to your remote Postgres database.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-lint"},"Checks local database for typing error"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db lint [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},'  -h, --help             help for lint\n      --level string     Error level to emit. (default "warning")\n  -s, --schema strings   List of schema to include. (default [public])\n')),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-diff"},"Diffs the local database for schema changes"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db diff [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -f, --file string      Saves schema diff to a file.\n  -h, --help             help for diff\n  -s, --schema strings   List of schema to include. (default [public])\n      --use-migra        Use migra to generate schema diff.\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-db-branch"},"Manage local database branches"),(0,s.kt)("p",null,"Manage local database branches. Each branch is associated with a separate local database. Forking remote databases is NOT supported."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-branch-create"},(0,s.kt)("code",null,"supabase db branch create"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-branch-delete"},(0,s.kt)("code",null,"supabase db branch delete"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-branch-list"},(0,s.kt)("code",null,"supabase db branch list"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-db-branch-switch"},(0,s.kt)("code",null,"supabase db branch switch")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for branch\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-branch-switch"},"Switch the active branch"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db branch switch <branch name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for switch\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-branch-list"},"List branches"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db branch list [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for list\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-branch-delete"},"Delete a branch"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db branch delete <branch name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for delete\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-db-branch-create"},"Create a branch"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase db branch create <branch name> [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for create\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"supabase-completion"},"Generate the autocompletion script for the specified shell"),(0,s.kt)("p",null,"Generate the autocompletion script for supabase for the specified shell.\nSee each sub-command's help for details on how to use the generated script."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Available Commands")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-completion-bash"},(0,s.kt)("code",null,"supabase completion bash"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-completion-fish"},(0,s.kt)("code",null,"supabase completion fish"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-completion-powershell"},(0,s.kt)("code",null,"supabase completion powershell"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{href:"#supabase-completion-zsh"},(0,s.kt)("code",null,"supabase completion zsh")))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help   help for completion\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-completion-zsh"},"Generate the autocompletion script for zsh"),(0,s.kt)("p",null,"Generate the autocompletion script for the zsh shell."),(0,s.kt)("p",null,"If shell completion is not already enabled in your environment you will need\nto enable it.  You can execute the following once:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'echo "autoload -U compinit; compinit" >> ~/.zshrc\n')),(0,s.kt)("p",null,"To load completions in your current shell session:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"source <(supabase completion zsh); compdef _supabase supabase\n")),(0,s.kt)("p",null,"To load completions for every new session, execute once:"),(0,s.kt)("h4",{id:"linux"},"Linux:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'supabase completion zsh > "${fpath[1]}/_supabase"\n')),(0,s.kt)("h4",{id:"macos"},"macOS:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"supabase completion zsh > $(brew --prefix)/share/zsh/site-functions/_supabase\n")),(0,s.kt)("p",null,"You will need to start a new shell for this setup to take effect."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase completion zsh [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help              help for zsh\n      --no-descriptions   disable completion descriptions\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-completion-powershell"},"Generate the autocompletion script for powershell"),(0,s.kt)("p",null,"Generate the autocompletion script for powershell."),(0,s.kt)("p",null,"To load completions in your current shell session:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"supabase completion powershell | Out-String | Invoke-Expression\n")),(0,s.kt)("p",null,"To load completions for every new session, add the output of the above command\nto your powershell profile."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase completion powershell [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help              help for powershell\n      --no-descriptions   disable completion descriptions\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-completion-fish"},"Generate the autocompletion script for fish"),(0,s.kt)("p",null,"Generate the autocompletion script for the fish shell."),(0,s.kt)("p",null,"To load completions in your current shell session:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"supabase completion fish | source\n")),(0,s.kt)("p",null,"To load completions for every new session, execute once:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"supabase completion fish > ~/.config/fish/completions/supabase.fish\n")),(0,s.kt)("p",null,"You will need to start a new shell for this setup to take effect."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase completion fish [flags]\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help              help for fish\n      --no-descriptions   disable completion descriptions\n")),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("h3",{id:"supabase-completion-bash"},"Generate the autocompletion script for bash"),(0,s.kt)("p",null,"Generate the autocompletion script for the bash shell."),(0,s.kt)("p",null,"This script depends on the 'bash-completion' package.\nIf it is not installed already, you can install it via your OS's package manager."),(0,s.kt)("p",null,"To load completions in your current shell session:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"source <(supabase completion bash)\n")),(0,s.kt)("p",null,"To load completions for every new session, execute once:"),(0,s.kt)("h4",{id:"linux-1"},"Linux:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"supabase completion bash > /etc/bash_completion.d/supabase\n")),(0,s.kt)("h4",{id:"macos-1"},"macOS:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"supabase completion bash > $(brew --prefix)/etc/bash_completion.d/supabase\n")),(0,s.kt)("p",null,"You will need to start a new shell for this setup to take effect."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"supabase completion bash\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Options")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"  -h, --help              help for bash\n      --no-descriptions   disable completion descriptions\n")))}c.isMDXComponent=!0}}]);