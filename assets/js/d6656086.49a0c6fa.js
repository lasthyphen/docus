"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[51847],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},h="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=u(a),d=o,m=h["".concat(i,".").concat(d)]||h[d]||c[d]||s;return a?n.createElement(m,r(r({ref:t},p),{},{components:a})):n.createElement(m,r({ref:t},p))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=a.length,r=new Array(s);r[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[h]="string"==typeof e?e:o,r[1]=l;for(var u=2;u<s;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(67294),o=a(86010);const s="tabItem_Ymn6";function r(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(s,r),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(87462),o=a(67294),s=a(86010),r=a(72389),l=a(67392),i=a(7094),u=a(12466);const p="tabList__CuJ",h="tabItem_LNqP";function c(e){const{lazy:t,block:a,defaultValue:r,values:c,groupId:d,className:m}=e,b=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=c??b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),v=(0,l.l)(g,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===r?r:r??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==k&&!g.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:f}=(0,i.U)(),[w,T]=(0,o.useState)(k),S=[],{blockElementScrollPositionUntilNextRender:N}=(0,u.o5)();if(null!=d){const e=y[d];null!=e&&e!==w&&g.some((t=>t.value===e))&&T(e)}const P=e=>{const t=e.currentTarget,a=S.indexOf(t),n=g[a].value;n!==w&&(N(t),T(n),null!=d&&f(d,String(n)))},O=e=>{let t=null;switch(e.key){case"Enter":P(e);break;case"ArrowRight":{const a=S.indexOf(e.currentTarget)+1;t=S[a]??S[0];break}case"ArrowLeft":{const a=S.indexOf(e.currentTarget)-1;t=S[a]??S[S.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,s.Z)("tabs-container",p)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},m)},g.map((e=>{let{value:t,label:a,attributes:r}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>S.push(e),onKeyDown:O,onClick:P},r,{className:(0,s.Z)("tabs__item",h,r?.className,{"tabs__item--active":w===t})}),a??t)}))),t?(0,o.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,r.Z)();return o.createElement(c,(0,n.Z)({key:String(t)},e))}},28786:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>h});var n=a(87462),o=(a(67294),a(3905)),s=a(65488),r=a(85162);const l={id:"auth-vonage",title:"Phone Auth with Vonage",description:"How to set up and use Mobile OTP with Vonage and Supabase."},i=void 0,u={unversionedId:"guides/auth/auth-vonage",id:"guides/auth/auth-vonage",title:"Phone Auth with Vonage",description:"How to set up and use Mobile OTP with Vonage and Supabase.",source:"@site/docs/guides/auth/auth-vonage.mdx",sourceDirName:"guides/auth",slug:"/guides/auth/auth-vonage",permalink:"/docs/guides/auth/auth-vonage",draft:!1,editUrl:"https://github.com/docs/guides/auth/auth-vonage.mdx",tags:[],version:"current",frontMatter:{id:"auth-vonage",title:"Phone Auth with Vonage",description:"How to set up and use Mobile OTP with Vonage and Supabase."}},p={},h=[{value:"Overview",id:"overview",level:2},{value:"Steps",id:"steps",level:2},{value:"Getting your Vonage credentials",id:"getting-your-vonage-credentials",level:3},{value:"Getting a phone number (optional)",id:"getting-a-phone-number-optional",level:3},{value:"Configure Supabase",id:"configure-supabase",level:3},{value:"SMS custom template",id:"sms-custom-template",level:4},{value:"Using OTP with password based logins",id:"using-otp-with-password-based-logins",level:3},{value:"Using OTP as a passwordless sign-in mechanism",id:"using-otp-as-a-passwordless-sign-in-mechanism",level:3},{value:"Resources",id:"resources",level:2}],c={toc:h};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"In this guide we'll show you how to authenticate your users with SMS based OTP (One-Time Password) tokens."),(0,o.kt)("p",null,"There are two reasons to use Supabase SMS OTP tokens:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You want users to log in with mobile + password, and the mobile should be verified via SMS"),(0,o.kt)("li",{parentName:"ul"},"You want users to log in with mobile ONLY (i.e. passwordless login)")),(0,o.kt)("p",null,"We'll cover:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#finding-your-vonage-api-key"},"Getting your Vonage API Key")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#using-otp-with-password-based-logins"},"Using OTP with password based logins")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#using-otp-as-a-passwordless-sign-in-mechanism"},"Using OTP as a passwordless sign-in mechanism"))),(0,o.kt)("p",null,"What you'll need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A Vonage account (sign up here: ",(0,o.kt)("a",{parentName:"li",href:"https://dashboard.nexmo.com/sign-up"},"https://dashboard.nexmo.com/sign-up"),")"),(0,o.kt)("li",{parentName:"ul"},"A Supabase project (create one here: ",(0,o.kt)("a",{parentName:"li",href:"https://app.supabase.com"},"https://app.supabase.com"),")"),(0,o.kt)("li",{parentName:"ul"},"A mobile phone capable of receiving SMS")),(0,o.kt)("h2",{id:"steps"},"Steps"),(0,o.kt)("h3",{id:"getting-your-vonage-credentials"},"Getting your Vonage credentials"),(0,o.kt)("p",null,"Start by logging into your Vonage Dashboard at ",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.nexmo.com/"},"https://dashboard.nexmo.com/")),(0,o.kt)("p",null,"You will see you API Key and API Secret here, which is actually all you need to get started."),(0,o.kt)("p",null,"In most countries, a phone number is actually optional and you can also use any Alphanumeric Sender ID of up to 11 characters length (8 for India) as a Sender ID (from). This means you do not need a number to test with in most cases."),(0,o.kt)("p",null,"To find out more about supported countries for Alphanumeric Sender ID, check this overview: ",(0,o.kt)("a",{parentName:"p",href:"https://help.nexmo.com/hc/en-us/articles/115011781468-SMS-Features-Overview-Outbound-only-"},"https://help.nexmo.com/hc/en-us/articles/115011781468-SMS-Features-Overview-Outbound-only-")),(0,o.kt)("p",null,"Hint: Some countries might need a Sender ID Registration to allow sending with an Alphanumeric Sender ID. You can find this information in the help article as well. If Alpha Sender IDs are not supported, you will need to buy a phone number."),(0,o.kt)("h3",{id:"getting-a-phone-number-optional"},"Getting a phone number (optional)"),(0,o.kt)("p",null,"If you want a phone number to send SMS from, you can buy one from the Vonage Dashboard under Numbers > Buy Numbers (",(0,o.kt)("a",{parentName:"p",href:"https://dashboard.nexmo.com/buy-numbers"},"https://dashboard.nexmo.com/buy-numbers"),")."),(0,o.kt)("p",null,"Select the country you want a number for. You will need a mobile phone number with SMS or SMS+Voice capability. After you have bought the number, you will be able to send SMS from it."),(0,o.kt)("h3",{id:"configure-supabase"},"Configure Supabase"),(0,o.kt)("p",null,"Now go to the Auth > Settings page in the Supabase dashboard (",(0,o.kt)("a",{parentName:"p",href:"https://app.supabase.com/project/YOUR-PROJECT-REF/auth/settings"},"https://app.supabase.com/project/YOUR-PROJECT-REF/auth/settings"),")."),(0,o.kt)("p",null,"You should see an option to enable Phone Signup."),(0,o.kt)("p",null,"Toggle it on, and copy the api key, api secret and optionally phone number values over from the Vonage dashboard. Click save."),(0,o.kt)("p",null,"Now the backend should be setup, we can proceed to add our client-side code!"),(0,o.kt)("h4",{id:"sms-custom-template"},"SMS custom template"),(0,o.kt)("p",null,"The SMS message sent to a phone containing an OTP code can be customized. This is useful if you need to mention a brand name or display a website address."),(0,o.kt)("p",null,"Go to Auth > Templates page in the Supabase dashboard (",(0,o.kt)("a",{parentName:"p",href:"https://app.supabase.com/project/YOUR-PROJECT-REF/auth/templates"},"https://app.supabase.com/project/YOUR-PROJECT-REF/auth/templates"),")."),(0,o.kt)("p",null,"Use the variable ",(0,o.kt)("inlineCode",{parentName:"p"},".Code")," in the template to display the code."),(0,o.kt)("h3",{id:"using-otp-with-password-based-logins"},"Using OTP with password based logins"),(0,o.kt)("p",null,"In this use scenario we'll be using the user's mobile phone number as an alternative to an email address when signing up along with a password. You may want to think hard about the permanency of this however. It is not uncommon for mobile phone numbers to be recycled by phone networks when users cancel their phone contracts or move countries, therefore granting access to the user's account to whoever takes over the phone number in the future."),(0,o.kt)("p",null,"Using supabase-js on the client you'll want to use the same ",(0,o.kt)("inlineCode",{parentName:"p"},"signUp")," method that you'd use for email based sign ups, but with the ",(0,o.kt)("inlineCode",{parentName:"p"},"phone")," param instead of the ",(0,o.kt)("inlineCode",{parentName:"p"},"email param"),":"),(0,o.kt)(s.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"JS",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"let { user, error } = await supabase.auth.signUp({\n  phone: '491512223334444',\n  password: 'some-password',\n})\n"))),(0,o.kt)(r.Z,{value:"HTTP",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://xxx.supabase.co/auth/v1/signup\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "phone": "491512223334444",\n  "password": "some-password"\n}\'\n')))),(0,o.kt)("p",null,"The user will now receive an SMS with a 6-digit pin that you will need to receive from them within 60-seconds before they can login to their account."),(0,o.kt)("p",null,"You should present a form to the user so they can input the 6 digit pin, then send it along with the phone number to ",(0,o.kt)("inlineCode",{parentName:"p"},"verifyOTP"),":"),(0,o.kt)(s.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"JS",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"let { session, error } = await supabase.auth.verifyOTP({\n  phone: '491512223334444',\n  token: '123456',\n})\n"))),(0,o.kt)(r.Z,{value:"HTTP",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://xxx.supabase.co/auth/v1/verify\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "type": "sms",\n  "phone": "491512223334444",\n  "token": "123456"\n}\'\n')))),(0,o.kt)("p",null,"If successful the user will now be logged in and you should receive a valid session like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "access_token": "eyJxxx...",\n  "token_type": "bearer",\n  "expires_in": 3600,\n  "refresh_token": "yyy..."\n}\n')),(0,o.kt)("p",null,"The access token can be sent in the Authorization header as a Bearer token for any CRUD operations on supabase-js. See our guide on ",(0,o.kt)("a",{parentName:"p",href:"/docs/guides/auth#row-level-security"},"Row Level Security")," for more info on restricting access on a user basis."),(0,o.kt)("p",null,"Also now that the mobile has been verified, the user can use the number and password to sign in without needing to verify their number each time:"),(0,o.kt)(s.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"JS",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"let { user, error } = await supabase.auth.signInWithPassword({\n  phone: '491512223334444',\n  password: 'some-password',\n})\n"))),(0,o.kt)(r.Z,{value:"HTTP",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://xxx.supabase.co/auth/v1/token?grant_type=password\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "phone": "491512223334444",\n  "password": "some-password"\n}\'\n')))),(0,o.kt)("h3",{id:"using-otp-as-a-passwordless-sign-in-mechanism"},"Using OTP as a passwordless sign-in mechanism"),(0,o.kt)("p",null,"In this scenario you are granting your user's the ability to login to their account without needing to set a password on their account, all they have to do to log in is verify their mobile each time using the OTP."),(0,o.kt)("p",null,"In javascript we can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"signIn")," method with a single parameter: ",(0,o.kt)("inlineCode",{parentName:"p"},"phone")),(0,o.kt)(s.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"JS",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"let { user, error } = await supabase.auth.signInWithOtp({\n  phone: '491512223334444',\n})\n"))),(0,o.kt)(r.Z,{value:"HTTP",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://xxx.supabase.co/auth/v1/otp\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "phone": "491512223334444"\n}\'\n')))),(0,o.kt)("p",null,"The second step is the same as the previous section, you need to collect the 6-digit pin from the user and pass it along with their phone number to the verify method:"),(0,o.kt)(s.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"JS",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"let { session, error } = await supabase.auth.verifyOTP({\n  phone: '491512223334444',\n  token: '123456',\n})\n"))),(0,o.kt)(r.Z,{value:"HTTP",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://xxx.supabase.co/auth/v1/verify\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "type": "sms",\n  "phone": "491512223334444",\n  "token": "123456"\n}\'\n')))),(0,o.kt)("p",null,"and the response should also be the same as above:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "access_token": "eyJxxx...",\n  "token_type": "bearer",\n  "expires_in": 3600,\n  "refresh_token": "yyy..."\n}\n')),(0,o.kt)("p",null,"The user does not have a password therefore will need to sign in via this method each time they want to access your service."),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://dashboard.nexmo.com/sign-up"},"Vonage Signup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://app.supabase.com"},"Supabase Dashboard")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/guides/auth#row-level-security"},"Supabase Row Level Security"))))}d.isMDXComponent=!0}}]);