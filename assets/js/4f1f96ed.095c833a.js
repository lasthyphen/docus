"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[29843],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),c=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(r),u=n,f=p["".concat(l,".").concat(u)]||p[u]||h[u]||o;return r?i.createElement(f,a(a({ref:t},d),{},{components:r})):i.createElement(f,a({ref:t},d))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:n,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}u.displayName="MDXCreateElement"},51887:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=r(87462),n=(r(67294),r(3905));const o={id:"dip-lifecycle",title:"DIPs Lifecycle",description:"An HTTP Client for PostgreSQL Functions."},a="DIP Lifecycle Stages:",s={unversionedId:"guides/registration/dip-lifecycle",id:"guides/registration/dip-lifecycle",title:"DIPs Lifecycle",description:"An HTTP Client for PostgreSQL Functions.",source:"@site/docs/guides/registration/dip-lifecycle.mdx",sourceDirName:"guides/registration",slug:"/guides/registration/dip-lifecycle",permalink:"/docs/guides/registration/dip-lifecycle",draft:!1,editUrl:"https://github.com/docs/guides/registration/dip-lifecycle.mdx",tags:[],version:"current",frontMatter:{id:"dip-lifecycle",title:"DIPs Lifecycle",description:"An HTTP Client for PostgreSQL Functions."},sidebar:"guides",previous:{title:"DIP Primitives",permalink:"/docs/guides/registration/dip-primitives"},next:{title:"Priority Markers",permalink:"/docs/guides/registration/proposalimpact"}},l={},c=[{value:"Conception",id:"conception",level:3},{value:"Approved by DIP Editor",id:"approved-by-dip-editor",level:3},{value:"Request for Comments (RFC)",id:"request-for-comments-rfc",level:3},{value:"Qualification",id:"qualification",level:3},{value:"Formal Submission (FS)",id:"formal-submission-fs",level:3},{value:"Approved by the Governance Arbiter(s)",id:"approved-by-the-governance-arbiters",level:3},{value:"Voting Cycle",id:"voting-cycle",level:3},{value:"Consensus Reached",id:"consensus-reached",level:3},{value:"Accepted/Rejected",id:"acceptedrejected",level:3}],d={toc:c};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"dip-lifecycle-stages"},"DIP Lifecycle Stages:"),(0,n.kt)("p",null,"Each DIP undergoes the following lifecycle stages before being published in the main DIPs repository with its final state of either being ",(0,n.kt)("strong",{parentName:"p"},"Accepted")," or ",(0,n.kt)("strong",{parentName:"p"},"Rejected")),(0,n.kt)("h3",{id:"conception"},"Conception"),(0,n.kt)("p",null,"The Conception stage of a DIP is when DGC Members start bringing their ideas to life in the context of Dijets Governance. Members can start discussions around their idea on\nDijets Forum and brains storm with the rest of the members and community. Once the member determines that their idea is ready for the next stage, they can\npublish the idea to Dijets Forum under the DIPs category. "),(0,n.kt)("p",null,"Proposals must follow the standard format as described in DIP0 and choose the right template (General/Technical/Subproposals etc) before publishing it to the Forum."),(0,n.kt)("p",null,"The DIP Editor is available to help the members with drafting their DIPs."),(0,n.kt)("h3",{id:"approved-by-dip-editor"},"Approved by DIP Editor"),(0,n.kt)("p",null,"This phase of a DIP\u2019s life cycle is when the DIP Editor confirms that the proposed DIP follows the correct structure and editorial criteria defined in the DIP template.\nIf the criteria is not met, the DIP Editor will provide an explanation to the authoring member as to why and allow them to make the appropriate changes before reconsideration.\nIf the criteria has been met, the DIP Editor performs the following actions:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Assigns a formal number to the DIP."),(0,n.kt)("li",{parentName:"ol"},"Creates and subsequently merges a PR on the DIPs repository with the new DIP")),(0,n.kt)("h3",{id:"request-for-comments-rfc"},"Request for Comments (RFC)"),(0,n.kt)("p",null,"This phase is when a DIP goes through a formal review period, including feedback from the rest of the members, further drafting and additions.\nThe authoring member finalises changes to the DIP, based on other members feedback."),(0,n.kt)("h3",{id:"qualification"},"Qualification"),(0,n.kt)("p",null,"The timeline for the RFC phase is defined by its Frozen Period. In order to move to the next phase, it needs to satisfy the transition criteria listed below:\nDIPs must not have had any changes for a minimum of 24 hours before they move to the next phase."),(0,n.kt)("h3",{id:"formal-submission-fs"},"Formal Submission (FS)"),(0,n.kt)("p",null,"This phase is when the authoring members submit their complete DIP(s) to the Governance cycle by posting it to the formal submission forum category within the formal submissions window of a governance cycle.\nA DIP can be re-submitted to the formal submission process a maximum of 2 additional times (3 total), without having to go through phase 1-3 again, if it failed to pass due to legitimate external reasons (e.g. subject to the governance Arbiters judgement)."),(0,n.kt)("h3",{id:"approved-by-the-governance-arbiters"},"Approved by the Governance Arbiter(s)"),(0,n.kt)("p",null,"This phase is when the DIP must be formally approved by the Governance Arbiters.\nOnce approved by the Governance Arbiter, the DIP will be included in the inclusion poll of the Voting cycle.\nIf the DIP is not approved by the Governance Arbiter, it may be reconsidered at a later date to enter the Voting cycle."),(0,n.kt)("h3",{id:"voting-cycle"},"Voting Cycle"),(0,n.kt)("p",null,"This phase is when the DIP becomes officially available for voting. Determined by the DGC Members votes, the DIP is ultimately accepted or rejected."),(0,n.kt)("h3",{id:"consensus-reached"},"Consensus Reached"),(0,n.kt)("p",null,"DGC Member votes are tallied and the results are published."),(0,n.kt)("h3",{id:"acceptedrejected"},"Accepted/Rejected"),(0,n.kt)("p",null,"If accepted, the DIP is officially given the ",(0,n.kt)("strong",{parentName:"p"},'"ACCEPTED"')," status and published to the official DIPs Directory. If the voting fails to pass before expiring, the DIP is given the ",(0,n.kt)("strong",{parentName:"p"},'"REJECTED"')," status."))}p.isMDXComponent=!0}}]);