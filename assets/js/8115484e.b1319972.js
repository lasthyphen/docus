"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[84367],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>h});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=n.createContext({}),o=function(e){var a=n.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},p=function(e){var a=o(e.components);return n.createElement(u.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=o(t),c=r,h=d["".concat(u,".").concat(c)]||d[c]||m[c]||l;return t?n.createElement(h,s(s({ref:a},p),{},{components:t})):n.createElement(h,s({ref:a},p))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=c;var i={};for(var u in a)hasOwnProperty.call(a,u)&&(i[u]=a[u]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var o=2;o<l;o++)s[o]=t[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},55541:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>u,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=t(87462),r=(t(67294),t(3905)),l=t(65488),s=t(85162);const i={id:"upgrade-guide",title:"Upgrade to supabase-flutter v1",description:"Learn how to upgrade to supabase-flutter v1."},u=void 0,o={unversionedId:"upgrade-guide",id:"upgrade-guide",title:"Upgrade to supabase-flutter v1",description:"Learn how to upgrade to supabase-flutter v1.",source:"@site/_supabase_dart/upgrade-guide.mdx",sourceDirName:".",slug:"/upgrade-guide",permalink:"/docs/reference/dart/upgrade-guide",draft:!1,editUrl:"https://github.com/_supabase_dart/upgrade-guide.mdx",tags:[],version:"current",frontMatter:{id:"upgrade-guide",title:"Upgrade to supabase-flutter v1",description:"Learn how to upgrade to supabase-flutter v1."},sidebar:"sidebar",previous:{title:"Initializing",permalink:"/docs/reference/dart/initializing"},next:{title:"signUp()",permalink:"/docs/reference/dart/auth-signup"}},p={},d=[{value:"Upgrade the client library",id:"upgrade-the-client-library",level:2},{value:"Error handling",id:"error-handling",level:2},{value:"Auth classes / methods",id:"auth-classes--methods",level:2},{value:"Usage of <code>SupabaseAuthState</code> and <code>SupabaseAuthRequiredState</code> classes",id:"usage-of-supabaseauthstate-and-supabaseauthrequiredstate-classes",level:3},{value:"Listening to auth state change",id:"listening-to-auth-state-change",level:3},{value:"Sign in with email and password",id:"sign-in-with-email-and-password",level:3},{value:"Sign in with magic link",id:"sign-in-with-magic-link",level:3},{value:"Sign in with a third-party OAuth provider",id:"sign-in-with-a-third-party-oauth-provider",level:3},{value:"Sign in with phone",id:"sign-in-with-phone",level:3},{value:"Sign in with phone using OTP",id:"sign-in-with-phone-using-otp",level:3},{value:"Reset password for email",id:"reset-password-for-email",level:3},{value:"Get the user&#39;s current session",id:"get-the-users-current-session",level:3},{value:"Get the logged-in user",id:"get-the-logged-in-user",level:3},{value:"Update user data for a logged-in user",id:"update-user-data-for-a-logged-in-user",level:3},{value:"Data methods",id:"data-methods",level:2},{value:"Insert without returning inserted data",id:"insert-without-returning-inserted-data",level:3},{value:"Insert with returning inserted data",id:"insert-with-returning-inserted-data",level:3},{value:"Realtime methods",id:"realtime-methods",level:2},{value:"Stream",id:"stream",level:3},{value:"Subscribe",id:"subscribe",level:3},{value:"Unsubscribe",id:"unsubscribe",level:3}],m={toc:d};function c(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"supabase-flutter focuses on improving the developer experience and making it easier to use. This guide will help you upgrade from supabase-flutter v0 to v1."),(0,r.kt)("h2",{id:"upgrade-the-client-library"},"Upgrade the client library"),(0,r.kt)("p",null,"Update the package in your pubspec.yaml file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"supabase_flutter: ^1.0.0\n")),(0,r.kt)("h2",{id:"error-handling"},"Error handling"),(0,r.kt)("p",null,"The way supabase-flutter throws error has changed in v1. In v0, errors were returned as a response. In v1, errors are thrown as exceptions. This makes it more intuitive as a Flutter developer to handle errors. "),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final res = await supabase.from('my_table').select().execute();\nfinal error = res.error;\nif(error != null) {\n  // handle error\n}\nfinal data = res.data;\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"try {\n    final data = supabase.from('my_table').select();\n} catch (error) {\n    // handle error\n}\n")))),(0,r.kt)("h2",{id:"auth-classes--methods"},"Auth classes / methods"),(0,r.kt)("h3",{id:"usage-of-supabaseauthstate-and-supabaseauthrequiredstate-classes"},"Usage of ",(0,r.kt)("inlineCode",{parentName:"h3"},"SupabaseAuthState")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},"SupabaseAuthRequiredState")," classes"),(0,r.kt)("p",null,"In v0, ",(0,r.kt)("inlineCode",{parentName:"p"},"SupabaseAuthState")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"SupabaseAuthRequiredState")," were required to handle automatic token refresh and to listen to auth state change. In v1, ",(0,r.kt)("inlineCode",{parentName:"p"},"SupabaseAuthState")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"SupabaseAuthRequiredState")," are deprecated, and token refresh will happen automatically just by initializing Supabase. ",(0,r.kt)("a",{parentName:"p",href:"/docs/reference/dart/upgrade-guide#listening-to-auth-state-change"},(0,r.kt)("inlineCode",{parentName:"a"},"onAuthStateChange"))," can be used to action on auth state change."),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await Supabase.initialize(\n  url: 'SUPABASE_URL',\n  anonKey: 'SUPABASE_ANON_KEY',\n);\n...\n\nclass AuthState<T extends StatefulWidget> extends SupabaseAuthState<T> {\n  ...\n}\n\n...\n\nclass AuthRequiredState<T extends StatefulWidget> extends SupabaseAuthState<T> {\n  ...\n}\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await Supabase.initialize(\n  url: 'SUPABASE_URL',\n  anonKey: 'SUPABASE_ANON_KEY',\n);\n")))),(0,r.kt)("h3",{id:"listening-to-auth-state-change"},"Listening to auth state change"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"onAuthStateChange")," now returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream"),"."),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final authSubscription = supabase.auth.onAuthStateChange((event, session) {\n  // handle auth state change\n});\n\n// Unsubscribe when no longer needed\nauthSubscription.data?.unsubscribe();\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final authSubscription = supabase.auth.onAuthStateChange.listen((data) {\n      final AuthChangeEvent event = data.event;\n      final Session? session = data.session;\n      // handle auth state change\n    });\n\n// Unsubscribe when no longer needed\nauthSubscription.cancel();\n")))),(0,r.kt)("h3",{id:"sign-in-with-email-and-password"},"Sign in with email and password"),(0,r.kt)("p",null,"The signIn() method has been deprecated in favor of more explicit method signatures to help with type hinting. Previously it was difficult for developers to know what they were missing (e.g., a lot of developers didn't realize they could use passwordless magic links)."),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signIn(email: email, password: password);\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signInWithPassword(email: email, password: password);\n")))),(0,r.kt)("h3",{id:"sign-in-with-magic-link"},"Sign in with magic link"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signIn(email: email);\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signInWithOtp(email: email);\n")))),(0,r.kt)("h3",{id:"sign-in-with-a-third-party-oauth-provider"},"Sign in with a third-party OAuth provider"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signInWithProvider(\n  Provider.github,\n  options: AuthOptions(\n      redirectTo: kIsWeb\n          ? null\n          : 'io.supabase.flutter://reset-callback/'),\n);\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signInWithOAuth(\n  Provider.github,\n  redirectTo: kIsWeb ? null : 'io.supabase.flutter://reset-callback/',\n);\n")))),(0,r.kt)("h3",{id:"sign-in-with-phone"},"Sign in with phone"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signIn(\n  phone: '+13334445555',\n  password: 'example-password',\n);\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signInWithPassword(\n  phone: '+13334445555',\n  password: 'example-password',\n);\n")))),(0,r.kt)("h3",{id:"sign-in-with-phone-using-otp"},"Sign in with phone using OTP"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final res = await supabase.auth.signIn(phone: phone);\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.signInWithOtp(\n  phone: phone,\n);\n\n// After receiving a SMS with a OTP.\nawait supabase.auth.verifyOTP(\n  type: OtpType.sms,\n  token: token,\n  phone: phone,\n);\n")))),(0,r.kt)("h3",{id:"reset-password-for-email"},"Reset password for email"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.api.resetPasswordForEmail(\n  email,\n  options:\n      AuthOptions(redirectTo: 'io.supabase.flutter://reset-callback/'),\n);\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.resetPasswordForEmail(\n  email,\n  redirectTo: kIsWeb ? null : 'io.supabase.flutter://reset-callback/',\n);\n")))),(0,r.kt)("h3",{id:"get-the-users-current-session"},"Get the user's current session"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"}," final session = supabase.auth.session();\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final Session? session = supabase.auth.currentSession;\n")))),(0,r.kt)("h3",{id:"get-the-logged-in-user"},"Get the logged-in user"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final user = supabase.auth.user();\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final User? user = supabase.auth.currentUser;\n")))),(0,r.kt)("h3",{id:"update-user-data-for-a-logged-in-user"},"Update user data for a logged-in user"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.auth.update(\n  UserAttributes(data: {'hello': 'world'})\n);\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.updateUser(\n  UserAttributes(\n    data: { 'hello': 'world' },\n  ),\n);\n")))),(0,r.kt)("h2",{id:"data-methods"},"Data methods"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},".insert()")," / ",(0,r.kt)("inlineCode",{parentName:"p"},".upsert()")," / ",(0,r.kt)("inlineCode",{parentName:"p"},".update()")," / ",(0,r.kt)("inlineCode",{parentName:"p"},".delete()")," don't return rows by default."),(0,r.kt)("p",null,"Previously, these methods return inserted/updated/deleted rows by default (which caused ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/supabase/supabase/discussions/1548"},"some confusion"),"), and you can opt to not return it by specifying ",(0,r.kt)("inlineCode",{parentName:"p"},"returning: 'minimal'"),". Now the default behavior is to not return rows. To return inserted/updated/deleted rows, add a ",(0,r.kt)("inlineCode",{parentName:"p"},".select()")," call at the end."),(0,r.kt)("p",null,"Also, calling ",(0,r.kt)("inlineCode",{parentName:"p"},".execute()")," at the end of the query was a requirement in v0, but in v1 ",(0,r.kt)("inlineCode",{parentName:"p"},".execute")," is deperecated."),(0,r.kt)("h3",{id:"insert-without-returning-inserted-data"},"Insert without returning inserted data"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase\n    .from('my_table')\n    .insert(data, returning: ReturningOption.minimal)\n    .execute();\n\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.from('my_table').insert(data);\n")))),(0,r.kt)("h3",{id:"insert-with-returning-inserted-data"},"Insert with returning inserted data"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final res = await supabase\n    .from('my_table')\n    .insert(data)\n    .execute();\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final insertedData = await supabase.from('my_table').insert(data).select();\n")))),(0,r.kt)("h2",{id:"realtime-methods"},"Realtime methods"),(0,r.kt)("h3",{id:"stream"},"Stream"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},".stream()")," no longer needs the ",(0,r.kt)("inlineCode",{parentName:"p"},".execute()")," at the end. Also, filtering by ",(0,r.kt)("inlineCode",{parentName:"p"},"eq")," is a lot easier now. ",(0,r.kt)("inlineCode",{parentName:"p"},"primaryKey")," is now a named parameter to make it more obvious what to pass."),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"supabase.from('my_table:id=eq.120')\n  .stream(['id'])\n  .listen();\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"supabase.from('my_table')\n  .stream(primaryKey: ['id'])\n  .eq('id', '120')\n  .listen();\n")))),(0,r.kt)("h3",{id:"subscribe"},"Subscribe"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final subscription = supabase\n  .from('countries')\n  .on(SupabaseEventTypes.all, (payload) {\n    // Handle realtime payload\n  })\n  .subscribe();\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final channel = supabase.channel('*');\nchannel.on(\n  RealtimeListenTypes.postgresChanges,\n  ChannelFilter(event: '*', schema: '*'),\n  (payload, [ref]) {\n    // Handle realtime payload\n  },\n).subscribe();\n")))),(0,r.kt)("h3",{id:"unsubscribe"},"Unsubscribe"),(0,r.kt)(l.Z,{groupId:"version",values:[{label:"Before",value:"0.x"},{label:"After",value:"1.x"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"0.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"supabase.removeSubscription(subscription);\n"))),(0,r.kt)(s.Z,{value:"1.x",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await supabase.removeChannel(channel);\n")))))}c.isMDXComponent=!0},85162:(e,a,t)=>{t.d(a,{Z:()=>s});var n=t(67294),r=t(86010);const l="tabItem_Ymn6";function s(e){let{children:a,hidden:t,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,s),hidden:t},a)}},65488:(e,a,t)=>{t.d(a,{Z:()=>c});var n=t(87462),r=t(67294),l=t(86010),s=t(72389),i=t(67392),u=t(7094),o=t(12466);const p="tabList__CuJ",d="tabItem_LNqP";function m(e){const{lazy:a,block:t,defaultValue:s,values:m,groupId:c,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=m??b.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),v=(0,i.l)(g,((e,a)=>e.value===a.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===s?s:s??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==k&&!g.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:x}=(0,u.U)(),[y,T]=(0,r.useState)(k),w=[],{blockElementScrollPositionUntilNextRender:N}=(0,o.o5)();if(null!=c){const e=f[c];null!=e&&e!==y&&g.some((a=>a.value===e))&&T(e)}const I=e=>{const a=e.currentTarget,t=w.indexOf(a),n=g[t].value;n!==y&&(N(a),T(n),null!=c&&x(c,String(n)))},S=e=>{let a=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;a=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;a=w[t]??w[w.length-1];break}}a?.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},h)},g.map((e=>{let{value:a,label:t,attributes:s}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===a?0:-1,"aria-selected":y===a,key:a,ref:e=>w.push(e),onKeyDown:S,onClick:I},s,{className:(0,l.Z)("tabs__item",d,s?.className,{"tabs__item--active":y===a})}),t??a)}))),a?(0,r.cloneElement)(b.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==y})))))}function c(e){const a=(0,s.Z)();return r.createElement(m,(0,n.Z)({key:String(a)},e))}}}]);