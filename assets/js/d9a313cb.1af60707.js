"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[25438],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},h="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),h=c(n),p=o,k=h["".concat(l,".").concat(p)]||h[p]||d[p]||s;return n?r.createElement(k,a(a({ref:t},u),{},{components:n})):r.createElement(k,a({ref:t},u))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[h]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},85397:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const s={id:"server-side-rendering",title:"Server-Side Rendering",description:"Render pages with user information on the server."},a=void 0,i={unversionedId:"guides/auth/server-side-rendering",id:"guides/auth/server-side-rendering",title:"Server-Side Rendering",description:"Render pages with user information on the server.",source:"@site/docs/guides/auth/server-side-rendering.mdx",sourceDirName:"guides/auth",slug:"/guides/auth/server-side-rendering",permalink:"/docs/guides/auth/server-side-rendering",draft:!1,editUrl:"https://github.com/docs/guides/auth/server-side-rendering.mdx",tags:[],version:"current",frontMatter:{id:"server-side-rendering",title:"Server-Side Rendering",description:"Render pages with user information on the server."}},l={},c=[{value:"Understanding the authentication flow",id:"understanding-the-authentication-flow",level:2},{value:"Bringing it together",id:"bringing-it-together",level:2},{value:"Frequently Asked Questions",id:"frequently-asked-questions",level:2},{value:"How do I make the cookies <code>HttpOnly</code>?",id:"how-do-i-make-the-cookies-httponly",level:3},{value:"My server is getting invalid refresh token errors. What&#39;s going on?",id:"my-server-is-getting-invalid-refresh-token-errors-whats-going-on",level:3},{value:"Should I set a shorter <code>Max-Age</code> parameter on the cookies?",id:"should-i-set-a-shorter-max-age-parameter-on-the-cookies",level:3},{value:"What should I use for the <code>SameSite</code> property?",id:"what-should-i-use-for-the-samesite-property",level:3},{value:"Can I use server-side rendering with a CDN or cache?",id:"can-i-use-server-side-rendering-with-a-cdn-or-cache",level:3}],u={toc:c};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Single-page apps with server-side rendering (SSR) is a popular way to optimize rendering\nperformance and leverage advanced caching strategies."),(0,o.kt)("p",null,"Supabase Auth supports server-side rendering when you need access to user\ninformation, or your server needs to authorize API requests on behalf of your\nuser to render content."),(0,o.kt)("p",null,"When a user authenticates with Supabase Auth, two pieces of information are\nissued by the server:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Access token")," in the form of a JWT."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Refresh token")," which is a randomly generated string.")),(0,o.kt)("p",null,"Most Supabase projects have their auth server listening on\n",(0,o.kt)("inlineCode",{parentName:"p"},"<project-ref>.supabase.co/auth/v1"),", thus the access token and refresh token are\nset as ",(0,o.kt)("inlineCode",{parentName:"p"},"sb-access-token")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"sb-refresh-token")," cookies on the\n",(0,o.kt)("inlineCode",{parentName:"p"},"<project-ref>.supabase.co")," domain."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"These cookie names are for internal Supabase use only and may change without\nwarning. They are included in this guide for illustration purposes only.")),(0,o.kt)("p",null,"Web browsers limit access to cookies across domains, consistent with the\n",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"},"Same-Origin Policy\n(SOP)"),"."),(0,o.kt)("p",null,"Your web application cannot access these cookies,\nnor will these cookies be sent to your application's server."),(0,o.kt)("h2",{id:"understanding-the-authentication-flow"},"Understanding the authentication flow"),(0,o.kt)("p",null,"When you call one of the ",(0,o.kt)("inlineCode",{parentName:"p"},"signIn")," methods, the client library running in the\nbrowser sends the request to the Supabase Auth server. The Auth server determines\nwhether to verify a phone number, email and password combination, a Magic Link,\nor use a social login (if you have any setup in your project)."),(0,o.kt)("p",null,"Upon successful verification of the identity of the user, the Supabase Auth\nserver redirects the user back to your single-page app."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can configure ",(0,o.kt)("a",{parentName:"p",href:"https://app.supabase.com/project/_/auth/settings"},"redirects URLs")," in the Supabase Dashboard. You can use wildcard match patterns\nlike ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"**")," to allow redirects to different forms of URLs.")),(0,o.kt)("p",null,"These redirect URLs have the following structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://yourapp.com/...#access_token=<...>&refresh_token=<...>&...\n")),(0,o.kt)("p",null,"The first access and refresh tokens after a successful verification are\ncontained in the URL fragment (anything after the ",(0,o.kt)("inlineCode",{parentName:"p"},"#")," sign) of the redirect\nlocation. This is intentional and not configurable."),(0,o.kt)("p",null,"The client libraries are designed to listen for this type of URL, extract\nthe access token, refresh token and some extra information from it, and finally\npersist it in local storage for further use by the library and your app."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Web browsers do not send the URL fragment to the server they're making the\nrequest to. Since you may not be hosting the single-page app on a server under\nyour direct control (such as on GitHub Pages or other freemium hosting\nproviders), we want to prevent hosting services from getting access to your\nuser's authorization credentials by default. Even if the server is under your\ndirect control, ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," requests and their full URLs are often logged. This\napproach also avoids leaking credentials in request or access logs.")),(0,o.kt)("h2",{id:"bringing-it-together"},"Bringing it together"),(0,o.kt)("p",null,"As seen from the authentication flow, the initial request after successful\nlogin made by the browser to your app's server after user login ",(0,o.kt)("strong",{parentName:"p"},"does not\ncontain any information about the user"),". This is because first the client-side\nJavaScript library must run before it makes the access and refresh token\navailable to your server."),(0,o.kt)("p",null,"It is very important to make sure that the redirect route right after login\nworks without any server-side rendering. Other routes requiring authorization\ndo not have the same limitation, provided you send the access and refresh\ntokens to your server."),(0,o.kt)("p",null,"This is traditionally done by setting cookies. Here's an example you\ncan add to the root of your application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'supabase.auth.onAuthStateChange((event, session) => {\n  if (event === "SIGNED_OUT" || event === "USER_DELETED") {\n    // delete cookies on sign out\n    const expires = new Date(0).toUTCString();\n    document.cookie = `my-access-token=; path=/; expires=${expires}; SameSite=Lax; secure`;\n    document.cookie = `my-refresh-token=; path=/; expires=${expires}; SameSite=Lax; secure`;\n  } else if (event === "SIGNED_IN" || event === "TOKEN_REFRESHED") {\n    const maxAge = 100 * 365 * 24 * 60 * 60; // 100 years, never expires\n    document.cookie = `my-access-token=${session.access_token}; path=/; max-age=${maxAge}; SameSite=Lax; secure`;\n    document.cookie = `my-refresh-token=${session.refresh_token}; path=/; max-age=${maxAge}; SameSite=Lax; secure`;\n  }\n})\n')),(0,o.kt)("p",null,"This uses the standard\n",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie"},(0,o.kt)("inlineCode",{parentName:"a"},"document.cookie")," API"),"\nto set cookies on all paths of your app's domain. All subsequent requests\nmade by the browser to your app's server include the ",(0,o.kt)("inlineCode",{parentName:"p"},"my-access-token")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"my-refresh-token")," cookies (the names of the cookies and additional\nparameters can be changed)."),(0,o.kt)("p",null,"In your server-side rendering code you can now access user and session\ninformation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const refreshToken = req.cookies['my-refresh-token'];\nconst accessToken = req.cookies['my-access-token'];\n\nif (refreshToken && accessToken) {\n  await supabase.auth.setSession({\n    refresh_token: refreshToken,\n    access_token: accessToken \n  });\n} else {\n  // make sure you handle this case!\n  throw new Error(\"User is not authenticated.\")\n}\n\n// returns user information\nawait supabase.auth.getUser();\n")),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"setSession({ access_token, refresh_token })")," instead of\n",(0,o.kt)("inlineCode",{parentName:"p"},"setSession(refreshToken)")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"getUser(accessToken)")," as refresh tokens or access tokens alone do not properly identify a user session. "),(0,o.kt)("p",null,"Access tokens are valid only for a short amount of time."),(0,o.kt)("p",null,"Even though refresh tokens are long-lived, there is no guarantee that a user\nhas an active session. They may have logged out and your application failed to\nremove the ",(0,o.kt)("inlineCode",{parentName:"p"},"my-refresh-token")," cookie, or some other failure occurred that left\na stale refresh token in the browser. Furthermore, a refresh token can only be\nused a few seconds after it was first used. Only use a refresh token if the\naccess token is about to expire, which will avoid the introduction of difficult\nto diagnose logout bugs in your app."),(0,o.kt)("p",null,"A good practice is to handle unauthorized errors by deferring rendering the\npage in the browser instead of in the server. Some user information is\ncontained in the access token though, so in certain cases, you may be able to\nuse this potentially stale information to render a page."),(0,o.kt)("h2",{id:"frequently-asked-questions"},"Frequently Asked Questions"),(0,o.kt)("h3",{id:"how-do-i-make-the-cookies-httponly"},"How do I make the cookies ",(0,o.kt)("inlineCode",{parentName:"h3"},"HttpOnly"),"?"),(0,o.kt)("p",null,"This is not necessary. Both the access token and refresh token are designed to\nbe passed around to different components in your application. The browser-based\nside of your application needs access to the refresh token to properly maintain\na browser session anyway."),(0,o.kt)("h3",{id:"my-server-is-getting-invalid-refresh-token-errors-whats-going-on"},"My server is getting invalid refresh token errors. What's going on?"),(0,o.kt)("p",null,"It is likely that the refresh token sent from the browser to your server is\nstale. Make sure the ",(0,o.kt)("inlineCode",{parentName:"p"},"onAuthStateChange")," listener callback is free of bugs and\nis registered relatively early in your application's lifetime."),(0,o.kt)("p",null,"When you receive this error on the server-side, try to defer\nrendering to the browser where the client library can access an up-to-date\nrefresh token and present the user with a better experience."),(0,o.kt)("h3",{id:"should-i-set-a-shorter-max-age-parameter-on-the-cookies"},"Should I set a shorter ",(0,o.kt)("inlineCode",{parentName:"h3"},"Max-Age")," parameter on the cookies?"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Max-Age")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Expires")," cookie parameters only control whether the browser\nsends the value to the server. Since a refresh token represents the\nlong-lived authentication session of the user on that browser, setting a short\n",(0,o.kt)("inlineCode",{parentName:"p"},"Max-Age")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Expires")," parameter on the cookies only results in a degraded\nuser experience."),(0,o.kt)("p",null,"The only way to ensure that a user has logged out or their session has ended\nis to get the user's details with ",(0,o.kt)("inlineCode",{parentName:"p"},"getUser()"),"."),(0,o.kt)("h3",{id:"what-should-i-use-for-the-samesite-property"},"What should I use for the ",(0,o.kt)("inlineCode",{parentName:"h3"},"SameSite")," property?"),(0,o.kt)("p",null,"Make sure you ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite"},"understand the behavior of the property in different\nsituations"),"\nas some properties can degrade the user experience."),(0,o.kt)("p",null,"A good default is to use ",(0,o.kt)("inlineCode",{parentName:"p"},"Lax")," which sends cookies when users are\nnavigating to your site. Cookies typically require the ",(0,o.kt)("inlineCode",{parentName:"p"},"Secure")," attribute,\nwhich only sends them over HTTPS. However, this can be a problem when\ndeveloping on ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost"),"."),(0,o.kt)("h3",{id:"can-i-use-server-side-rendering-with-a-cdn-or-cache"},"Can I use server-side rendering with a CDN or cache?"),(0,o.kt)("p",null,"Yes, but you need to be careful to include at least the refresh token cookie\nvalue in the cache key. Otherwise you may be accidentally serving pages with\ndata belonging to different users!"),(0,o.kt)("p",null,"Also be sure you set proper cache control headers. We recommend invalidating\ncache keys every hour or less."))}h.isMDXComponent=!0}}]);