"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[94985],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(a),h=s,m=d["".concat(l,".").concat(h)]||d[h]||c[h]||r;return a?n.createElement(m,o(o({ref:t},p),{},{components:a})):n.createElement(m,o({ref:t},p))}));function m(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,o=new Array(r);o[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<r;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),s=a(86010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,s.Z)(r,o),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>h});var n=a(87462),s=a(67294),r=a(86010),o=a(72389),i=a(67392),l=a(7094),u=a(12466);const p="tabList__CuJ",d="tabItem_LNqP";function c(e){const{lazy:t,block:a,defaultValue:o,values:c,groupId:h,className:m}=e,b=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=c??b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),k=(0,i.l)(g,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===o?o:o??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==v&&!g.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:w}=(0,l.U)(),[y,T]=(0,s.useState)(v),N=[],{blockElementScrollPositionUntilNextRender:S}=(0,u.o5)();if(null!=h){const e=f[h];null!=e&&e!==y&&g.some((t=>t.value===e))&&T(e)}const I=e=>{const t=e.currentTarget,a=N.indexOf(t),n=g[a].value;n!==y&&(S(t),T(n),null!=h&&w(h,String(n)))},O=e=>{let t=null;switch(e.key){case"Enter":I(e);break;case"ArrowRight":{const a=N.indexOf(e.currentTarget)+1;t=N[a]??N[0];break}case"ArrowLeft":{const a=N.indexOf(e.currentTarget)-1;t=N[a]??N[N.length-1];break}}t?.focus()};return s.createElement("div",{className:(0,r.Z)("tabs-container",p)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},m)},g.map((e=>{let{value:t,label:a,attributes:o}=e;return s.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>N.push(e),onKeyDown:O,onClick:I},o,{className:(0,r.Z)("tabs__item",d,o?.className,{"tabs__item--active":y===t})}),a??t)}))),t?(0,s.cloneElement)(b.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function h(e){const t=(0,o.Z)();return s.createElement(c,(0,n.Z)({key:String(t)},e))}},29382:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var n=a(87462),s=(a(67294),a(3905)),r=a(65488),o=a(85162);const i={id:"auth-messagebird",title:"Phone Auth with MessageBird",description:"How to set up and use Mobile OTP with MessageBird and Supabase."},l=void 0,u={unversionedId:"guides/auth/auth-messagebird",id:"guides/auth/auth-messagebird",title:"Phone Auth with MessageBird",description:"How to set up and use Mobile OTP with MessageBird and Supabase.",source:"@site/docs/guides/auth/auth-messagebird.mdx",sourceDirName:"guides/auth",slug:"/guides/auth/auth-messagebird",permalink:"/docs/guides/auth/auth-messagebird",draft:!1,editUrl:"https://github.com/docs/guides/auth/auth-messagebird.mdx",tags:[],version:"current",frontMatter:{id:"auth-messagebird",title:"Phone Auth with MessageBird",description:"How to set up and use Mobile OTP with MessageBird and Supabase."}},p={},d=[{value:"Overview",id:"overview",level:2},{value:"Steps",id:"steps",level:2},{value:"Finding your MessageBird credentials",id:"finding-your-messagebird-credentials",level:3},{value:"SMS custom template",id:"sms-custom-template",level:4},{value:"Using OTP with password based logins",id:"using-otp-with-password-based-logins",level:3},{value:"Using OTP as a passwordless sign-in mechanism",id:"using-otp-as-a-passwordless-sign-in-mechanism",level:3},{value:"Resources",id:"resources",level:2}],c={toc:d};function h(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"overview"},"Overview"),(0,s.kt)("p",null,"In this guide we'll show you how to authenticate your users with SMS based OTP (One-Time Password) tokens."),(0,s.kt)("p",null,"There are two reasons to use Supabase SMS OTP tokens:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"You want users to log in with mobile + password, and the mobile should be verified via SMS"),(0,s.kt)("li",{parentName:"ul"},"You want users to log in with mobile ONLY (i.e. passwordless login)")),(0,s.kt)("p",null,"We'll cover:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#finding-your-messagebird-credentials"},"Finding your MessageBird credentials")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#using-otp-with-password-based-logins"},"Using OTP with password based logins")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#using-otp-as-a-passwordless-sign-in-mechanism"},"Using OTP as a passwordless sign-in mechanism"))),(0,s.kt)("p",null,"What you'll need:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"A MessageBird account (sign up here: ",(0,s.kt)("a",{parentName:"li",href:"https://dashboard.messagebird.com/en/sign-up"},"https://dashboard.messagebird.com/en/sign-up"),")"),(0,s.kt)("li",{parentName:"ul"},"A Supabase project (create one here: ",(0,s.kt)("a",{parentName:"li",href:"https://app.supabase.com"},"https://app.supabase.com"),")"),(0,s.kt)("li",{parentName:"ul"},"A mobile phone capable of receiving SMS")),(0,s.kt)("h2",{id:"steps"},"Steps"),(0,s.kt)("h3",{id:"finding-your-messagebird-credentials"},"Finding your MessageBird credentials"),(0,s.kt)("p",null,"Start by logging into your MessageBird account and verify the mobile number you'll be using to test with: ",(0,s.kt)("a",{parentName:"p",href:"https://dashboard.messagebird.com/en/getting-started/sms"},"https://dashboard.messagebird.com/en/getting-started/sms")),(0,s.kt)("p",null,"This is the number that will be receiving the SMS OTPs."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Verify your own phone number",src:a(72101).Z,width:"2034",height:"1330"})),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Get your API Keys",src:a(50188).Z,width:"998",height:"724"})),(0,s.kt)("p",null,"Navigate to the ",(0,s.kt)("a",{parentName:"p",href:"https://dashboard.messagebird.com/en/settings/sms"},"dashboard settings")," to set the default originator. The messagebird originator is the name or number from which the message is sent.\nFor more information, you can refer to the messagebird article on choosing an originator ",(0,s.kt)("a",{parentName:"p",href:"https://support.messagebird.com/hc/en-us/articles/115002628665-Choosing-an-originator"},"here")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Set the default originator",src:a(4208).Z,width:"2294",height:"872"})),(0,s.kt)("p",null,"You will need the following values to get started:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Live API Key / Test API Key"),(0,s.kt)("li",{parentName:"ul"},"MessageBird originator")),(0,s.kt)("p",null,"Now go to the Auth > Settings page in the Supabase dashboard (",(0,s.kt)("a",{parentName:"p",href:"https://app.supabase.com/project/YOUR-PROJECT-REF/auth/settings"},"https://app.supabase.com/project/YOUR-PROJECT-REF/auth/settings"),")."),(0,s.kt)("p",null,"You should see an option to enable Phone Signup."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Enable Phone Sign-Up",src:a(97866).Z,width:"1018",height:"350"})),(0,s.kt)("p",null,"Toggle it on, and copy the 2 values over from the messagebird dashboard. Click save."),(0,s.kt)("p",null,"Note: If you use the Test API Key, the OTP will not be delivered to the mobile number specified but messagebird will log the response in the dashboard.\nIf the Live API Key is used instead, the OTP will be delivered and there will be a deduction in your free credits."),(0,s.kt)("p",null,"Plugin MessageBird credentials"),(0,s.kt)("p",null,"Now the backend should be setup, we can proceed to add our client-side code!"),(0,s.kt)("h4",{id:"sms-custom-template"},"SMS custom template"),(0,s.kt)("p",null,"The SMS message sent to a phone containing an OTP code can be customized. This is useful if you need to mention a brand name or display a website address."),(0,s.kt)("p",null,"Go to Auth > Templates page in the Supabase dashboard (",(0,s.kt)("a",{parentName:"p",href:"https://app.supabase.com/project/YOUR-PROJECT-REF/auth/templates"},"https://app.supabase.com/project/YOUR-PROJECT-REF/auth/templates"),")."),(0,s.kt)("p",null,"Use the variable ",(0,s.kt)("inlineCode",{parentName:"p"},".Code")," in the template to display the code."),(0,s.kt)("h3",{id:"using-otp-with-password-based-logins"},"Using OTP with password based logins"),(0,s.kt)("p",null,"In this use scenario we'll be using the user's mobile phone number as an alternative to an email address when signing up along with a password. You may want to think hard about the permanency of this however. It is not uncommon for mobile phone numbers to be recycled by phone networks when users cancel their phone contracts or move countries, therefore granting access to the user's account to whoever takes over the phone number in the future. Soon we'll add multi-factor auth, which will mitigate this risk, but for now you may want to give some thought to allowing your users to recover their account by some other means in an emergency."),(0,s.kt)("p",null,"Using supabase-js on the client you'll want to use the same ",(0,s.kt)("inlineCode",{parentName:"p"},"signUp")," method that you'd use for email based sign ups, but with the ",(0,s.kt)("inlineCode",{parentName:"p"},"phone")," param instead of the ",(0,s.kt)("inlineCode",{parentName:"p"},"email param"),":"),(0,s.kt)(r.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"JS",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let { user, error } = await supabase.auth.signUp({\n  phone: '+13334445555',\n  password: 'some-password',\n})\n"))),(0,s.kt)(o.Z,{value:"HTTP",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://cvwawazfelidkloqmbma.supabase.co/auth/v1/signup\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "phone": "+13334445555",\n  "password": "some-password"\n}\'\n')))),(0,s.kt)("p",null,"The user will now receive an SMS with a 6-digit pin that you will need to receive from them within 60-seconds before they can login to their account."),(0,s.kt)("p",null,"You should present a form to the user so they can input the 6 digit pin, then send it along with the phone number to ",(0,s.kt)("inlineCode",{parentName:"p"},"verifyOTP"),":"),(0,s.kt)(r.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"JS",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let { session, error } = await supabase.auth.verifyOTP({\n  phone: '+13334445555',\n  token: '123456',\n})\n"))),(0,s.kt)(o.Z,{value:"HTTP",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://cvwawazfelidkloqmbma.supabase.co/auth/v1/verify\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "type": "sms",\n  "phone": "+13334445555",\n  "token": "123456"\n}\'\n')))),(0,s.kt)("p",null,"If successful the user will now be logged in and you should receive a valid session like:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJhdXRoZW50aWNhdGVkIiwiZXhwIjoxNjI3MjkxNTc3LCJzdWIiOiJmYTA2NTQ1Zi1kYmI1LTQxY2EtYjk1NC1kOGUyOTg4YzcxOTEiLCJlbWFpbCI6IiIsInBob25lIjoiNjU4NzUyMjAyOSIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6InBob25lIn0sInVzZXJfbWV0YWRhdGEiOnt9LCJyb2xlIjoiYXV0aGVudGljYXRlZCJ9.1BqRi0NbS_yr1f6hnr4q3s1ylMR3c1vkiJ4e_N55dhM",\n  "token_type": "bearer",\n  "expires_in": 3600,\n  "refresh_token": "LSp8LglPPvf0DxGMSj-vaQ"\n}\n')),(0,s.kt)("p",null,"The access token can be sent in the Authorization header as a Bearer token for any CRUD operations on supabase-js. See our guide on ",(0,s.kt)("a",{parentName:"p",href:"/docs/guides/auth#row-level-security"},"Row Level Security")," for more info on restricting access on a user basis."),(0,s.kt)("p",null,"Also now that the mobile has been verified, the user can use the number and password to sign in without needing to verify their number each time:"),(0,s.kt)(r.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"JS",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let { user, error } = await supabase.auth.signInWithPassword({\n  phone: '+13334445555',\n  password: 'some-password',\n})\n"))),(0,s.kt)(o.Z,{value:"HTTP",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://cvwawazfelidkloqmbma.supabase.co/auth/v1/token?grant_type=password\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "phone": "+13334445555",\n  "password": "some-password"\n}\'\n')))),(0,s.kt)("h3",{id:"using-otp-as-a-passwordless-sign-in-mechanism"},"Using OTP as a passwordless sign-in mechanism"),(0,s.kt)("p",null,"In this scenario you are granting your user's the ability to login to their account without needing to set a password on their account, all they have to do to log in is verify their mobile each time using the OTP."),(0,s.kt)("p",null,"In javascript we can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"signIn")," method with a single parameter: ",(0,s.kt)("inlineCode",{parentName:"p"},"phone")),(0,s.kt)(r.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"JS",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let { user, error } = await supabase.auth.signInWithOtp({\n  phone: '+13334445555',\n})\n"))),(0,s.kt)(o.Z,{value:"HTTP",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://cvwawazfelidkloqmbma.supabase.co/auth/v1/otp\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "phone": "+13334445555"\n}\'\n')))),(0,s.kt)("p",null,"The second step is the same as the previous section, you need to collect the 6-digit pin from the user and pass it along with their phone number to the verify method:"),(0,s.kt)(r.Z,{defaultValue:"JS",values:[{label:"JavaScript",value:"JS"},{label:"HTTP",value:"HTTP"}],mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"JS",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"let { session, error } = await supabase.auth.verifyOTP({\n  phone: '+13334445555',\n  token: '123456',\n})\n"))),(0,s.kt)(o.Z,{value:"HTTP",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \'https://cvwawazfelidkloqmbma.supabase.co/auth/v1/verify\' \\\n-H "apikey: SUPABASE_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{\n  "type": "sms",\n  "phone": "+13334445555",\n  "token": "123456"\n}\'\n')))),(0,s.kt)("p",null,"and the response should also be the same as above:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJhdXRoZW50aWNhdGVkIiwiZXhwIjoxNjI3MjkxNTc3LCJzdWIiOiJmYTA2NTQ1Zi1kYmI1LTQxY2EtYjk1NC1kOGUyOTg4YzcxOTEiLCJlbWFpbCI6IiIsInBob25lIjoiNjU4NzUyMjAyOSIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6InBob25lIn0sInVzZXJfbWV0YWRhdGEiOnt9LCJyb2xlIjoiYXV0aGVudGljYXRlZCJ9.1BqRi0NbS_yr1f6hnr4q3s1ylMR3c1vkiJ4e_N55dhM",\n  "token_type": "bearer",\n  "expires_in": 3600,\n  "refresh_token": "LSp8LglPPvf0DxGMSj-vaQ"\n}\n')),(0,s.kt)("p",null,"The user does not have a password therefore will need to sign in via this method each time they want to access your service."),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://dashboard.messagebird.com/en/sign-up"},"MessageBird Signup")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://app.supabase.com"},"Supabase Dashboard")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/guides/auth#row-level-security"},"Supabase Row Level Security"))))}h.isMDXComponent=!0},72101:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/1-f7263443ba692b1b9ec7ed50300af79a.png"},50188:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/2-c84dc882470b171a392763e02235f1fc.png"},4208:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/3-f6278f1d09c4c7048fab70c6e1502d89.png"},97866:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/7-ce0c9c12b57587aa04b6ef38095247c4.png"}}]);