"use strict";(self.webpackChunkreference_docs=self.webpackChunkreference_docs||[]).push([[58022],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var s=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,s,l=function(e,t){if(null==e)return{};var a,s,l={},n=Object.keys(e);for(s=0;s<n.length;s++)a=n[s],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)a=n[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=s.createContext({}),d=function(e){var t=s.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return s.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},p=s.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),u=d(a),p=l,h=u["".concat(o,".").concat(p)]||u[p]||c[p]||n;return a?s.createElement(h,i(i({ref:t},m),{},{components:a})):s.createElement(h,i({ref:t},m))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,i=new Array(n);i[0]=p;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r[u]="string"==typeof e?e:l,i[1]=r;for(var d=2;d<n;d++)i[d]=a[d];return s.createElement.apply(null,i)}return s.createElement.apply(null,a)}p.displayName="MDXCreateElement"},87635:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>r,toc:()=>d});var s=a(87462),l=(a(67294),a(3905));a(65488),a(85162);const n={id:"auth-admin-updateuserbyid",title:"updateUserById()",slug:"/auth-admin-updateuserbyid",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml"},i=void 0,r={unversionedId:"generated/auth-admin-updateuserbyid",id:"generated/auth-admin-updateuserbyid",title:"updateUserById()",description:"Updates the user data.",source:"@site/_supabase_js/generated/auth-admin-updateuserbyid.mdx",sourceDirName:"generated",slug:"/auth-admin-updateuserbyid",permalink:"/docs/reference/javascript/auth-admin-updateuserbyid",draft:!1,editUrl:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml",tags:[],version:"current",frontMatter:{id:"auth-admin-updateuserbyid",title:"updateUserById()",slug:"/auth-admin-updateuserbyid",custom_edit_url:"https://github.com/supabase/supabase/edit/master/spec/supabase_js_v2.yml"}},o={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Updates a user&#39;s email.",id:"updates-a-users-email",level:3},{value:"Updates a user&#39;s password.",id:"updates-a-users-password",level:3},{value:"Updates a user&#39;s metadata.",id:"updates-a-users-metadata",level:3},{value:"Updates a user&#39;s app_metadata.",id:"updates-a-users-app_metadata",level:3},{value:"Confirms a user&#39;s email address.",id:"confirms-a-users-email-address",level:3},{value:"Confirms a user&#39;s phone number.",id:"confirms-a-users-phone-number",level:3}],m={toc:d};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,s.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Updates the user data."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.admin.updateUserById(\n  '6aa5d0d4-2a9f-4483-b6c8-0cf4c6c98ac4',\n  { user_metadata: { hello: 'world' } }\n)\n")),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("ul",{className:"method-list-group"},(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"uid"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"string"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. "))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"AdminUserAttributes"),(0,l.kt)("span",{className:"method-list-item-label-badge required"},"required"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"No description provided. ")),(0,l.kt)("ul",{className:"method-list-group"},(0,l.kt)("h5",{class:"method-list-title method-list-title-isChild expanded"},"Properties"),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"app_metadata"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"A custom data object to store the user's application specific metadata. This maps to the ",(0,l.kt)("inlineCode",{parentName:"p"},"auth.users.app_metadata")," column."),(0,l.kt)("p",null,"Only a service role can modify."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"app_metadata")," should be a JSON object that includes app-specific info, such as identity providers, roles, and other\naccess control information."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"ban_duration"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"string"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"Determines how long a user is banned for."),(0,l.kt)("p",null,'The format for the ban duration follows a strict sequence of decimal numbers with a unit suffix.\nValid time units are "ns", "us" (or "\xb5s"), "ms", "s", "m", "h".'),(0,l.kt)("p",null,"For example, some possible durations include: '300ms', '2h45m'."),(0,l.kt)("p",null,"Setting the ban duration to 'none' lifts the ban on the user."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"data"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"A custom data object to store the user's metadata. This maps to the ",(0,l.kt)("inlineCode",{parentName:"p"},"auth.users.user_metadata")," column."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"data")," should be a JSON object that includes user-specific info, such as their first and last name."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"email"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"string"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"The user's email."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"email_confirm"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"boolean"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"Confirms the user's email address if set to true."),(0,l.kt)("p",null,"Only a service role can modify."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"password"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"string"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"The user's password."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"phone"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"string"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"The user's phone."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"phone_confirm"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"boolean"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"Confirms the user's phone number if set to true."),(0,l.kt)("p",null,"Only a service role can modify."))),(0,l.kt)("li",{className:"method-list-item"},(0,l.kt)("h4",{className:"method-list-item-label"},(0,l.kt)("span",{className:"method-list-item-label-name"},"user_metadata"),(0,l.kt)("span",{className:"method-list-item-label-badge false"},"optional"),(0,l.kt)("span",{className:"method-list-item-validation"},(0,l.kt)("code",null,"object"))),(0,l.kt)("div",{class:"method-list-item-description"},(0,l.kt)("p",null,"A custom data object to store the user's metadata. This maps to the ",(0,l.kt)("inlineCode",{parentName:"p"},"auth.users.user_metadata")," column."),(0,l.kt)("p",null,"Only a service role can modify."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"user_metadata")," should be a JSON object that includes user-specific info, such as their first and last name."),(0,l.kt)("p",null,"Note: When using the GoTrueAdminApi and wanting to modify a user's metadata,\nthis attribute is used instead of UserAttributes data.")))))),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"updates-a-users-email"},"Updates a user's email."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.admin.updateUserById(\n  '6aa5d0d4-2a9f-4483-b6c8-0cf4c6c98ac4',\n  { email: 'new@email.com' }\n)\n")),(0,l.kt)("h3",{id:"updates-a-users-password"},"Updates a user's password."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.admin.updateUserById(\n  '6aa5d0d4-2a9f-4483-b6c8-0cf4c6c98ac4',\n  { password: 'new_password' }\n)\n")),(0,l.kt)("h3",{id:"updates-a-users-metadata"},"Updates a user's metadata."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.admin.updateUserById(\n  '6aa5d0d4-2a9f-4483-b6c8-0cf4c6c98ac4',\n  { user_metadata: { hello: 'world' } }\n)\n")),(0,l.kt)("h3",{id:"updates-a-users-app_metadata"},"Updates a user's app_metadata."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.admin.updateUserById(\n  '6aa5d0d4-2a9f-4483-b6c8-0cf4c6c98ac4',\n  { app_metadata: { plan: 'trial' } }\n)\n")),(0,l.kt)("h3",{id:"confirms-a-users-email-address"},"Confirms a user's email address."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.admin.updateUserById(\n  '6aa5d0d4-2a9f-4483-b6c8-0cf4c6c98ac4',\n  { email_confirm: true }\n)\n")),(0,l.kt)("h3",{id:"confirms-a-users-phone-number"},"Confirms a user's phone number."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { data: user, error } = await supabase.auth.admin.updateUserById(\n  '6aa5d0d4-2a9f-4483-b6c8-0cf4c6c98ac4',\n  { phone_confirm: true }\n)\n")))}u.isMDXComponent=!0},85162:(e,t,a)=>{a.d(t,{Z:()=>i});var s=a(67294),l=a(86010);const n="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return s.createElement("div",{role:"tabpanel",className:(0,l.Z)(n,i),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>p});var s=a(87462),l=a(67294),n=a(86010),i=a(72389),r=a(67392),o=a(7094),d=a(12466);const m="tabList__CuJ",u="tabItem_LNqP";function c(e){const{lazy:t,block:a,defaultValue:i,values:c,groupId:p,className:h}=e,b=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=c??b.map((e=>{let{props:{value:t,label:a,attributes:s}}=e;return{value:t,label:a,attributes:s}})),f=(0,r.l)(k,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==v&&!k.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:y}=(0,o.U)(),[g,w]=(0,l.useState)(v),_=[],{blockElementScrollPositionUntilNextRender:j}=(0,d.o5)();if(null!=p){const e=N[p];null!=e&&e!==g&&k.some((t=>t.value===e))&&w(e)}const O=e=>{const t=e.currentTarget,a=_.indexOf(t),s=k[a].value;s!==g&&(j(t),w(s),null!=p&&y(p,String(s)))},T=e=>{let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const a=_.indexOf(e.currentTarget)+1;t=_[a]??_[0];break}case"ArrowLeft":{const a=_.indexOf(e.currentTarget)-1;t=_[a]??_[_.length-1];break}}t?.focus()};return l.createElement("div",{className:(0,n.Z)("tabs-container",m)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":a},h)},k.map((e=>{let{value:t,label:a,attributes:i}=e;return l.createElement("li",(0,s.Z)({role:"tab",tabIndex:g===t?0:-1,"aria-selected":g===t,key:t,ref:e=>_.push(e),onKeyDown:T,onClick:O},i,{className:(0,n.Z)("tabs__item",u,i?.className,{"tabs__item--active":g===t})}),a??t)}))),t?(0,l.cloneElement)(b.filter((e=>e.props.value===g))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}function p(e){const t=(0,i.Z)();return l.createElement(c,(0,s.Z)({key:String(t)},e))}}}]);